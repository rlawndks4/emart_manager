[{"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\index.js":"1","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\App.js":"2","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\serviceWorker.js":"3","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\index.js":"4","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\components\\NonAuthLayout.js":"5","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\routes\\allRoutes.js":"6","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\routes\\middleware\\Authmiddleware.js":"7","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\components\\VerticalLayout\\index.js":"8","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\reducers.js":"9","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\sagas.js":"10","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\components\\VerticalLayout\\Sidebar.js":"11","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\components\\VerticalLayout\\Header.js":"12","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\actions.js":"13","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\components\\VerticalLayout\\Footer.js":"14","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\pages\\KioskManagerPage\\AddBrand.js":"15","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\pages\\KioskManagerPage\\AddAd.js":"16","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\pages\\KioskManagerPage\\AddKiosk.js":"17","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\pages\\KioskManagerPage\\KioskManager\\KioskRevise.js":"18","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\pages\\KioskManagerPage\\KioskCustomers\\CustomerList.js":"19","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\pages\\KioskManagerPage\\AddCustomers.js":"20","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\pages\\KioskManagerPage\\KioskCustomers\\CustomerRevise.js":"21","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\pages\\KioskManagerPage\\KioskAd\\AdRevise.js":"22","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\pages\\KioskManagerPage\\KioskManager\\KioskList.js":"23","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\pages\\KioskManagerPage\\KioskAd\\AdList.js":"24","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\pages\\KioskManagerPage\\KioskBrand\\BrandRevise.js":"25","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\pages\\KioskManagerPage\\KioskProduct\\ProductList.js":"26","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\pages\\KioskManagerPage\\KioskProduct\\ProductRevise.js":"27","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\pages\\KioskManagerPage\\AddProduct.js":"28","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\pages\\Authentication\\Login.js":"29","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\pages\\KioskManagerPage\\KioskBrand\\BrandList.js":"30","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\components\\CommonForBoth\\Rightbar.js":"31","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\layout\\reducer.js":"32","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\calendar\\saga.js":"33","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\calendar\\reducer.js":"34","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\e-commerce\\saga.js":"35","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\layout\\saga.js":"36","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\chat\\saga.js":"37","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\chat\\reducer.js":"38","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\invoices\\reducer.js":"39","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\e-commerce\\reducer.js":"40","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\invoices\\saga.js":"41","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\contacts\\reducer.js":"42","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\contacts\\saga.js":"43","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\auth\\login\\reducer.js":"44","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\auth\\register\\saga.js":"45","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\auth\\register\\reducer.js":"46","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\auth\\forgetpwd\\saga.js":"47","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\auth\\login\\saga.js":"48","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\auth\\profile\\reducer.js":"49","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\auth\\profile\\saga.js":"50","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\auth\\forgetpwd\\reducer.js":"51","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\components\\VerticalLayout\\SidebarContent.js":"52","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\auth\\register\\actions.js":"53","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\auth\\login\\actions.js":"54","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\layout\\actions.js":"55","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\calendar\\actions.js":"56","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\auth\\forgetpwd\\actions.js":"57","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\auth\\profile\\actions.js":"58","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\chat\\actions.js":"59","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\e-commerce\\actions.js":"60","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\invoices\\actions.js":"61","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\contacts\\actions.js":"62","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\components\\CommonForBoth\\TopbarDropdown\\ProfileMenu.js":"63","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\components\\Common\\Breadcrumb.js":"64","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\invoices\\actionTypes.js":"65","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\e-commerce\\actionTypes.js":"66","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\contacts\\actionTypes.js":"67","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\chat\\actionTypes.js":"68","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\calendar\\actionTypes.js":"69","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\layout\\actionTypes.js":"70","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\helpers\\fakebackend_helper.js":"71","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\auth\\forgetpwd\\actionTypes.js":"72","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\auth\\profile\\actionTypes.js":"73","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\helpers\\firebase_helper.js":"74","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\auth\\login\\actionTypes.js":"75","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\auth\\register\\actionTypes.js":"76","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\helpers\\url_helper.js":"77","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\helpers\\api_helper.js":"78","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\helpers\\jwt-token-access\\accessToken.js":"79"},{"size":374,"mtime":1627771434000,"results":"80","hashOfConfig":"81"},{"size":2479,"mtime":1628482632117,"results":"82","hashOfConfig":"81"},{"size":5315,"mtime":1627771434000,"results":"83","hashOfConfig":"81"},{"size":452,"mtime":1627771434000,"results":"84","hashOfConfig":"81"},{"size":757,"mtime":1628863694923,"results":"85","hashOfConfig":"81"},{"size":11717,"mtime":1628932147696,"results":"86","hashOfConfig":"81"},{"size":549,"mtime":1628334054096,"results":"87","hashOfConfig":"81"},{"size":3607,"mtime":1628863733326,"results":"88","hashOfConfig":"81"},{"size":754,"mtime":1627771434000,"results":"89","hashOfConfig":"81"},{"size":773,"mtime":1627771434000,"results":"90","hashOfConfig":"81"},{"size":1112,"mtime":1628930620163,"results":"91","hashOfConfig":"81"},{"size":2771,"mtime":1628335399869,"results":"92","hashOfConfig":"81"},{"size":446,"mtime":1627771434000,"results":"93","hashOfConfig":"81"},{"size":625,"mtime":1628173210652,"results":"94","hashOfConfig":"81"},{"size":12242,"mtime":1629135569557,"results":"95","hashOfConfig":"81"},{"size":12991,"mtime":1629135578489,"results":"96","hashOfConfig":"81"},{"size":9216,"mtime":1629135536768,"results":"97","hashOfConfig":"81"},{"size":9329,"mtime":1629135598992,"results":"98","hashOfConfig":"81"},{"size":11260,"mtime":1629174189884,"results":"99","hashOfConfig":"81"},{"size":13850,"mtime":1629175737934,"results":"100","hashOfConfig":"81"},{"size":12608,"mtime":1629175541694,"results":"101","hashOfConfig":"81"},{"size":13672,"mtime":1629135670213,"results":"102","hashOfConfig":"81"},{"size":17925,"mtime":1629135615518,"results":"103","hashOfConfig":"81"},{"size":9335,"mtime":1629135684288,"results":"104","hashOfConfig":"81"},{"size":14597,"mtime":1629720354385,"results":"105","hashOfConfig":"81"},{"size":11299,"mtime":1629973359694,"results":"106","hashOfConfig":"81"},{"size":31804,"mtime":1629972889846,"results":"107","hashOfConfig":"81"},{"size":31212,"mtime":1629973305733,"results":"108","hashOfConfig":"81"},{"size":5312,"mtime":1628692845607,"results":"109","hashOfConfig":"81"},{"size":10026,"mtime":1629135661588,"results":"110","hashOfConfig":"81"},{"size":13370,"mtime":1627771434000,"results":"111","hashOfConfig":"81"},{"size":1764,"mtime":1627771434000,"results":"112","hashOfConfig":"81"},{"size":1912,"mtime":1627771434000,"results":"113","hashOfConfig":"81"},{"size":1741,"mtime":1627771434000,"results":"114","hashOfConfig":"81"},{"size":2197,"mtime":1627771434000,"results":"115","hashOfConfig":"81"},{"size":4814,"mtime":1628866270596,"results":"116","hashOfConfig":"81"},{"size":1514,"mtime":1627771434000,"results":"117","hashOfConfig":"81"},{"size":1545,"mtime":1627771434000,"results":"118","hashOfConfig":"81"},{"size":781,"mtime":1627771434000,"results":"119","hashOfConfig":"81"},{"size":1827,"mtime":1627771434000,"results":"120","hashOfConfig":"81"},{"size":982,"mtime":1627771434000,"results":"121","hashOfConfig":"81"},{"size":751,"mtime":1627771434000,"results":"122","hashOfConfig":"81"},{"size":910,"mtime":1627771434000,"results":"123","hashOfConfig":"81"},{"size":770,"mtime":1627771434000,"results":"124","hashOfConfig":"81"},{"size":1512,"mtime":1627771434000,"results":"125","hashOfConfig":"81"},{"size":903,"mtime":1627771434000,"results":"126","hashOfConfig":"81"},{"size":1900,"mtime":1627771434000,"results":"127","hashOfConfig":"81"},{"size":2657,"mtime":1627771434000,"results":"128","hashOfConfig":"81"},{"size":648,"mtime":1627771434000,"results":"129","hashOfConfig":"81"},{"size":1434,"mtime":1627771434000,"results":"130","hashOfConfig":"81"},{"size":734,"mtime":1627771434000,"results":"131","hashOfConfig":"81"},{"size":5275,"mtime":1628514278989,"results":"132","hashOfConfig":"81"},{"size":439,"mtime":1627771434000,"results":"133","hashOfConfig":"81"},{"size":789,"mtime":1627771434000,"results":"134","hashOfConfig":"81"},{"size":1130,"mtime":1627771434000,"results":"135","hashOfConfig":"81"},{"size":1656,"mtime":1627771434000,"results":"136","hashOfConfig":"81"},{"size":489,"mtime":1627771434000,"results":"137","hashOfConfig":"81"},{"size":494,"mtime":1627771434000,"results":"138","hashOfConfig":"81"},{"size":1302,"mtime":1627771434000,"results":"139","hashOfConfig":"81"},{"size":1979,"mtime":1627771434000,"results":"140","hashOfConfig":"81"},{"size":741,"mtime":1627771434000,"results":"141","hashOfConfig":"81"},{"size":676,"mtime":1627771434000,"results":"142","hashOfConfig":"81"},{"size":2730,"mtime":1628326618802,"results":"143","hashOfConfig":"81"},{"size":969,"mtime":1628926119564,"results":"144","hashOfConfig":"81"},{"size":362,"mtime":1627771434000,"results":"145","hashOfConfig":"81"},{"size":1047,"mtime":1627771434000,"results":"146","hashOfConfig":"81"},{"size":349,"mtime":1627771434000,"results":"147","hashOfConfig":"81"},{"size":828,"mtime":1627771434000,"results":"148","hashOfConfig":"81"},{"size":782,"mtime":1627771434000,"results":"149","hashOfConfig":"81"},{"size":549,"mtime":1627771434000,"results":"150","hashOfConfig":"81"},{"size":4114,"mtime":1627771434000,"results":"151","hashOfConfig":"81"},{"size":175,"mtime":1627771434000,"results":"152","hashOfConfig":"81"},{"size":192,"mtime":1627771434000,"results":"153","hashOfConfig":"81"},{"size":4879,"mtime":1627771434000,"results":"154","hashOfConfig":"81"},{"size":270,"mtime":1627771434000,"results":"155","hashOfConfig":"81"},{"size":172,"mtime":1627771434000,"results":"156","hashOfConfig":"81"},{"size":1603,"mtime":1627771434000,"results":"157","hashOfConfig":"81"},{"size":984,"mtime":1627771434000,"results":"158","hashOfConfig":"81"},{"size":310,"mtime":1627771434000,"results":"159","hashOfConfig":"81"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"163"},"e661gm",{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"163"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"163"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"163"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"163"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"163"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"163"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"163"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"163"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"163"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"163"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"163"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"163"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"163"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"163"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"163"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\index.js",["335","336"],"import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport { Provider } from \"react-redux\"\n\nimport store from \"./store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    \n      <App />\n    \n  </Provider>\n  ,\n  document.getElementById(\"root\")\n)\n\n\n",["337","338"],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\App.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\serviceWorker.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\index.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\components\\NonAuthLayout.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\routes\\allRoutes.js",["339"],"import React from \"react\"\nimport { Redirect } from \"react-router-dom\"\n\n// // // Pages Component\n// import Chat from \"../pages/Chat/Chat\"\n\n// // Dashboard\n// import Dashboard from \"../pages/Dashboard/index\"\n\n// // Pages Calendar\n// import Calendar from \"../pages/Calendar/index\"\n\n// // //Data\n// import Data from \"../Data\"\n\nimport KioskRevise from \"../pages/KioskManagerPage/KioskManager/KioskRevise\"\nimport CustomerRevise from \"../pages/KioskManagerPage/KioskCustomers/CustomerRevise\"\nimport AdRevise from \"../pages/KioskManagerPage/KioskAd/AdRevise\"\nimport ProductRevise from \"../pages/KioskManagerPage/KioskProduct/ProductRevise\"\nimport BrandRevise from \"../pages/KioskManagerPage/KioskBrand/BrandRevise\"\n\nimport KioskList from \"../pages/KioskManagerPage/KioskManager/KioskList\"\nimport CustomerList from \"../pages/KioskManagerPage/KioskCustomers/CustomerList\"\nimport AdList from \"../pages/KioskManagerPage/KioskAd/AdList\"\nimport ProductList from \"../pages/KioskManagerPage/KioskProduct/ProductList\"\nimport BrandList from \"../pages/KioskManagerPage/KioskBrand/BrandList\"\n\nimport AddProduct from \"../pages/KioskManagerPage/AddProduct\"\nimport AddAd from \"../pages/KioskManagerPage/AddAd\"\nimport AddCustomers from \"../pages/KioskManagerPage/AddCustomers\"\nimport AddKiosk from \"../pages/KioskManagerPage/AddKiosk\"\nimport AddBrand from \"../pages/KioskManagerPage/AddBrand\"\n//Email\n// import EmailInbox from \"../pages/Email/email-inbox\"\n// import EmailRead from \"../pages/Email/email-read\"\n// import EmailBasicTemplte from \"../pages/Email/email-basic-templte\"\n// import EmailAlertTemplte from \"../pages/Email/email-template-alert\"\n// import EmailTemplateBilling from \"../pages/Email/email-template-billing\"\n\n// //Invoices\n// import InvoicesList from \"../pages/Invoices/invoices-list\"\n// import InvoiceDetail from \"../pages/Invoices/invoices-detail\"\n\n// //Contacts\n// import ContactsGrid from \"../pages/Contacts/contacts-grid\"\n// import ContactsList from \"../pages/Contacts/ContactList/contacts-list\"\n// import ContactsProfile from \"../pages/Contacts/ContactsProfile/contacts-profile\"\n\n// //Pages\n// import PagesStarter from \"../pages/Utility/pages-starter\"\n// import PagesMaintenance from \"../pages/Utility/pages-maintenance\"\n// import PagesComingsoon from \"../pages/Utility/pages-comingsoon\"\n// import PagesTimeline from \"../pages/Utility/pages-timeline\"\n// import PagesFaqs from \"../pages/Utility/pages-faqs\"\n// import PagesPricing from \"../pages/Utility/pages-pricing\"\n// import Pages404 from \"../pages/Utility/pages-404\"\n// import Pages500 from \"../pages/Utility/pages-500\"\n\n// //Ui\n// import UiAlert from \"../pages/Ui/UiAlert\"\n// import UiButtons from \"../pages/Ui/UiButtons\"\n// import UiCards from \"../pages/Ui/UiCards\"\n// import UiCarousel from \"../pages/Ui/UiCarousel\"\n// import UiColors from \"../pages/Ui/UiColors\"\n// import UiDropdown from \"../pages/Ui/UiDropdown\"\n// import UiGeneral from \"../pages/Ui/UiGeneral\"\n// import UiGrid from \"../pages/Ui/UiGrid\"\n// import UiImages from \"../pages/Ui/UiImages\"\n// import UiLightbox from \"../pages/Ui/UiLightbox\"\n// import UiModal from \"../pages/Ui/UiModal\"\n// import UiProgressbar from \"../pages/Ui/UiProgressbar\"\n// import UiSweetAlert from \"../pages/Ui/UiSweetAlert\"\n// import UiTabsAccordions from \"../pages/Ui/UiTabsAccordions\"\n// import UiTypography from \"../pages/Ui/UiTypography\"\n// import UiVideo from \"../pages/Ui/UiVideo\"\n// import UiSessionTimeout from \"../pages/Ui/UiSessionTimeout\"\n// import UiRating from \"../pages/Ui/UiRating\"\n// import UiRangeSlider from \"../pages/Ui/UiRangeSlider\"\n// import UiNotifications from \"../pages/Ui/ui-notifications\"\n// import UiImageCropper from \"../pages/Ui/ui-image-cropper\"\n\n// // Forms\n// import BasicElements from \"../pages/Forms/BasicElements\"\n// import FormLayouts from \"../pages/Forms/FormLayouts\"\n// import FormAdvanced from \"../pages/Forms/FormAdvanced\"\n// import FormEditors from \"../pages/Forms/FormEditors\"\n// import FormValidations from \"../pages/Forms/FormValidations\"\n// import FormMask from \"../pages/Forms/FormMask\"\n// import FormRepeater from \"../pages/Forms/FormRepeater\"\n// import FormUpload from \"../pages/Forms/FormUpload\"\n// import FormWizard from \"../pages/Forms/FormWizard\"\n// import FormXeditable from \"../pages/Forms/FormXeditable\"\n\n// //Tables\n// import BasicTables from \"../pages/Tables/BasicTables\"\n// import DatatableTables from \"../pages/Tables/DatatableTables\"\n// import ResponsiveTables from \"../pages/Tables/ResponsiveTables\"\n// import EditableTables from \"../pages/Tables/EditableTables\"\n\n// // Charts\n// import ChartApex from \"../pages/Charts/Apexcharts\"\n// import ChartjsChart from \"../pages/Charts/ChartjsChart\"\n// import EChart from \"../pages/Charts/EChart\"\n// import SparklineChart from \"../pages/Charts/SparklineChart\"\n// import ChartsKnob from \"../pages/Charts/charts-knob\"\n\n// //Icons\n\n// import IconUnicons from \"../pages/Icons/IconUnicons\"\n// import IconBoxicons from \"../pages/Icons/IconBoxicons\"\n// import IconDripicons from \"../pages/Icons/IconDripicons\"\n// import IconMaterialdesign from \"../pages/Icons/IconMaterialdesign\"\n// import IconFontawesome from \"../pages/Icons/IconFontawesome\"\n\n// // Maps\n// import MapsGoogle from \"../pages/Maps/MapsGoogle\"\n// import MapsVector from \"../pages/Maps/MapsVector\"\n// import MapsLeaflet from \"../pages/Maps/MapsLeaflet\"\n\n// // Authentication related pages\n import Login from \"../pages/Authentication/Login\"\n// import Logout from \"../pages/Authentication/Logout\"\n// import Register from \"../pages/Authentication/Register\"\n// import ForgetPwd from \"../pages/Authentication/ForgetPassword\"\n\n// //  // Inner Authentication\n// import Login1 from \"../pages/AuthenticationInner/Login\"\n// import Register1 from \"../pages/AuthenticationInner/Register\"\n// import Recoverpw from \"../pages/AuthenticationInner/Recoverpw\"\n// import LockScreen from \"../pages/AuthenticationInner/auth-lock-screen\"\n\n// // Profile\n// import UserProfile from \"../pages/Authentication/user-profile\"\n\n\nconst userRoutes = [\n  // { path: \"/dashboard\", component: Dashboard },\n  // { path: \"/calendar\", component: Calendar },\n  // //chat\n  // { path: \"/chat\", component: Chat },\n\n  // //Data\n  // { path: \"/data\", component: Data},\n\n\n\n\n  //수정\n  { path: \"/kiosk-revise\", component: KioskRevise },\n  { path: \"/customer-revise\", component: CustomerRevise },\n  { path: \"/ad-revise\", component: AdRevise },\n  { path: \"/product-revise\", component: ProductRevise },\n  { path: \"/brand-revise\", component: BrandRevise},\n  //리스트\n  { path: \"/ad-list\", component: AdList },\n  { path: \"/customer-list\", component: CustomerList },\n  { path: \"/kiosk-list\", component: KioskList },\n  { path: \"/product-list\", component: ProductList },\n  { path: \"/brand-list\", component: BrandList },\n  //추가\n  { path: \"/add-product\", component: AddProduct },\n  { path: \"/add-ad\", component: AddAd },\n  { path: \"/add-customer\", component: AddCustomers },\n  { path: \"/add-kiosk\", component: AddKiosk },\n  // { path: \"/add-brand\", component: AddBrand},\n\n  // //Email\n  // { path: \"/email-inbox\", component: EmailInbox },\n  // { path: \"/email-read\", component: EmailRead },\n  // { path: \"/email-template-basic\", component: EmailBasicTemplte },\n  // { path: \"/email-template-alert\", component: EmailAlertTemplte },\n  // { path: \"/email-template-billing\", component: EmailTemplateBilling },\n\n  // //Invoices\n  // { path: \"/invoices-list\", component: InvoicesList },\n  // { path: \"/invoices-detail\", component: InvoiceDetail },\n  // { path: \"/invoices-detail/:id\", component: InvoiceDetail },\n\n  // // Contacts\n  // { path: \"/contacts-grid\", component: ContactsGrid },\n  // { path: \"/contacts-list\", component: ContactsList },\n  // { path: \"/contacts-profile\", component: ContactsProfile },\n\n  // //Utility\n  // { path: \"/pages-starter\", component: PagesStarter },\n  // { path: \"/pages-timeline\", component: PagesTimeline },\n  // { path: \"/pages-faqs\", component: PagesFaqs },\n  // { path: \"/pages-pricing\", component: PagesPricing },\n\n  // Ui\n  // { path: \"/ui-alerts\", component: UiAlert },\n  // { path: \"/ui-buttons\", component: UiButtons },\n  // { path: \"/ui-cards\", component: UiCards },\n  // { path: \"/ui-carousel\", component: UiCarousel },\n  // { path: \"/ui-colors\", component: UiColors },\n  // { path: \"/ui-dropdowns\", component: UiDropdown },\n  // { path: \"/ui-general\", component: UiGeneral },\n  // { path: \"/ui-grid\", component: UiGrid },\n  // { path: \"/ui-images\", component: UiImages },\n  // { path: \"/ui-lightbox\", component: UiLightbox },\n  // { path: \"/ui-modals\", component: UiModal },\n  // { path: \"/ui-progressbars\", component: UiProgressbar },\n  // { path: \"/ui-sweet-alert\", component: UiSweetAlert },\n  // { path: \"/ui-tabs-accordions\", component: UiTabsAccordions },\n  // { path: \"/ui-typography\", component: UiTypography },\n  // { path: \"/ui-video\", component: UiVideo },\n  // { path: \"/ui-session-timeout\", component: UiSessionTimeout },\n  // { path: \"/ui-rating\", component: UiRating },\n  // { path: \"/ui-rangeslider\", component: UiRangeSlider },\n  // { path: \"/ui-notifications\", component: UiNotifications },\n  // { path: \"/ui-image-cropper\", component: UiImageCropper },\n\n  // // Forms\n  // { path: \"/basic-elements\", component: BasicElements },\n  // { path: \"/form-layouts\", component: FormLayouts },\n  // { path: \"/form-advanced\", component: FormAdvanced },\n  // { path: \"/form-editors\", component: FormEditors },\n  // { path: \"/form-mask\", component: FormMask },\n  // { path: \"/form-repeater\", component: FormRepeater },\n  // { path: \"/form-uploads\", component: FormUpload },\n  // { path: \"/form-wizard\", component: FormWizard },\n  // { path: \"/form-validation\", component: FormValidations },\n  // { path: \"/form-xeditable\", component: FormXeditable },\n\n  // // Tables\n  // { path: \"/tables-basic\", component: BasicTables },\n  // { path: \"/tables-datatable\", component: DatatableTables },\n  // { path: \"/tables-responsive\", component: ResponsiveTables },\n  // { path: \"/tables-editable\", component: EditableTables },\n\n  // //Charts\n  // { path: \"/apex-charts\", component: ChartApex },\n  // { path: \"/chartjs-charts\", component: ChartjsChart },\n  // { path: \"/e-charts\", component: EChart },\n  // { path: \"/sparkline-charts\", component: SparklineChart },\n  // { path: \"/charts-knob\", component: ChartsKnob },\n\n  // // Icons\n  // { path: \"/icons-unicons\", component: IconUnicons },\n  // { path: \"/icons-boxicons\", component: IconBoxicons },\n  // { path: \"/icons-dripicons\", component: IconDripicons },\n  // { path: \"/icons-materialdesign\", component: IconMaterialdesign },\n  // { path: \"/icons-fontawesome\", component: IconFontawesome },\n\n  // // Maps\n  // { path: \"/maps-google\", component: MapsGoogle },\n  // { path: \"/maps-vector\", component: MapsVector },\n  // { path: \"/maps-leaflet\", component: MapsLeaflet },\n\n    // // //profile\n    // { path: \"/profile\", component: UserProfile },\n\n  // this route should be at the end of all other routes\n  { path: \"/\", exact: true, component: () => <Redirect to=\"/login\" /> },\n]\n\nconst authRoutes = [\n\n  // { path: \"/logout\", component: Logout },\n  { path: \"/login\", component: Login },\n  // { path: \"/forgot-password\", component: ForgetPwd },\n  // { path: \"/register\", component: Register },\n  \n  // { path: \"/pages-maintenance\", component: PagesMaintenance },\n  // { path: \"/pages-comingsoon\", component: PagesComingsoon },\n  // { path: \"/pages-404\", component: Pages404 },\n  // { path: \"/pages-500\", component: Pages500 },\n\n    // // Authentication Inner\n    // { path: \"/pages-login\", component: Login1 },\n    // { path: \"/pages-register\", component: Register1 },\n    // { path: \"/page-recoverpw\", component: Recoverpw },\n    // { path: \"/auth-lock-screen\", component: LockScreen },\n]\n\nexport { userRoutes, authRoutes }","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\routes\\middleware\\Authmiddleware.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\components\\VerticalLayout\\index.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\reducers.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\sagas.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\components\\VerticalLayout\\Sidebar.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\components\\VerticalLayout\\Header.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\actions.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\components\\VerticalLayout\\Footer.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\pages\\KioskManagerPage\\AddBrand.js",["340","341","342","343","344","345","346"],"import React, { useState, useEffect } from \"react\"\nimport {\n  Container,\n  Row,\n  Col,\n  Input,\n  Collapse,\n  Card,\n  Form,\n  Label,\n  Media\n} from \"reactstrap\"\nimport SweetAlert from \"react-bootstrap-sweetalert\"\nimport { Link } from \"react-router-dom\"\n//Import Breadcrumb\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\"\nimport axios from 'axios'\nimport { useHistory } from 'react-router';\nimport cancel from \"./cancel.png\"\nimport save from \"./save.png\"\nimport up from \"./up.png\"\nimport down from \"./down.png\"\nconst AddBrand = () => {\n  const history = useHistory()\n  const [isOpen, setIsOpen] = useState(true);\n  const toggle = () => setIsOpen(!isOpen);\n  const [with_save, setwith_save] = useState(false);\n  const [with_cancel, setwith_cancel] = useState(false);\n  const [with_good, setwith_good] = useState(false);\n\n  const [brandName, setBrandName] = useState(\"\");\n  const [class1, setClass1] = useState(\"\");\n  const [class2, setClass2] = useState(\"\");\n  const [class3, setClass3] = useState(\"\");\n  const [class4, setClass4] = useState(\"\");\n  const [checkAddBrand, setCheckAddBrand] = useState(false);\n\n  const isAdmin = async () => {\n\n    const { data: response } = await axios.get('/api/auth')\n\n    if (!response.third) {\n      alert('회원만 접근 가능합니다.')\n      history.push('/login')\n    }\n    else {\n      if (!response.first) {\n        alert('개발자만 접근 가능합니다.')\n        history.push('/product-list')\n      } else {\n\n      }\n    }\n  }\n  useEffect(() => {\n    isAdmin()\n  }, [])\n\n  const onSubmit = async (e) => {\n    e.preventDefault()\n    if (checkAddBrand) {\n      const res = await axios.post('/api/brand', { brandName, class1, class2, class3, class4 })\n        .catch(err => console.log(err))\n\n      setwith_save(false)\n      setwith_good(true)\n\n    } else {\n      alert('필수정보가 입력되지 않았습니다.')\n      setwith_save(false)\n    }\n  };\n\n  useEffect(() => {\n    if (\n      brandName.length === 0 ||\n      class1.length === 0 ||\n      class2.length === 0 ||\n      class3.length === 0 ||\n      class4.length === 0\n    ) {\n      setCheckAddBrand(false)\n    } else {\n      setCheckAddBrand(true)\n    }\n  })\n  const onChangeBrand = (e) => {\n    setBrandName(e.target.value)\n  }\n  const onChangeClass1 = (e) => {\n    setClass1(e.target.value)\n  }\n  const onChangeClass2 = (e) => {\n    setClass2(e.target.value)\n  }\n  const onChangeClass3 = (e) => {\n    setClass3(e.target.value)\n  }\n  const onChangeClass4 = (e) => {\n    setClass4(e.target.value)\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"page-content\" style={{color:'#596275'}}>\n        <Container fluid style={{fontFamily:'NanumGothic'}}>\n          {/* Render Breadcrumb */}\n          <Breadcrumbs breadcrumbItem=\"브랜드 관리\" />\n\n          <div className=\"checkout-tabs\">\n            <Row>\n              <Col xl=\"12\">\n                <div className=\"custom-accordion\">\n                  <Card>\n                    <Link onClick={toggle} className=\"text-dark\" to=\"#\">\n                      <div className=\"p-4\">\n                        <Media className=\"d-flex align-items-center\">\n                          <div className=\"me-3\">\n                            <div className=\"avatar-xs\">\n                              <div className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\n                                01\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"flex-1 overflow-hidden\">\n                            <h5 className=\"font-size-16 mb-1\" style={{ fontFamily: 'NanumGothic', fontWeight: 'bold' }}>브랜드 추가</h5>\n                            <p className=\"text-muted text-truncate mb-0\">아래의 모든 정보를 입력하세요.</p>\n                          </div>\n                          <i className=\"mdi mdi-chevron-up accor-down-icon font-size-24\"></i>\n                        </Media>\n                      </div>\n                    </Link>\n                    <Collapse isOpen={isOpen}>\n                      <div className=\"p-4 border-top\">\n                        <Form>\n                          <div>\n                            <Row>\n                              <Col lg={2}>\n                                <div className=\"mb-3 mb-4\">\n                                  <Label\n                                    htmlFor=\"billing-name\"\n\n                                    className=\"form-label\"\n                                  >\n                                    브랜드\n                                  </Label>\n                                  <Input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Input Brand\"\n                                    style={{fontWeight:'500'}}\n                                    value={brandName}\n                                    required onChange={onChangeBrand}\n                                  />\n                                </div>\n                              </Col>\n                              <Col lg={2}>\n                                <div className=\"mb-3 mb-4\">\n                                  <Label\n                                    htmlFor=\"billing-email-address\"\n\n                                    className=\"form-label\"\n                                  >\n                                    중분류1\n                                  </Label>\n                                  <Input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Input Class1\"\n                                    style={{fontWeight:'500'}}\n                                    value={class1}\n                                    required onChange={onChangeClass1}\n                                  />\n                                </div>\n                              </Col>\n                              <Col lg={2}>\n                                <div className=\"mb-3 mb-4\">\n                                  <Label\n                                    htmlFor=\"billing-phone\"\n\n                                    className=\"form-label\"\n                                  >\n                                    중분류2\n                                  </Label>\n                                  <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Input Class2\"\n                                    style={{fontWeight:'500'}}\n                                    value={class2}\n                                    required onChange={onChangeClass2}\n                                  />\n                                </div>\n                              </Col>\n                              <Col lg={2}>\n                                <div className=\"mb-3 mb-4\">\n                                  <Label\n                                    htmlFor=\"billing-phone\"\n\n                                    className=\"form-label\"\n                                  >\n                                    중분류3\n                                  </Label>\n                                  <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Input Class3\"\n                                    style={{fontWeight:'500'}}\n                                    value={class3}\n                                    required onChange={onChangeClass3}\n                                  />\n                                </div>\n                              </Col>\n                              <Col lg={2}>\n                                <div className=\"mb-3 mb-4\">\n                                  <Label\n                                    htmlFor=\"billing-phone\"\n\n                                    className=\"form-label\"\n                                  >\n                                    중분류4\n                                  </Label>\n                                  <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Input Class4\"\n                                    style={{fontWeight:'500'}}\n                                    value={class4}\n                                    required onChange={onChangeClass4}\n                                  />\n                                </div>\n                              </Col>\n                            </Row>\n                          </div>\n                        </Form>\n                      </div>\n                    </Collapse>\n                  </Card>\n\n                </div>\n                <Row>\n                  <Col>\n                    <div className=\"text-sm-end mt-2 mt-sm-0\">\n                      <Link to=\"#\" className=\"btn btn-danger\" onClick={() => {\n                        setwith_cancel(true)\n                      }}> <i className=\"uil uil-times me-1\" ></i> 취소 </Link>{\" \"}\n                      <Link to=\"#\" className=\"btn btn-success\" onClick={() => {\n                        setwith_save(true)\n                      }}> <i className=\"uil uil-file-alt me-1\"></i> 저장 </Link>\n                    </div>\n\n                    {with_save ? (\n                      <SweetAlert\n\n                        showConfirm={false}\n                        style={{\n                          paddingBottom: '42px'\n                        }}\n                      >\n                        <div style={{ paddingBottom: '52px', paddingTop: '30px' }}>\n                          <img src={save} />\n                        </div>\n\n                        <h3><strong>저장 하시겠습니까?</strong></h3>\n                        <br />\n                        <Link to=\"#\" className=\"btn btn-danger\" onClick={() => {\n                          setwith_save(false)\n                        }}> <i className=\"uil uil-times me-1\" ></i> 취소 </Link>{\" \"}\n                        <Link to=\"#\" className=\"btn btn-success\" onClick={onSubmit}> <i className=\"uil uil-file-alt me-1\"></i> 저장 </Link>\n                      </SweetAlert>\n                    ) : null}\n\n                    {with_cancel ? (\n                      <SweetAlert\n\n                        showConfirm={false}\n                        style={{\n                          paddingBottom: '42px'\n                        }}\n                      >\n                        <div style={{ paddingBottom: '52px', paddingTop: '30px' }}>\n                          <img src={cancel} />\n                        </div>\n\n                        <h3><strong>취소 하시겠습니까?</strong></h3>\n                        <br />\n                        <Link to=\"#\" className=\"btn btn-danger\" onClick={() => {\n                          setwith_cancel(false)\n                        }}> <i className=\"uil uil-times me-1\" ></i> 취소 </Link>{\" \"}\n                        <Link to=\"/brand-list\" className=\"btn btn-success\" onClick={() => {\n                          setwith_cancel(false)\n                        }}> <i className=\"uil uil-file-alt me-1\"></i> 확인 </Link>\n                      </SweetAlert>\n\n                    ) : null}\n\n\n                    {with_good ? (\n                      <SweetAlert\n                        title=\"브랜드가 추가되었습니다.\"\n                        warning\n                        showConfirm={false}\n                        style={{\n                          paddingBottom: '42px'\n                        }}\n                      >\n                        <br />\n\n                        <Link to=\"/brand-list\" className=\"btn btn-primary\"> <i className=\"uil uil-file-alt me-1\"></i> 확인 </Link>\n                      </SweetAlert>\n                    ) : null}\n\n                  </Col>\n\n                </Row>\n              </Col>\n\n            </Row>\n          </div>\n        </Container>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default AddBrand\n","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\pages\\KioskManagerPage\\AddAd.js",["347","348","349","350","351","352","353"],"import React, { useEffect, useState } from \"react\"\nimport {\n  Container,\n  Row,\n  Col,\n  Input,\n  Collapse,\n  Card,\n  Form,\n  Label,\n  Media\n} from \"reactstrap\"\nimport Dropzone from \"react-dropzone\"\nimport { Link } from \"react-router-dom\"\nimport SweetAlert from \"react-bootstrap-sweetalert\"\n//Import Breadcrumb\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\"\nimport { useHistory } from 'react-router';\nimport axios from \"axios\"\nimport cancel from \"./cancel.png\"\nimport save from \"./save.png\"\nimport up from \"./up.png\"\nimport down from \"./down.png\"\nconst AddAd = () => {\n  const history = useHistory();\n  const [isOpen, setIsOpen] = useState(true);\n\n  const [toggleIcon, setToggleIcon] = useState(`${up}`)\n  const toggle = () => {\n    setIsOpen(!isOpen)\n    if(toggleIcon==`${up}`){\n      setToggleIcon(`${down}`)\n    }\n    else{\n      setToggleIcon(`${up}`)\n    }\n  };\n\n  const [selectedFiles, setselectedFiles] = useState([])\n  const [adName, setAdName] = useState('');\n  const [adFile, setAdFile] = useState({\n    file: []\n  });\n\n  const [with_save, setwith_save] = useState(false);\n  const [with_cancel, setwith_cancel] = useState(false);\n  const [with_good, setwith_good] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const isAdmin = async () => {\n    setLoading(true);\n    const { data: response } = await axios.get('/api/auth')\n    if (!response.third) {\n      alert('회원만 접근 가능합니다.')\n      history.push('/login')\n    }\n    else {\n      if (!response.second) {\n        alert('관리자만 접근 가능합니다.')\n        history.push('/product-list')\n      } else {\n        setLoading(false)\n      }\n    }\n  }\n  useEffect(() => {\n    isAdmin()\n  }, [])\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    const { data: response } = await axios('/api/howmanyad')\n    if (!response.data) {\n      alert('이미 광고가 존재합니다. 삭제 후 진행해 주세요.')\n      setwith_save(false)\n      history.push('/ad-list')\n    }\n    else {\n      if (!adName ||\n        !adFile) {\n        alert(\"필수 입력 사항을 입력하지 않으셨습니다.\");\n        setwith_save(false)\n      }\n      else {\n\n        let formData = new FormData();\n        formData.append('adName', adName)\n        formData.append('image', adFile)\n\n        const config = {\n          header: {\n            'Content-type': 'multipart/form-data; charset=UTF-8',\n            'Accept': '*/*'\n          }\n        }\n        axios.post('/api/addad', formData, config)\n        setwith_save(false)\n        setwith_good(true)\n      }\n    }\n\n  }\n\n  function handleAcceptedFiles(files) {\n    files.map(file =>\n      Object.assign(file, {\n        preview: URL.createObjectURL(file),\n        formattedSize: formatBytes(file.size)\n      })\n\n    )\n    setselectedFiles(files)\n  }\n\n\n  const onChangeAdName = (e) => {\n    setAdName(e.target.value)\n  }\n\n  useEffect(() => {\n    setAdFile(selectedFiles[0]);\n  })\n\n  function formatBytes(bytes, decimals = 2) {\n    if (bytes === 0) return \"0 Bytes\"\n    const k = 1024\n    const dm = decimals < 0 ? 0 : decimals\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i]\n  }\n  return (\n    <React.Fragment>\n      <div className=\"page-content\" style={{color:'#596275'}}>\n        <Container fluid style={{fontFamily:'NanumGothic'}}>\n          <Breadcrumbs breadcrumbItem=\"광고 관리\" />\n\n          <div className=\"checkout-tabs\">\n            <Row>\n              <Col xl=\"12\">\n                <div className=\"custom-accordion\">\n                  <Card>\n                    <Link onClick={toggle} className=\"text-dark\" to=\"#\">\n                      <div className=\"p-4\">\n                        <Media className=\"d-flex align-items-center\">\n                          <div className=\"me-3\">\n                            <div className=\"avatar-xs\">\n                              <div className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\n                                01\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"flex-1 overflow-hidden\">\n                            <h5 className=\"font-size-16 mb-1\" style={{ fontFamily: 'NanumGothic', fontWeight: 'bold' }}>광고 관리</h5>\n                            <p className=\"text-muted text-truncate mb-0\">아래의 모든 정보를 입력하세요.</p>\n                          </div>\n                          <img src={toggleIcon}/>\n                        </Media>\n                      </div>\n                    </Link>\n                    <Collapse isOpen={isOpen}>\n                      <div className=\"p-4 border-top\">\n                        <Form>\n                          <div>\n                            <Row>\n                              <Col lg={2}>\n                                <div className=\"mb-3 mb-4\">\n                                  <Label\n                                    htmlFor=\"billing-name\"\n\n                                    className=\"form-label\"\n                                    style={{ fontWeight: '1000' }}>\n                                    광고명\n                                  </Label>\n                                  <Input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"#123456\"\n                                    style={{fontWeight:'500'}}\n                                    onChange={onChangeAdName}\n                                  />\n                                </div>\n                              </Col>\n\n                              <div className=\"p-4 border-top\">\n                                <Form>\n                                  <Dropzone\n                                    onDrop={acceptedFiles => {\n                                      handleAcceptedFiles(acceptedFiles)\n                                    }}\n                                  >\n                                    {({ getRootProps, getInputProps }) => (\n                                      <div className=\"dropzone\">\n                                        <div\n                                          className=\"dz-message needsclick\"\n                                          {...getRootProps()}\n                                        >\n                                          <input {...getInputProps()} />\n                                          <div className=\"dz-message needsclick\">\n                                            <div className=\"mb-3\">\n                                              <i className=\"display-4 text-muted uil uil-cloud-upload\" ></i>\n                                            </div>\n                                            <h4>파일을 업로드 해주세요.<br/>(jpg, png, jpeg, gif, mp4, avi)</h4>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    )}\n                                  </Dropzone>\n                                  <div className=\"dropzone-previews mt-3\" id=\"file-previews\">\n                                    {selectedFiles.map((f, i) => {\n                                      return (\n                                        <Card\n                                          className=\"mt-1 mb-0 shadow-none border dz-processing dz-image-preview dz-success dz-complete\"\n                                          key={i + \"-file\"}\n                                        >\n                                          <div className=\"p-2\">\n                                            <Row className=\"align-items-center\">\n                                              <Col className=\"col-auto\">\n                                                <img\n                                                  data-dz-thumbnail=\"\"\n                                                  height=\"80\"\n                                                  className=\"avatar-sm rounded bg-light\"\n                                                  alt={f.name}\n                                                  src={f.preview}\n                                                />\n                                              </Col>\n                                              <Col>\n                                                <Link\n                                                  to=\"#\"\n                                                  className=\"text-muted font-weight-bold\"\n                                                >\n                                                  {f.name}\n                                                </Link>\n                                                <p className=\"mb-0\">\n                                                  <strong>{f.formattedSize}</strong>\n                                                </p>\n                                              </Col>\n                                            </Row>\n                                          </div>\n                                        </Card>\n                                      )\n                                    })}\n                                  </div>\n                                </Form>\n                              </div>\n\n                            </Row>\n\n\n                          </div>\n                        </Form>\n                      </div>\n                    </Collapse>\n                  </Card>\n\n\n\n\n                </div>\n                <Row>\n                  <Col>\n                    <div className=\"text-sm-end mt-2 mt-sm-0\">\n                      <Link to=\"#\" className=\"btn btn-danger\" onClick={() => {\n                        setwith_cancel(true)\n                      }}> <i className=\"uil uil-times me-1\" ></i> 취소 </Link>{\" \"}\n                      <Link to=\"#\" className=\"btn btn-success\" onClick={() => {\n                        setwith_save(true)\n                      }}> <i className=\"uil uil-file-alt me-1\"></i> 저장 </Link>\n                    </div>\n\n                    {with_save ? (\n                      <SweetAlert\n\n                        showConfirm={false}\n                        style={{\n                          paddingBottom: '42px'\n                        }}\n                      >\n                        <div style={{ paddingBottom: '52px', paddingTop: '30px' }}>\n                          <img src={save} />\n                        </div>\n\n                        <h3><strong>저장 하시겠습니까?</strong></h3>\n                        <br />\n                        <Link to=\"#\" className=\"btn btn-danger\" onClick={() => {\n                          setwith_save(false)\n                        }}> <i className=\"uil uil-times me-1\" ></i> 취소 </Link>{\" \"}\n                        <Link to=\"#\" className=\"btn btn-success\" onClick={handleSubmit}> <i className=\"uil uil-file-alt me-1\"></i> 저장 </Link>\n                      </SweetAlert>\n                    ) : null}\n\n                    {with_cancel ? (\n                      <SweetAlert\n\n                        showConfirm={false}\n                        style={{\n                          paddingBottom: '42px'\n                        }}\n                      >\n                        <div style={{ paddingBottom: '52px', paddingTop: '30px' }}>\n                          <img src={cancel} />\n                        </div>\n\n                        <h3><strong>취소 하시겠습니까?</strong></h3>\n                        <br />\n                        <Link to=\"#\" className=\"btn btn-danger\" onClick={() => {\n                          setwith_cancel(false)\n                        }}> <i className=\"uil uil-times me-1\" ></i> 취소 </Link>{\" \"}\n                        <Link to=\"/ad-list\" className=\"btn btn-success\" onClick={() => {\n                          setwith_cancel(false)\n                        }}> <i className=\"uil uil-file-alt me-1\"></i> 확인 </Link>\n                      </SweetAlert>\n\n                    ) : null}\n                    {with_good ? (\n                      <SweetAlert\n                        title=\"광고가 추가되었습니다.\"\n                        success\n                        showConfirm={false}\n                        style={{\n                          paddingBottom: '42px'\n                        }}\n                      >\n                        <br />\n\n                        <Link to=\"/ad-list\" className=\"btn btn-primary\"> <i className=\"uil uil-file-alt me-1\"></i> 확인 </Link>\n                      </SweetAlert>\n                    ) : null}\n                  </Col>\n\n                </Row>\n              </Col>\n\n            </Row>\n          </div>\n        </Container>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default AddAd\n","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\pages\\KioskManagerPage\\AddKiosk.js",["354","355","356","357","358","359","360","361","362"],"import React, { useState, useEffect } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport {\n  Card,\n  Col,\n  Container,\n  Form,\n  Media,\n  Input,\n  Label,\n  Row,\n  Collapse,\n} from \"reactstrap\"\nimport axios from 'axios'\n//Import Breadcrumb\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\"\nimport SweetAlert from \"react-bootstrap-sweetalert\"\nimport { useHistory } from 'react-router'\nimport cancel from \"./cancel.png\"\nimport save from \"./save.png\"\nimport up from \"./up.png\"\nimport down from \"./down.png\"\nconst AddKiosk = () => {\n  const history = useHistory()\n\n  const [kioskNum, setKioskNum] = useState('');\n  const [checkKn, setCheckKn] = useState('');\n  const [uniNum, setUniNum] = useState('');\n  const [checkUn, setCheckUn] = useState('');\n  const [store, setStore] = useState('');\n  const [checkStore, setCheckStore] = useState('');\n\n  const [loading, setLoading] = useState(false);\n  const [isOpen, setIsOpen] = useState(true);\n  const [toggleIcon, setToggleIcon] = useState(`${up}`)\n  const toggle = () => {\n    setIsOpen(!isOpen)\n    if(toggleIcon==`${up}`){\n      setToggleIcon(`${down}`)\n    }\n    else{\n      setToggleIcon(`${up}`)\n    }\n  };\n  \n  const [with_save, setwith_save] = useState(false);\n  const [with_cancel, setwith_cancel] = useState(false);\n  const [with_good, setwith_good] = useState(false);\n  const isAdmin = async () => {\n    setLoading(true);\n    const { data: response } = await axios.get('/api/auth')\n    if (!response.third) {\n      alert('회원만 접근 가능합니다.')\n      history.push('/login')\n    }\n    else {\n      if (!response.first) {\n        alert('개발자만 접근 가능합니다.')\n        history.push('/product-list')\n      } else {\n        setLoading(false)\n      }\n\n    }\n  }\n  useEffect(() => {\n    isAdmin()\n  }, [])\n  //디비에 저장하게 하는 함수\n  const onSubmit = () => {\n    if (!kioskNum.length ||\n      !store.length ||\n      !uniNum.length) {\n      alert('필수 값을 입력하지 않았습니다.')\n      setwith_save(false)\n    } else {\n      axios.post('/api/addkiosk', {\n        kioskNum: kioskNum,\n        store: store,\n        uniNum: uniNum\n      }).then(() => {\n       \n        setwith_save(false)\n        setwith_good(true)\n\n      })\n        .catch(err => console.log(err))\n\n\n    }\n  };\n\n\n\n  //각정보의 string을 저장하게 하는 함수\n  const onChangeKn = (e) => {\n    setKioskNum(e.target.value)\n    setCheckKn('')\n  };\n  const onChangeUn = (e) => {\n    setUniNum(e.target.value)\n    setCheckUn('')\n  }\n  const onChangeStore = (e) => {\n    setStore(e.target.value)\n    setCheckStore('')\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"page-content\" style={{color:'#596275'}}>\n        <Container fluid style={{fontFamily:'NanumGothic'}}>\n          {/* Render Breadcrumb */}\n          <Breadcrumbs breadcrumbItem=\"키오스크 관리\" />\n\n          <Row>\n            <Col lg=\"12\">\n              <div id=\"addproduct-accordion\" className=\"custom-accordion\">\n                <Card>\n                  <Link to=\"#\" onClick={toggle} className=\"text-dark\">\n                    <div className=\"p-4\">\n\n                      <Media className=\"d-flex align-items-center\">\n                        <div className=\"me-3\">\n                          <div className=\"avatar-xs\">\n                            <div className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\n                              01\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"flex-1 overflow-hidden\">\n                          <h5 className=\"font-size-16 mb-1\" style={{ fontFamily: 'NanumGothic', fontWeight: 'bold' }}>키오스크 추가</h5>\n                          <p className=\"text-muted text-truncate mb-0\">아래의 모든 정보를 입력하세요.</p>\n                        </div>\n                        <img src={toggleIcon}/>\n                      </Media>\n\n                    </div>\n                  </Link>\n\n                  <Collapse isOpen={isOpen}>\n                    <div className=\"p-4 border-top\">\n                      <Form>\n\n                        <Row>\n                          <Col md=\"2\">\n                            <div className=\"mb-3\">\n                              <Label htmlFor=\"productname\" style={{ fontWeight: '1000' }}>키오스크 NO.</Label>\n                              <Input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={kioskNum}\n                                placeholder=\"#123456\"\n                                style={{fontWeight:'500'}}\n                                onChange={onChangeKn}\n                              />\n                            </div>\n                          </Col>\n                          <Col md=\"2\">\n                            <div className=\"mb-3\">\n                              <Label htmlFor=\"productname\" style={{ fontWeight: '1000' }}>고유번호</Label>\n                              <Input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={uniNum}\n                                placeholder=\"123456\"\n                                style={{fontWeight:'500'}}\n                                onChange={onChangeUn}\n                              />\n                            </div>\n                          </Col>\n                          <Col md=\"2\">\n                            <div className=\"mb-3\">\n                              <Label htmlFor=\"productname\" style={{ fontWeight: '1000' }}>지점</Label>\n                              <Input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={store}\n                                placeholder=\"XX점\"\n                                style={{fontWeight:'500'}}\n                                onChange={onChangeStore}\n                              />\n                            </div>\n                          </Col>\n\n                        </Row>\n\n                      </Form>\n                    </div>\n                  </Collapse>\n                </Card>\n              </div>\n            </Col>\n          </Row>\n          <Row>\n\n            <Col>\n              <div className=\"text-sm-end mt-2 mt-sm-0\">\n                <Link to=\"#\" className=\"btn btn-danger\" onClick={() => {\n                  setwith_cancel(true)\n                }}> <i className=\"uil uil-times me-1\" ></i> 취소 </Link>{\" \"}\n                <Link to=\"#\" className=\"btn btn-success\" onClick={() => {\n                  setwith_save(true)\n                }}> <i className=\"uil uil-file-alt me-1\"></i> 저장 </Link>\n              </div>\n\n              {with_save ? (\n                <SweetAlert\n\n                  showConfirm={false}\n                  style={{\n                    paddingBottom: '42px'\n                  }}\n                >\n                  <div style={{ paddingBottom: '52px', paddingTop: '30px' }}>\n                    <img src={save} />\n                  </div>\n\n                  <h3><strong>저장 하시겠습니까?</strong></h3>\n                  <br />\n                  <Link to=\"#\" className=\"btn btn-danger\" onClick={() => {\n                    setwith_save(false)\n                  }}> <i className=\"uil uil-times me-1\" ></i> 취소 </Link>{\" \"}\n                  <Link to=\"#\" className=\"btn btn-success\" onClick={onSubmit}>\n                    <i className=\"uil uil-file-alt me-1\"></i> 저장 </Link>\n                </SweetAlert>\n              ) : null}\n\n              {with_cancel ? (\n                <SweetAlert\n\n                  showConfirm={false}\n                  style={{\n                    paddingBottom: '42px'\n                  }}\n                >\n                  <div style={{ paddingBottom: '52px', paddingTop: '30px' }}>\n                    <img src={cancel} />\n                  </div>\n\n                  <h3><strong>취소 하시겠습니까?</strong></h3>\n                  <br />\n                  <Link to=\"#\" className=\"btn btn-danger\" onClick={() => {\n                    setwith_cancel(false)\n                  }}> <i className=\"uil uil-times me-1\" ></i> 취소 </Link>{\" \"}\n                  <Link to=\"/kiosk-list\" className=\"btn btn-success\" onClick={() => {\n                    setwith_cancel(false)\n                  }}> <i className=\"uil uil-file-alt me-1\"></i> 확인 </Link>\n                </SweetAlert>\n\n              ) : null}\n              {with_good ? (\n                <SweetAlert\n                  title=\"키오스크가 추가되었습니다.\"\n                  success\n                  showConfirm={false}\n                  style={{\n                    paddingBottom: '42px'\n                  }}\n                >\n                  <br />\n\n                  <Link to=\"/kiosk-list\" className=\"btn btn-primary\"> <i className=\"uil uil-file-alt me-1\"></i> 확인 </Link>\n                </SweetAlert>\n              ) : null}\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default AddKiosk\n","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\pages\\KioskManagerPage\\KioskManager\\KioskRevise.js",["363","364","365","366","367","368","369","370","371"],"import React, { useState, useEffect } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport {\n  Card,\n  Col,\n  Container,\n  Form,\n  Media,\n  Input,\n  Label,\n  Row,\n  Collapse,\n} from \"reactstrap\"\nimport axios from 'axios'\n//Import Breadcrumb\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\"\nimport SweetAlert from \"react-bootstrap-sweetalert\"\nimport { useHistory, useLocation } from 'react-router'\nimport cancel from \"../cancel.png\"\nimport save from \"../save.png\"\nimport up from \"../up.png\"\nimport down from \"../down.png\"\nconst KioskRevise = () => {\n  const history = useHistory()\n  const [loading, setLoading] = useState(false);\n  const [kioskNum, setKioskNum] = useState('');\n  const [uniNum, setUniNum] = useState('');\n  const [checkUn, setCheckUn] = useState('');\n  const [store, setStore] = useState('');\n  const [checkStore, setCheckStore] = useState('');\n\n  const [revisePk, setRevisePk] = useState(0);\n\n\n  const [isOpen, setIsOpen] = useState(true);\n  const [toggleIcon, setToggleIcon] = useState(`${up}`)\n  const toggle = () => {\n    setIsOpen(!isOpen)\n    if(toggleIcon==`${up}`){\n      setToggleIcon(`${down}`)\n    }\n    else{\n      setToggleIcon(`${up}`)\n    }\n  };\n  const [with_save, setwith_save] = useState(false);\n  const [with_cancel, setwith_cancel] = useState(false);\n  const [with_good, setwith_good] = useState(false);\n\n  const isAdmin = async () => {\n    setLoading(true);\n    const { data: response } = await axios.get('/api/auth')\n    if (!response.third) {\n      alert('회원만 접근 가능합니다.')\n      history.push('/login')\n    }\n    else {\n\n      if (!response.first) {\n        alert('개발자만 접근 가능합니다.')\n        history.push('/product-list')\n      } else {\n        setLoading(false)\n      }\n\n    }\n  }\n  const location = useLocation();\n\n  useEffect(() => {\n    if (typeof location.state != \"undefined\") {\n      setRevisePk(location.state.pk)\n      setKioskNum(location.state.num);\n      setUniNum(location.state.unique)\n      setStore(location.state.store)\n    }\n  }, [])\n  useEffect(() => {\n    isAdmin()\n  }, [])\n\n\n  const onSubmit = () => {\n    if (!kioskNum.length ||\n      !uniNum.length ||\n      !store.length) {\n      alert('필수 값을 입력하지 않았습니다.')\n      setwith_save(false)\n    }\n    else {\n      axios.put('/api/updatekiosk', {\n        num: kioskNum,\n        uniNum: uniNum,\n        store: store,\n        pk: revisePk\n      }).then(() => {\n        console.log(\"success\")\n        setwith_save(false)\n        setwith_good(true)\n\n      })\n        .catch(err => console.log(err))\n\n    }\n\n\n  };\n\n\n\n\n  const onChangeUn = (e) => {\n    setUniNum(e.target.value)\n    setCheckUn('')\n  }\n  const onChangeStore = (e) => {\n    setStore(e.target.value)\n    setCheckStore('')\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"page-content\" style={{color:'#596275'}}>\n        <Container fluid style={{fontFamily:'NanumGothic'}}>\n          {/* Render Breadcrumb */}\n          <Breadcrumbs breadcrumbItem=\"키오스크 관리\" />\n\n          <Row>\n            <Col lg=\"12\">\n              <div id=\"addproduct-accordion\" className=\"custom-accordion\">\n                <Card>\n                  <Link to=\"#\" onClick={toggle} className=\"text-dark\">\n                    <div className=\"p-4\">\n\n                      <Media className=\"d-flex align-items-center\">\n                        <div className=\"me-3\">\n                          <div className=\"avatar-xs\">\n                            <div className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\n                              01\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"flex-1 overflow-hidden\">\n                          <h5 className=\"font-size-16 mb-1\" style={{ fontFamily: 'NanumGothic', fontWeight: 'bold' }}>키오스크 수정</h5>\n                          <p className=\"text-muted text-truncate mb-0\">아래의 모든 정보를 입력하세요.</p>\n                        </div>\n                        <img src={toggleIcon}/>\n                      </Media>\n\n                    </div>\n                  </Link>\n\n                  <Collapse isOpen={isOpen}>\n                    <div className=\"p-4 border-top\">\n                      <Form>\n\n                        <Row>\n                          <Col md=\"2\">\n                            <div className=\"mb-3\">\n                              <Label htmlFor=\"productname\" style={{ fontWeight: '1000' }} >키오스크 NO.</Label>\n                              <Input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={kioskNum}\n                                placeholder=\"#123456\"\n                                style={{fontWeight:'500'}}\n                              />\n                            </div>\n                          </Col>\n                          <Col md=\"2\">\n                            <div className=\"mb-3\">\n                              <Label htmlFor=\"productname\" style={{ fontWeight: '1000' }}>고유번호</Label>\n                              <Input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={uniNum}\n                                placeholder=\"123456\"\n                                style={{fontWeight:'500'}}\n                                onChange={onChangeUn}\n                              />\n                            </div>\n                          </Col>\n                          <Col md=\"2\">\n                            <div className=\"mb-3\">\n                              <Label htmlFor=\"productname\" style={{ fontWeight: '1000' }}>지점</Label>\n                              <Input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={store}\n                                placeholder=\"XX점\"\n                                style={{fontWeight:'500'}}\n                                onChange={onChangeStore}\n                              />\n                            </div>\n                          </Col>\n\n                        </Row>\n\n                      </Form>\n                    </div>\n                  </Collapse>\n                </Card>\n              </div>\n            </Col>\n          </Row>\n          <Row>\n\n            <Col>\n              <div className=\"text-sm-end mt-2 mt-sm-0\">\n                <Link to=\"#\" className=\"btn btn-danger\" onClick={() => {\n                  setwith_cancel(true)\n                }}> <i className=\"uil uil-times me-1\" ></i> 취소 </Link>{\" \"}\n                <Link to=\"#\" className=\"btn btn-success\" onClick={() => {\n                  setwith_save(true)\n                }}> <i className=\"uil uil-file-alt me-1\"></i> 저장 </Link>\n              </div>\n\n              {with_save ? (\n                <SweetAlert\n\n                  showConfirm={false}\n                  style={{\n                    paddingBottom: '42px'\n                  }}\n                >\n                  <div style={{ paddingBottom: '52px', paddingTop: '30px' }}>\n                    <img src={save} />\n                  </div>\n\n                  <h3><strong>저장 하시겠습니까?</strong></h3>\n                  <br />\n                  <Link to=\"#\" className=\"btn btn-danger\" onClick={() => {\n                    setwith_save(false)\n                  }}> <i className=\"uil uil-times me-1\" ></i> 취소 </Link>{\" \"}\n                  <Link to=\"#\" className=\"btn btn-success\" onClick={onSubmit}>\n                    <i className=\"uil uil-file-alt me-1\"></i> 저장 </Link>\n                </SweetAlert>\n              ) : null}\n\n              {with_cancel ? (\n                <SweetAlert\n\n                  showConfirm={false}\n                  style={{\n                    paddingBottom: '42px'\n                  }}\n                >\n                  <div style={{ paddingBottom: '52px', paddingTop: '30px' }}>\n                    <img src={cancel} />\n                  </div>\n\n                  <h3><strong>취소 하시겠습니까?</strong></h3>\n                  <br />\n                  <Link to=\"#\" className=\"btn btn-danger\" onClick={() => {\n                    setwith_cancel(false)\n                  }}> <i className=\"uil uil-times me-1\" ></i> 취소 </Link>{\" \"}\n                  <Link to=\"/kiosk-list\" className=\"btn btn-success\" onClick={() => {\n                    setwith_cancel(false)\n                  }}> <i className=\"uil uil-file-alt me-1\"></i> 확인 </Link>\n                </SweetAlert>\n\n              ) : null}\n              {with_good ? (\n                <SweetAlert\n                  title=\"키오스크가 수정되었습니다.\"\n                  success\n                  showConfirm={false}\n                  style={{\n                    paddingBottom: '42px'\n                  }}\n                >\n                  <br />\n\n                  <Link to=\"/kiosk-list\" className=\"btn btn-primary\"> <i className=\"uil uil-file-alt me-1\"></i> 확인 </Link>\n                </SweetAlert>\n              ) : null}\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default KioskRevise\n","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\pages\\KioskManagerPage\\KioskCustomers\\CustomerList.js",["372","373","374","375","376","377","378","379","380","381","382","383","384"],"import React, { useEffect, useState } from \"react\";\nimport { Col, Container, Row, Card, Spinner } from \"reactstrap\"\nimport { Link } from \"react-router-dom\"\n//Import Breadcrumb\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\"\nimport axios from 'axios'\nimport styled from \"styled-components\"\nimport SweetAlert from \"react-bootstrap-sweetalert\"\nimport { useHistory } from 'react-router';\nimport { AvForm } from \"availity-reactstrap-validation\"\nimport { Pagination, PaginationItem, PaginationLink } from \"reactstrap\"\nimport deletepic from \"../delete.png\"\nconst CheckBox = styled.input`\nmargin: 14px 14px 14px;\n`\nconst LoadingBox = styled.div`\nwidth: 100%;\nalign-items: center;\ndisplay: flex;\nflex-direction: column;\n`\nconst Table = styled.table`\n  width: 100%;\n  background:#ffffff;\n  margin-bottom: 14px;\n  align-items: center;\n  display:flex;\n  justify-content: space-between;\n  box-shadow: 1px 1px 1px #00000029;\n  word-break:break-all;\n  th{\n    color: #596275;\n  }\n`\nconst ID = styled.th`\n  width: 15%;\n  color: black;\n  padding: 14px 14px 14px;\n  text-align: center;\n`\nconst PW = styled.th`\n  width: 20%;\n  color: black;\n  padding: 14px 14px 14px;\n  text-align: center;\n`\nconst UserLevel = styled.th`\nwidth: 15%;\n  color: black;\n  padding: 14px 14px 14px;\n  text-align: center;\n`\nconst Date = styled.th`\nwidth: 20%;\n  color: black;\n  padding: 14px 14px 14px;\n  text-align: center;\n`\n\nconst Modify = styled.th`\nwidth: 10%;\n  color: black;\n  padding: 14px 14px 14px;\n`\nconst Delete = styled.th`\nwidth: 10%;\n  color: black;\n  padding: 14px 14px 14px;\n`\nconst ListText = styled.p`\nfont-weight: 400;\nmargin:0;\n`\nconst PageBox = styled.div`\nwidth: 100%;\nalign-items: center;\ndisplay: flex;\nflex-direction: column;\n`\nconst PageUl = styled.ul`\n  float:left;\n  list-style: none;\n  text-align:center;\n  border-radius:3px;\n  color:black;\n  padding:1px;\n  \n  background-color: white;\n`;\n\nconst PageLi = styled.li`\n  display:inline-block;\n  font-size:17px;\n  font-weight:600;\n  padding:5px;\n  \n  \n  &:hover{\n    cursor:pointer;\n    color:white;\n    background-color:blue;\n  }\n  &:focus::after{\n    color:#ffffff;\n    background-color:#000000;\n  }\n`;\n\nconst PageSpan = styled.span`\n  &:hover::after,\n  &:focus::after{\n    border-radius:100%;\n    color:black;\n    background-color:black;\n  }\n`;\n\nconst CustomerList = (props) => {\n\n\n  const history = useHistory()\n  const [deleteNum, setDeleteNum] = useState(0)\n\n  const [maxPage, setMaxPage] = useState(0);\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [with_delete, setwith_delete] = useState(false);\n  const [search, setSearch] = useState('')\n  const isAdmin = async () => {\n    setLoading(true);\n    const { data: response } = await axios.get('/api/auth')\n    if (!response.third) {\n      alert('회원만 접근 가능합니다.')\n      history.push('/login')\n    }\n    else {\n\n      if (!response.second) {\n        alert('관리자만 접근 가능합니다.')\n        history.push('/product-list')\n      } else {\n        setLoading(false)\n      }\n\n    }\n  }\n  useEffect(() => {\n    isAdmin()\n  }, [])\n\n  useEffect(() => {\n    async function fetchPosts() {\n      setLoading(true);\n      const page = currentPage\n      const { data: response } = await axios.get(`/api/user/${page}?keyword=${search}`);\n\n      setPosts(response.data.result);\n      setMaxPage(response.data.maxPage);\n      setLoading(false);\n    }\n    fetchPosts()\n  }, []);\n\n  const onDelete = async (e) => {\n    e.preventDefault()\n    const { data: response } = await axios.post('/api/deleteuser', {\n      pk: deleteNum\n    })\n    alert('삭제되었습니다.')\n    setwith_delete(false)\n    window.location.replace(\"/customer-list\")\n  };\n\n  function onChangePage(num) {\n    async function fetchPosts() {\n      setLoading(true);\n      const page = num\n      setCurrentPage(num)\n      const { data: response } = await axios.get(`/api/user/${page}?keyword=${search}`);\n      setPosts(response.data.result);\n      setLoading(false);\n    }\n    fetchPosts()\n  };\n  function onChangePageColor(num) {\n    if (currentPage == num) {\n      return { background: '#5B73E8', color: '#ffffff' }\n    }\n    else {\n      return { background: '#ffffff', color: '#74788D' }\n    }\n  }\n  function onCreateTime(num) {\n    num = num.split('.')[0]\n    num = num.replace('T', ' ')\n    return num\n  }\n  function onUserLevel(num){\n    if(num==0){\n      return '일반유저'\n    }\n    else if(num==40){\n      return '관리자'\n    }\n    else{\n      return 'dev'\n    }\n  }\n  const pageNumbers = [];\n  for (let i = 1; i <= maxPage; i++) {\n    pageNumbers.push(i);\n  }\n  const onSearch = (e) => {\n    setSearch(e.target.value)\n  }\n  return (\n    <React.Fragment>\n      <div className=\"page-content\" style={{color:'#596275'}}>\n        <Container fluid style={{fontFamily:'NanumGothic'}}>\n          <Breadcrumbs breadcrumbItem=\"회원관리\" />\n          <Row>\n            <Col lg=\"12\">\n\n              <React.Fragment>\n                <div>\n                  <Card>\n                    <AvForm className=\"app-search d-none d-lg-block\" onSubmit={() => { onChangePage(1) }}>\n                      <div className=\"position-relative\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Search...\"\n                          value={search}\n                          onChange={onSearch}\n                        />\n                        <span className=\"uil-search\"></span>\n                      </div>\n                    </AvForm>\n                  </Card>\n                  <div className=\"table-responsive mb-4\">\n\n                    <Table style={{ background: '#EEF1FD' }}>\n                      <CheckBox type=\"checkbox\" id=\"cb1\" />\n                      <ID>ID</ID>\n                      <PW>PW</PW>\n                      <UserLevel>User Level</UserLevel>\n                      <Date>생성시간</Date>\n                      <Modify>수정</Modify>\n                      <Delete>삭제</Delete>\n                    </Table>\n                    <>\n                      {\n                        loading &&\n                        <LoadingBox><Spinner className=\"m-1\" color=\"primary\" /></LoadingBox>\n                      }\n                      {posts && posts.map(post => (\n \n                        <Table key={post.pk}>\n                          <CheckBox type=\"checkbox\" id=\"cb1\" />\n                          <ID>\n                            {\n                              post.user_level == 50 ?\n                              <ListText>********</ListText>\n                              :\n                              <>\n                              <ListText>{post.id}</ListText>\n                              </>\n                            }\n                          </ID>\n                          <PW>\n                            <ListText>********</ListText>\n                          </PW>\n                          <UserLevel><ListText>{onUserLevel(post.user_level)}</ListText></UserLevel>\n                          <Date><ListText>\n                            {onCreateTime(post.create_time)}\n                          </ListText></Date>\n                          <Modify>\n                            {\n                              post.user_level == 50 ?\n                              <Link className=\"px-3 text-primary\" ><i className=\"uil uil-pen font-size-18\"></i></Link>\n                              :\n                              <>\n                            <Link to={{\n                              pathname: '/customer-revise',\n                              state: { pk: post.pk, id: post.id }\n                            }} className=\"px-3 text-primary\" >\n                              <i className=\"uil uil-pen font-size-18\"></i>\n                            </Link>\n                            </>\n                            }\n                          </Modify>\n                          <Delete>\n                            {post.user_level == 50 ?\n                            <Link className=\"px-3 text-danger\"><i className=\"uil uil-trash-alt font-size-18\"></i></Link>\n                            :\n                            <>\n                             <Link to=\"#\" className=\"px-3 text-danger\" onClick={() => {\n                            setDeleteNum(post.pk)\n                            setwith_delete(true)\n                             }}><i className=\"uil uil-trash-alt font-size-18\"></i></Link>\n\n                            </>\n                            }\n                           \n                          </Delete>\n                        </Table>\n\n                      ))}\n\n                    </>\n                    {with_delete ? (\n                      <SweetAlert\n                        \n                        showConfirm={false}\n                        style={{\n                          paddingBottom: '42px'\n                        }}\n                      >\n                        <div style={{ paddingBottom: '52px', paddingTop: '30px' }}>\n                            <img src={deletepic} />\n                          </div>\n\n                          <h3><strong>정말 삭제 하시겠습니까?</strong></h3>\n                          <br />\n                        <Link to=\"#\" className=\"btn btn-danger\" onClick={() => {\n                          setwith_delete(false)\n                        }}> <i className=\"uil uil-times me-1\" ></i> 취소 </Link>{\" \"}\n                        <Link to=\"#\" className=\"btn btn-success\" onClick={onDelete}> <i className=\"uil uil-file-alt me-1\"></i> 확인 </Link>\n                      </SweetAlert>\n                    ) : null}\n\n                    <Row className=\"row mb-4\">\n                      <div className=\"col text-end\">\n                        <Link to=\"/add-customer\" className=\"btn btn-primary\">+ 추가하기</Link>\n                      </div>\n                    </Row>\n\n                    <Row className=\"row mb-4\">\n\n                      <PageBox>\n                        <Pagination aria-label=\"Page navigation example\">\n                          <PaginationItem>\n                            <PaginationLink onClick={() => { onChangePage(1) }}>처음</PaginationLink>\n                          </PaginationItem>\n                          {pageNumbers.map(number => (\n                            <PaginationItem key={number} >\n                              <PaginationLink onClick={() => { onChangePage(number) }} style={onChangePageColor(number)}>\n                                {number}\n                              </PaginationLink>\n                            </PaginationItem>\n                          ))}\n                          <PaginationItem>\n                            <PaginationLink onClick={() => { onChangePage(maxPage) }}>마지막</PaginationLink>\n                          </PaginationItem>\n                        </Pagination>\n                      </PageBox>\n                    </Row>\n                  </div>\n                </div>\n              </React.Fragment>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </React.Fragment>\n  )\n}\n\n\nexport default CustomerList\n","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\pages\\KioskManagerPage\\AddCustomers.js",["385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404"],"import React, { useState, useEffect } from \"react\"\nimport {\n  Container,\n  Row,\n  Col,\n  Input,\n  Collapse,\n  Card,\n  Form,\n  Label,\n  Media\n} from \"reactstrap\"\nimport { Link } from \"react-router-dom\"\nimport SweetAlert from \"react-bootstrap-sweetalert\"\n//Import Breadcrumb\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\"\nimport axios from \"axios\"\nimport { useHistory } from 'react-router'\nimport cancel from \"./cancel.png\"\nimport save from \"./save.png\"\nimport styled from \"styled-components\"\nimport up from \"./up.png\"\nimport down from \"./down.png\"\nconst UseBrandContainer = styled.div`\ndisplay:flex;\npadding-left: 0;\n`\nconst UseBrandContent = styled.div`\ntext-decoration: none;\ncolor: black;\npadding-left: 10px;\nbackground: none;\ncursor:pointer;\n`\nconst AddCustomers = () => {\n  const history = useHistory()\n  const [isOpen, setIsOpen] = useState(true);\n  const [toggleIcon, setToggleIcon] = useState(`${up}`)\n  const toggle = () => {\n    setIsOpen(!isOpen)\n    if(toggleIcon==`${up}`){\n      setToggleIcon(`${down}`)\n    }\n    else{\n      setToggleIcon(`${up}`)\n    }\n  };\n  const [with_save, setwith_save] = useState(false);\n  const [with_cancel, setwith_cancel] = useState(false);\n  const [with_good, setwith_good] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [id, setId] = useState('');\n  const [pw, setPw] = useState('');\n  const [checkId, setCheckId] = useState('');\n  const [checkPw, setCheckPw] = useState(false);\n  const [checkAddUser, setCheckAddUser] = useState(false);\n  const [userLevel, setUserLevel] = useState('');\n  const [selectList, setSelectList] = useState([\"일반유저\", \"관리자\"]);\n  const [selected, setSelected] = useState(\"일반유저\");\n\n\n  const [allBrandList, setAllBrandList] = useState([]);\n  const [brandNameList, setBrandNameList] = useState([]);\n\n\n  const [selectBrandName, setSelectBrandName] = useState('');\n  const [brandPkList, setBrandPkList] = useState([]);\n\n  const handleSelect = (e) => {\n    setSelected(e.target.value);\n  };\n\n  const isAdmin = async () => {\n    setLoading(true);\n    const { data: response } = await axios.get('/api/auth')\n    if (!response.third) {\n      alert('회원만 접근 가능합니다.')\n      history.push('/login')\n    }\n    else {\n      if(!response.first){\n        if (!response.second) {\n          \n          alert('관리자만 접근 가능합니다.')\n          history.push('/product-list')\n        } else {\n          \n          setLoading(false)\n        }\n      }\n      else{\n        selectList.push('개발자');\n        setLoading(false)\n      }\n    }\n\n  }\n  useEffect(() => {\n    isAdmin()\n  }, [])\n \n  //제출함수 \n  const onSubmit = async (e) => {\n    e.preventDefault()\n    //이용할 브랜드를 선택하고 그 값들을 배열형태로 저장하여 보냄\n    if (!id.length ||\n      !pw.length ||\n      brandPkList.length == 0) {\n      alert('필수 값을 입력하지 않았습니다.')\n      setwith_save(false)\n    }\n    else {\n\n      var brandPk = JSON.stringify(brandPkList)\n      \n      const { data: response } = await axios.post('/api/adduser', {\n        id: id,\n        pw: pw,\n        userLevel: userLevel,\n        brandPk: brandPk\n      })\n      if (response.result == -200) {\n        alert(response.message)\n        setwith_save(false)\n      }\n      else if (response.result == 200) {\n        setwith_save(false)\n        setwith_good(true)\n\n      }\n      else {\n        console.log(response)\n      }\n    }\n\n  };\n  //브랜드 리스트 모두 출력\n  useEffect(() => {\n    async function fetchPosts() {\n      const { data: response } = await axios.get('/api/brand');\n      setAllBrandList(response.data)\n    }\n    fetchPosts()\n  }, []);\n\n  const handleSelectBrand = (e) => {\n    setSelectBrandName(e.target.value)\n    \n    for (var i = 0; i < allBrandList.length; i++) {\n      if (allBrandList[i].brand_name == e.target.value) {\n\n        for (var j = 0; j < brandNameList.length; j++) {\n          if (brandNameList[j] == e.target.value) {\n            break;\n          }\n        }\n        if (j == brandNameList.length) {\n          brandNameList.push(e.target.value)\n          brandPkList.push(allBrandList[i].pk)\n        }\n\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (\n      id.length === 0 ||\n      pw.length === 0 ||\n      checkId !== '사용 가능한 ID입니다.'\n    ) {\n      setCheckAddUser(false)\n\n    } else {\n      setCheckAddUser(true)\n    }\n  })\n\n  useEffect(() => {\n    if (selected === '일반유저') setUserLevel(0)\n    else if (selected === '관리자') setUserLevel(40)\n    else if (selected === '개발자'){\n      setUserLevel(50)\n    }\n  })\n\n\n  const onChangeId = (e) => {\n    setId(e.target.value)\n    setCheckId('')\n  };\n  const onChangePw = (e) => {\n    setPw(e.target.value)\n    setCheckPw('')\n  };\n\n\n  return (\n    <React.Fragment>\n      <div className=\"page-content\" style={{color:'#596275'}}>\n        <Container fluid style={{fontFamily:'NanumGothic'}}>\n          {/* Render Breadcrumb */}\n          <Breadcrumbs breadcrumbItem=\"회원 관리\" />\n\n          <div className=\"checkout-tabs\">\n            <Row>\n              <Col xl=\"12\">\n                <div className=\"custom-accordion\">\n                  <Card>\n                    <Link onClick={toggle} className=\"text-dark\" to=\"#\">\n                      <div className=\"p-4\">\n                        <Media className=\"d-flex align-items-center\">\n                          <div className=\"me-3\">\n                            <div className=\"avatar-xs\">\n                              <div className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\n                                01\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"flex-1 overflow-hidden\">\n                            <h5 className=\"font-size-16 mb-1\" style={{ fontFamily: 'NanumGothic', fontWeight: 'bold' }}>회원 추가</h5>\n                            <p className=\"text-muted text-truncate mb-0\">아래의 모든 정보를 입력하세요.</p>\n                          </div>\n                          <img src={toggleIcon}/>\n                        </Media>\n                      </div>\n                    </Link>\n                    <Collapse isOpen={isOpen}>\n                      <div className=\"p-4 border-top\">\n                        <Form>\n                          <div>\n                            <Row>\n                              <Col lg={2}>\n                                <div className=\"mb-3 mb-4\">\n                                  <Label\n                                    htmlFor=\"billing-name\"\n\n                                    className=\"form-label\"\n                                  >\n                                    ID\n                                  </Label>\n                                  <Input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"#ABCDEF\"\n                                    style={{fontWeight:'500'}}\n                                    value={id}\n                                    required onChange={onChangeId}\n                                  />\n                                </div>\n                              </Col>\n                              <Col lg={2}>\n                                <div className=\"mb-3 mb-4\">\n                                  <Label\n                                    htmlFor=\"billing-email-address\"\n                                    className=\"form-label\"\n                                  >\n                                    PW\n                                  </Label>\n                                  <Input\n                                    type=\"email\"\n                                    className=\"form-control\"\n                                    placeholder=\"123****\"\n                                    style={{fontWeight:'500'}}\n                                    value={pw}\n                                    required onChange={onChangePw}\n                                  />\n                                </div>\n                              </Col>\n                              <Col lg={2}>\n                                <div className=\"mb-3\">\n                                  <Label>접근권한</Label>\n                                  <form >\n                                    <select className=\"form-control\" name=\"userlevel\"\n                                      onChange={handleSelect} value={selected}>\n\n                                      {selectList.map((item) => (\n                                        <option value={item} key={item}>\n                                          {item}\n                                        </option>\n                                      ))}\n                                    </select>\n                                  </form>\n                                </div>\n                              </Col>\n\n                              <Col lg={2}>\n                                <div className=\"mb-3\">\n                                  <Label>브랜드</Label>\n                                  <form >\n                                    <select className=\"form-control\" name=\"userlevel\"\n                                      onChange={handleSelectBrand} >\n                                      <option>===== 선택 =====</option>\n                                      {allBrandList.map(item => (\n                                        <option key={item.pk}\n                                        >\n                                          {item.brand_name}\n                                        </option>\n                                      ))}\n                                    </select>\n                                  </form>\n                                </div>\n                              </Col>\n                              <Col>\n                                <Label>선택한 브랜드</Label>\n                                <UseBrandContainer>{brandNameList.map(item => (\n                                  <UseBrandContent>{item}</UseBrandContent>\n                                ))}</UseBrandContainer>\n                              </Col>\n                            </Row>\n\n                          </div>\n                        </Form>\n                      </div>\n                    </Collapse>\n                  </Card>\n                </div>\n                <Row>\n                  <Col>\n                    <div className=\"text-sm-end mt-2 mt-sm-0\">\n                      <Link to=\"#\" className=\"btn btn-danger\" onClick={() => {\n                        setwith_cancel(true)\n                      }}> <i className=\"uil uil-times me-1\" ></i> 취소 </Link>{\" \"}\n                      <Link to=\"#\" className=\"btn btn-success\" onClick={() => {\n                        setwith_save(true)\n                      }}> <i className=\"uil uil-file-alt me-1\"></i> 저장 </Link>\n                    </div>\n\n                    {with_save ? (\n                      <SweetAlert\n\n                        showConfirm={false}\n                        style={{\n                          paddingBottom: '42px'\n                        }}\n                      >\n                        <div style={{ paddingBottom: '52px', paddingTop: '30px' }}>\n                          <img src={save} />\n                        </div>\n\n                        <h3><strong>저장 하시겠습니까?</strong></h3>\n                        <br />\n                        <Link to=\"#\" className=\"btn btn-danger\" onClick={() => {\n                          setwith_save(false)\n                        }}> <i className=\"uil uil-times me-1\" ></i> 취소 </Link>{\" \"}\n                        <Link to=\"#\" className=\"btn btn-success\" onClick={onSubmit}\n                        >\n                          <i className=\"uil uil-file-alt me-1\"></i> 저장 </Link>\n                      </SweetAlert>\n                    ) : null}\n\n                    {with_cancel ? (\n                      <SweetAlert\n\n                        showConfirm={false}\n                        style={{\n                          paddingBottom: '42px'\n                        }}\n                      >\n                        <div style={{ paddingBottom: '52px', paddingTop: '30px' }}>\n                          <img src={cancel} />\n                        </div>\n\n                        <h3><strong>취소 하시겠습니까?</strong></h3>\n                        <br />\n                        <Link to=\"#\" className=\"btn btn-danger\" onClick={() => {\n                          setwith_cancel(false)\n                        }}> <i className=\"uil uil-times me-1\" ></i> 취소 </Link>{\" \"}\n                        <Link to=\"/customer-list\" className=\"btn btn-success\" onClick={() => {\n                          setwith_cancel(false)\n                        }}> <i className=\"uil uil-file-alt me-1\"></i> 확인 </Link>\n                      </SweetAlert>\n\n                    ) : null}\n\n                    {with_good ? (\n                      <SweetAlert\n                        title=\"회원이 추가되었습니다.\"\n                        success\n                        showConfirm={false}\n                        style={{\n                          paddingBottom: '42px'\n                        }}\n                      >\n                        <br />\n\n                        <Link to=\"/customer-list\" className=\"btn btn-primary\"> <i className=\"uil uil-file-alt me-1\"></i> 확인 </Link>\n                      </SweetAlert>\n                    ) : null}\n\n                  </Col>\n\n                </Row>\n              </Col>\n\n            </Row>\n          </div>\n        </Container>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default AddCustomers\n","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\pages\\KioskManagerPage\\KioskCustomers\\CustomerRevise.js",["405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423"],"import React, { useState, useEffect } from \"react\"\nimport {\n  Container,\n  Row,\n  Col,\n  Input,\n  Collapse,\n  Card,\n  Form,\n  Label,\n  Media\n} from \"reactstrap\"\nimport { Link } from \"react-router-dom\"\nimport SweetAlert from \"react-bootstrap-sweetalert\"\n//Import Breadcrumb\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\"\nimport axios from \"axios\"\nimport { useHistory, useLocation } from 'react-router'\nimport cancel from \"../cancel.png\"\nimport save from \"../save.png\"\nimport styled from \"styled-components\"\nimport up from \"../up.png\"\nimport down from \"../down.png\"\nconst UseBrandContainer = styled.div`\ndisplay:flex;\npadding-left: 0;\n`\nconst UseBrandContent = styled.div`\ntext-decoration: none;\ncolor: black;\npadding-left: 10px;\nbackground: none;\ncursor:pointer;\n`\nconst CustomerRevise = () => {\n  const history = useHistory()\n  const [revisePk, setRevisePk] = useState(0);\n  const [reviseId, setReviseId] = useState('');\n  const [isOpen, setIsOpen] = useState(true);\n  const [toggleIcon, setToggleIcon] = useState(`${up}`)\n  const toggle = () => {\n    setIsOpen(!isOpen)\n    if(toggleIcon==`${up}`){\n      setToggleIcon(`${down}`)\n    }\n    else{\n      setToggleIcon(`${up}`)\n    }\n  };\n  const [with_save, setwith_save] = useState(false);\n  const [with_cancel, setwith_cancel] = useState(false);\n  const [with_good, setwith_good] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [id, setId] = useState('');\n  const [pw, setPw] = useState('');\n  const [checkId, setCheckId] = useState('');\n  const [checkPw, setCheckPw] = useState(false);\n  const [checkAddUser, setCheckAddUser] = useState(false);\n  const [userLevel, setUserLevel] = useState(0);\n  const [selected, setSelected] = useState(\"일반유저\");\n\n\n  const [allBrandList, setAllBrandList] = useState([]);\n  const [brandNameList, setBrandNameList] = useState([]);\n\n  const [selectBrandName, setSelectBrandName] = useState('');\n  const [brandPkList, setBrandPkList] = useState([]);\n\n  const isAdmin = async () => {\n    setLoading(true);\n    const { data: response } = await axios.get('/api/auth')\n    if (!response.third) {\n      alert('회원만 접근 가능합니다.')\n      history.push('/login')\n    }\n    else {\n\n      if (!response.second) {\n        alert('관리자만 접근 가능합니다.')\n        history.push('/product-list')\n      } else {\n        setLoading(false)\n      }\n\n    }\n  }\n  useEffect(() => {\n    isAdmin()\n  }, [])\n\n\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (typeof location.state != \"undefined\") {\n      setRevisePk(location.state.pk)\n      setReviseId(location.state.id);\n    }\n  }, [])\n\n  const onSubmit = () => {\n    if (!pw.length) {\n      alert('필수 값을 입력하지 않았습니다.')\n      setwith_save(false)\n    }\n    else {\n      var brandPk = JSON.stringify(brandPkList)\n  \n      axios.put('/api/updateuser', {\n        pk: revisePk,\n        pw: pw,\n        brandPk: brandPk\n      }).then(() => {\n       \n        setwith_save(false)\n        setwith_good(true)\n\n      })\n        .catch(err => console.log(err))\n    }\n  };\n\n  useEffect(() => {\n    if (\n      id.length === 0 ||\n      pw.length === 0 ||\n      checkId !== '사용 가능한 ID입니다.'\n    ) {\n      setCheckAddUser(false)\n\n    } else {\n      setCheckAddUser(true)\n    }\n  })\n\n  useEffect(() => {\n    if (selected === '일반유저') setUserLevel(0)\n    else if (selected === '관리자') setUserLevel(40)\n    else {\n      setUserLevel(50)\n    }\n  })\n\n  useEffect(() => {\n    async function fetchPosts() {\n      const { data: response } = await axios.get('/api/brand');\n      setAllBrandList(response.data)\n    }\n    fetchPosts()\n  }, []);\n\n  const handleSelectBrand = (e) => {\n    setSelectBrandName(e.target.value)\n    \n    for (var i = 0; i < allBrandList.length; i++) {\n      if (allBrandList[i].brand_name == e.target.value) {\n\n        for (var j = 0; j < brandNameList.length; j++) {\n          if (brandNameList[j] == e.target.value) {\n            break;\n          }\n        }\n        if (j == brandNameList.length) {\n          brandNameList.push(e.target.value)\n          brandPkList.push(allBrandList[i].pk)\n        }\n\n      }\n    }\n  }\n\n\n  const onChangeId = (e) => {\n    setId(e.target.value)\n    setCheckId('')\n  };\n  const onChangePw = (e) => {\n    setPw(e.target.value)\n    setCheckPw('')\n  };\n\n\n\n\n  return (\n    <React.Fragment>\n      <div className=\"page-content\" style={{color:'#596275'}}>\n        <Container fluid style={{fontFamily:'NanumGothic'}}>\n          {/* Render Breadcrumb */}\n          <Breadcrumbs breadcrumbItem=\"회원 관리\" />\n\n          <div className=\"checkout-tabs\">\n            <Row>\n              <Col xl=\"12\">\n                <div className=\"custom-accordion\">\n                  <Card>\n                    <Link onClick={toggle} className=\"text-dark\" to=\"#\">\n                      <div className=\"p-4\">\n                        <Media className=\"d-flex align-items-center\">\n                          <div className=\"me-3\">\n                            <div className=\"avatar-xs\">\n                              <div className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\n                                01\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"flex-1 overflow-hidden\">\n                            <h5 className=\"font-size-16 mb-1\" style={{ fontFamily: 'NanumGothic', fontWeight: 'bold' }}>회원 정보 수정</h5>\n                            <p className=\"text-muted text-truncate mb-0\">아래의 모든 정보를 입력하세요.</p>\n                          </div>\n                          <img src={toggleIcon}/>\n                        </Media>\n                      </div>\n                    </Link>\n                    <Collapse isOpen={isOpen}>\n                      <div className=\"p-4 border-top\">\n                        <Form>\n                          <div>\n                            <Row>\n                              <Col lg={2}>\n                                <div className=\"mb-3 mb-4\">\n                                  <Label\n                                    htmlFor=\"billing-name\"\n\n                                    className=\"form-label\"\n                                  >\n                                    ID\n                                  </Label>\n                                  <Input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"#ABCDEF\"\n                                    style={{fontWeight:'500'}}\n                                    value={reviseId}\n                                    required onChange={onChangeId}\n                                  />\n                                </div>\n                              </Col>\n                              <Col lg={2}>\n                                <div className=\"mb-3 mb-4\">\n                                  <Label\n                                    htmlFor=\"billing-email-address\"\n                                    className=\"form-label\"\n                                  >\n                                    PW\n                                  </Label>\n                                  <Input\n                                    type=\"email\"\n                                    className=\"form-control\"\n                                    placeholder=\"123****\"\n                                    style={{fontWeight:'500'}}\n                                    value={pw}\n                                    required onChange={onChangePw}\n                                  />\n                                </div>\n                              </Col>\n                              <Col lg={2}>\n                                <div className=\"mb-3\">\n                                  <Label>브랜드</Label>\n                                  <form >\n                                    <select className=\"form-control\" name=\"userlevel\"\n                                      onChange={handleSelectBrand} >\n                                      <option>===== 선택 =====</option>\n                                      {allBrandList.map(item => (\n                                        <option key={item.pk}\n                                        >\n                                          {item.brand_name}\n                                        </option>\n                                      ))}\n                                    </select>\n                                  </form>\n                                </div>\n                              </Col>\n                              <Col>\n                                <Label>선택한 브랜드</Label>\n                                <UseBrandContainer>{brandNameList.map(item => (\n                                  <UseBrandContent>{item}</UseBrandContent>\n                                ))}</UseBrandContainer>\n                              </Col>\n\n\n                            </Row>\n\n                          </div>\n                        </Form>\n                      </div>\n                    </Collapse>\n                  </Card>\n                </div>\n                <Row>\n                  <Col>\n                    <div className=\"text-sm-end mt-2 mt-sm-0\">\n                      <Link to=\"#\" className=\"btn btn-danger\" onClick={() => {\n                        setwith_cancel(true)\n                      }}> <i className=\"uil uil-times me-1\" ></i> 취소 </Link>{\" \"}\n                      <Link to=\"#\" className=\"btn btn-success\" onClick={() => {\n                        setwith_save(true)\n                      }}> <i className=\"uil uil-file-alt me-1\"></i> 저장 </Link>\n                    </div>\n\n                    {with_save ? (\n                      <SweetAlert\n\n                        showConfirm={false}\n                        style={{\n                          paddingBottom: '42px'\n                        }}\n                      >\n                        <div style={{ paddingBottom: '52px', paddingTop: '30px' }}>\n                          <img src={save} />\n                        </div>\n\n                        <h3><strong>저장 하시겠습니까?</strong></h3>\n                        <br />\n                        <Link to=\"#\" className=\"btn btn-danger\" onClick={() => {\n                          setwith_save(false)\n                        }}> <i className=\"uil uil-times me-1\" ></i> 취소 </Link>{\" \"}\n                        <Link to=\"#\" className=\"btn btn-success\" onClick={onSubmit}\n                        >\n                          <i className=\"uil uil-file-alt me-1\"></i> 저장 </Link>\n                      </SweetAlert>\n                    ) : null}\n\n                    {with_cancel ? (\n                      <SweetAlert\n\n                        showConfirm={false}\n                        style={{\n                          paddingBottom: '42px'\n                        }}\n                      >\n                        <div style={{ paddingBottom: '52px', paddingTop: '30px' }}>\n                          <img src={cancel} />\n                        </div>\n\n                        <h3><strong>취소 하시겠습니까?</strong></h3>\n                        <br />\n                        <Link to=\"#\" className=\"btn btn-danger\" onClick={() => {\n                          setwith_cancel(false)\n                        }}> <i className=\"uil uil-times me-1\" ></i> 취소 </Link>{\" \"}\n                        <Link to=\"/customer-list\" className=\"btn btn-success\" onClick={() => {\n                          setwith_cancel(false)\n                        }}> <i className=\"uil uil-file-alt me-1\"></i> 확인 </Link>\n                      </SweetAlert>\n\n                    ) : null}\n\n                    {with_good ? (\n                      <SweetAlert\n                        title=\"회원이 수정되었습니다.\"\n                        success\n                        showConfirm={false}\n                        style={{\n                          paddingBottom: '42px'\n                        }}\n                      >\n                        <br />\n\n                        <Link to=\"/customer-list\" className=\"btn btn-primary\"> <i className=\"uil uil-file-alt me-1\"></i> 확인 </Link>\n                      </SweetAlert>\n                    ) : null}\n\n                  </Col>\n\n                </Row>\n              </Col>\n\n            </Row>\n          </div>\n        </Container>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default CustomerRevise\n","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\pages\\KioskManagerPage\\KioskAd\\AdRevise.js",["424","425","426","427","428","429","430","431"],"import React, { useEffect, useState } from \"react\"\nimport {\n  Container,\n  Row,\n  Col,\n  Input,\n  Collapse,\n  Card,\n  Form,\n  Label,\n  Media,\n  Spinner\n} from \"reactstrap\"\nimport Dropzone from \"react-dropzone\"\nimport { Link } from \"react-router-dom\"\nimport SweetAlert from \"react-bootstrap-sweetalert\"\n//Import Breadcrumb\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\"\nimport { useHistory, useLocation } from 'react-router-dom';\nimport axios from \"axios\"\nimport styled from \"styled-components\"\nimport cancel from \"../cancel.png\"\nimport save from \"../save.png\"\nimport up from \"../up.png\"\nimport down from \"../down.png\"\nconst LoadingBox = styled.div`\nwidth: 100%;\nalign-items: center;\ndisplay: flex;\nflex-direction: column;\n`\nconst AdRevise = () => {\n  const history = useHistory();\n  const [revisePk, setRevisePk] = useState(0);\n  const [reviseImg, setReviseImg] = useState({ file: [] })\n  const [reviseName, setReviseName] = useState('');\n  const [isOpen, setIsOpen] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [toggleIcon, setToggleIcon] = useState(`${up}`)\n  const toggle = () => {\n    setIsOpen(!isOpen)\n    if(toggleIcon==`${up}`){\n      setToggleIcon(`${down}`)\n    }\n    else{\n      setToggleIcon(`${up}`)\n    }\n  };\n  const [selectedFiles, setselectedFiles] = useState([])\n  const [adFile, setAdFile] = useState(\n    { file: [] }\n  );\n\n\n\n  const [with_save, setwith_save] = useState(false);\n  const [with_cancel, setwith_cancel] = useState(false);\n  const [with_good, setwith_good] = useState(false);\n  const isAdmin = async () => {\n    setLoading(true);\n    const { data: response } = await axios.get('/api/auth')\n    if (!response.third) {\n      alert('회원만 접근 가능합니다.')\n      history.push('/login')\n    }\n    else {\n      if (!response.second) {\n        alert('관리자만 접근 가능합니다.')\n        history.push('/product-list')\n      } else {\n        setLoading(false)\n      }\n    }\n  }\n  useEffect(() => {\n    isAdmin()\n  }, [])\n\n  function handleAcceptedFiles(files) {\n    files.map(file =>\n      Object.assign(file, {\n        preview: URL.createObjectURL(file),\n        formattedSize: formatBytes(file.size)\n      })\n\n    )\n    setselectedFiles(files)\n  }\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (typeof location.state != \"undefined\") {\n      setRevisePk(location.state.pk)\n      setReviseImg(location.state.img)\n      setReviseName(location.state.name)\n    }\n  }, [])\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    if (\n      !reviseName.length) {\n      alert(\"필수 입력 사항을 입력하지 않으셨습니다.\");\n      setwith_save(false)\n    }\n    else {\n      const formData = new FormData();\n      formData.append('adName', reviseName)\n      formData.append('image', adFile)\n      formData.append('pk', revisePk)\n      axios.put('/api/updatead', formData)\n      setwith_save(false)\n      setwith_good(true)\n\n    }\n  }\n\n\n\n  const onChangeAdName = (e) => {\n    setReviseName(e.target.value)\n  }\n\n  useEffect(() => {\n    setAdFile(selectedFiles[0]);\n  })\n\n  function formatBytes(bytes, decimals = 2) {\n    if (bytes === 0) return \"0 Bytes\"\n    const k = 1024\n    const dm = decimals < 0 ? 0 : decimals\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i]\n  }\n  return (\n    <React.Fragment>\n      <div className=\"page-content\" style={{color:'#596275'}}>\n        <>\n          {\n            loading &&\n            <LoadingBox><Spinner className=\"m-1\" color=\"primary\" /></LoadingBox>\n          }\n          <Container fluid style={{fontFamily:'NanumGothic'}}>\n            <Breadcrumbs breadcrumbItem=\"광고 관리\" />\n\n            <div className=\"checkout-tabs\">\n              <Row>\n                <Col xl=\"12\">\n                  <div className=\"custom-accordion\">\n                    <Card>\n                      <Link onClick={toggle} className=\"text-dark\" to=\"#\">\n                        <div className=\"p-4\">\n                          <Media className=\"d-flex align-items-center\">\n                            <div className=\"me-3\">\n                              <div className=\"avatar-xs\">\n                                <div className=\"avatar-title rounded-circle bg-soft-primary text-primary\">\n                                  01\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"flex-1 overflow-hidden\">\n                              <h5 className=\"font-size-16 mb-1\" style={{ fontFamily: 'NanumGothic', fontWeight: 'bold' }}>광고 수정</h5>\n                              <p className=\"text-muted text-truncate mb-0\">아래의 모든 정보를 입력하세요.</p>\n                            </div>\n                            <img src={toggleIcon}/>\n                          </Media>\n                        </div>\n                      </Link>\n                      <Collapse isOpen={isOpen}>\n                        <div className=\"p-4 border-top\">\n                          <Form>\n                            <div>\n                              <Row>\n                                <Col lg={2}>\n                                  <div className=\"mb-3 mb-4\">\n                                    <Label\n                                      htmlFor=\"billing-name\"\n\n                                      className=\"form-label\"\n                                      style={{ fontWeight: '1000' }}>\n                                      광고명\n                                    </Label>\n                                    <Input\n                                      type=\"text\"\n                                      className=\"form-control\"\n                                      placeholder=\"#123456\"\n                                      style={{fontWeight:'500'}}\n                                      value={reviseName}\n                                      onChange={onChangeAdName}\n                                    />\n                                  </div>\n                                </Col>\n\n                                <div className=\"p-4 border-top\">\n                                  <Form>\n                                    <Dropzone\n                                      onDrop={acceptedFiles => {\n                                        handleAcceptedFiles(acceptedFiles)\n                                      }}\n                                    >\n                                      {({ getRootProps, getInputProps }) => (\n                                        <div className=\"dropzone\">\n                                          <div\n                                            className=\"dz-message needsclick\"\n                                            {...getRootProps()}\n                                          >\n                                            <input {...getInputProps()} />\n                                            <div className=\"dz-message needsclick\">\n                                              <div className=\"mb-3\">\n                                                <i className=\"display-4 text-muted uil uil-cloud-upload\"></i>\n                                              </div>\n                                              <h4>사진을 업로드 해주세요.</h4>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      )}\n                                    </Dropzone>\n                                    <div className=\"dropzone-previews mt-3\" id=\"file-previews\">\n                                      {selectedFiles.map((f, i) => {\n                                        return (\n                                          <Card\n                                            className=\"mt-1 mb-0 shadow-none border dz-processing dz-image-preview dz-success dz-complete\"\n                                            key={i + \"-file\"}\n                                          >\n                                            <div className=\"p-2\">\n                                              <Row className=\"align-items-center\">\n                                                <Col className=\"col-auto\">\n                                                  <img\n                                                    data-dz-thumbnail=\"\"\n                                                    height=\"80\"\n                                                    className=\"avatar-sm rounded bg-light\"\n                                                    alt={f.name}\n                                                    src={f.preview}\n                                                  />\n                                                </Col>\n                                                <Col>\n                                                  <Link\n                                                    to=\"#\"\n                                                    className=\"text-muted font-weight-bold\"\n                                                  >\n                                                    {f.name}\n                                                  </Link>\n                                                  <p className=\"mb-0\">\n                                                    <strong>{f.formattedSize}</strong>\n                                                  </p>\n                                                </Col>\n                                              </Row>\n                                            </div>\n                                          </Card>\n                                        )\n                                      })}\n                                    </div>\n                                  </Form>\n                                </div>\n\n                              </Row>\n\n\n                            </div>\n                          </Form>\n                        </div>\n                      </Collapse>\n                    </Card>\n\n\n\n\n                  </div>\n                  <Row>\n                    <Col>\n                      <div className=\"text-sm-end mt-2 mt-sm-0\">\n                        <Link to=\"#\" className=\"btn btn-danger\" onClick={() => {\n                          setwith_cancel(true)\n                        }}> <i className=\"uil uil-times me-1\" ></i> 취소 </Link>{\" \"}\n                        <Link to=\"#\" className=\"btn btn-success\" onClick={() => {\n                          setwith_save(true)\n                        }}> <i className=\"uil uil-file-alt me-1\"></i> 저장 </Link>\n                      </div>\n\n                      {with_save ? (\n                        <SweetAlert\n\n                          showConfirm={false}\n                          style={{\n                            paddingBottom: '42px'\n                          }}\n                        >\n                          <div style={{ paddingBottom: '52px', paddingTop: '30px' }}>\n                            <img src={save} />\n                          </div>\n\n                          <h3><strong>저장 하시겠습니까?</strong></h3>\n                          <br />\n                          <Link to=\"#\" className=\"btn btn-danger\" onClick={() => {\n                            setwith_save(false)\n                          }}> <i className=\"uil uil-times me-1\" ></i> 취소 </Link>{\" \"}\n                          <Link to=\"#\" className=\"btn btn-success\" onClick={handleSubmit}> <i className=\"uil uil-file-alt me-1\"></i> 저장 </Link>\n                        </SweetAlert>\n                      ) : null}\n\n                      {with_cancel ? (\n                        <SweetAlert\n\n                          showConfirm={false}\n                          style={{\n                            paddingBottom: '42px'\n                          }}\n                        >\n                          <div style={{ paddingBottom: '52px', paddingTop: '30px' }}>\n                            <img src={cancel} />\n                          </div>\n\n                          <h3><strong>취소 하시겠습니까?</strong></h3>\n                          <br />\n                          <Link to=\"#\" className=\"btn btn-danger\" onClick={() => {\n                            setwith_cancel(false)\n                          }}> <i className=\"uil uil-times me-1\" ></i> 취소 </Link>{\" \"}\n                          <Link to=\"/ad-list\" className=\"btn btn-success\" onClick={() => {\n                            setwith_cancel(false)\n                          }}> <i className=\"uil uil-file-alt me-1\"></i> 확인 </Link>\n                        </SweetAlert>\n\n                      ) : null}\n                      {with_good ? (\n                        <SweetAlert\n                          title=\"광고가 수정되었습니다.\"\n                          success\n                          showConfirm={false}\n                          style={{\n                            paddingBottom: '42px'\n                          }}\n                        >\n                          <br />\n\n                          <Link to=\"/ad-list\" className=\"btn btn-primary\"> <i className=\"uil uil-file-alt me-1\"></i> 확인 </Link>\n                        </SweetAlert>\n                      ) : null}\n                    </Col>\n\n                  </Row>\n                </Col>\n\n              </Row>\n            </div>\n          </Container>\n        </>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default AdRevise\n","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\pages\\KioskManagerPage\\KioskManager\\KioskList.js",["432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450"],"import React, { useEffect, useState } from \"react\";\nimport { Col, Container, Row, Card, Spinner } from \"reactstrap\"\nimport { Link } from \"react-router-dom\"\n//Import Breadcrumb\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\"\nimport axios from 'axios'\nimport styled from \"styled-components\"\nimport SweetAlert from \"react-bootstrap-sweetalert\"\nimport { useHistory } from 'react-router'\nimport { Pagination, PaginationItem, PaginationLink } from \"reactstrap\"\nimport XLSX from \"xlsx\";\nimport deletepic from \"../delete.png\"\nimport moment from 'moment';\nimport 'moment/locale/ko';\nconst CheckBox = styled.input`\nmargin: 14px 14px 14px;\n`\nconst LoadingBox = styled.div`\nwidth: 100%;\nalign-items: center;\ndisplay: flex;\nflex-direction: column;\n`\nconst Table = styled.table`\n  width: 100%;\n  background:#ffffff;\n  margin-bottom: 14px;\n  align-items: center;\n  display:flex;\n  justify-content: space-between;\n  box-shadow: 1px 1px 1px #00000029;\n  word-break:break-all;\n  th{\n    color: #596275;\n  }\n`\nconst KioskNumber = styled.th`\n  width: 15%;\n  color: black;\n  padding: 14px 14px 14px;\n  text-align: center;\n`\nconst UniqueNumber = styled.th`\nwidth: 15%;\n  color: black;\n  padding: 14px 14px 14px;\n  text-align: center;\n`\nconst Store = styled.th`\nwidth: 15%;\n  color: black;\n  padding: 14px 14px 14px;\n  text-align: center;\n`\nconst Date = styled.th`\nwidth: 20%;\n  color: black;\n  padding: 14px 14px 14px;\n  text-align: center;\n`\nconst Status = styled.th`\nwidth: 15%;\n  color: black;\n  padding: 14px 14px 14px;\n  text-align: center;\n`\nconst Modify = styled.th`\nwidth: 10%;\n  color: black;\n  padding: 14px 14px 14px;\n`\nconst Delete = styled.th`\nwidth: 10%;\n  color: black;\n  padding: 14px 14px 14px;\n`\nconst ListText = styled.p`\nfont-weight: 400;\nmargin:0;\n`\nconst PageBox = styled.div`\nwidth: 100%;\nalign-items: center;\ndisplay: flex;\nflex-direction: column;\n`\nconst Strong = styled.strong`\nfont-size:10px;\n@media screen and (max-width:1250px) {\n  font-size:6px;\n}\n`\nconst DateContainer = styled.div`\nwidth: 100%;\nalign-items: center;\ndisplay:flex;\njustify-content: space-between;\n`\nconst MenuTitle = styled.div`\nwidth:15%;\npadding-left:20px;\n\n`\nconst UnPaidContent = styled.div`\nwidth:10%;\n\n`\nconst PaidContent = styled.div`\nwidth:75%;\n\n`\nconst DateContent = styled.div`\nwidth: 15%;\n\n`\nconst ButtonContent = styled.div`\nwidth:10%;\ntext-align:center;\npadding-left:16px;\n`\nconst ExtractContent = styled.div`\nwidth:45%;\n`\n\nconst KioskList = () => {\n\n  const history = useHistory()\n  \n  const date1 = moment().subtract(1,'year').format('YYYY-MM-DD')\n  const date2 = moment().format('YYYY-MM-DD')\n  \n  const [deleteNum, setDeleteNum] = useState(0)\n  const [posts, setPosts] = useState([]);\n  const [maxPage, setMaxPage] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(10);\n  const [with_delete, setwith_delete] = useState(false);\n  const [kioskNum, setkioskNum] = useState('')\n  const [with_good, setwith_good] = useState(false);\n\n  const [revisePk, setRevisePk] = useState(0)\n  const [firstDate, setFirstDate] = useState(date1)\n  const [secondDate, setSecondDate] = useState(date2)\n  const [exelPost, setExelPost] = useState([])\n  const [paid, setPaid] = useState(0)\n  const [unPaid, setUnPaid] = useState(0)\n  const headers = [\n    { label: \"Kiosk Number\", key: \"kiosk_num\" },\n    { label: \"Store Name\", key: \"store_name\" },\n    { label: \"Unique Code\", key: \"unoque_code\" },\n    { label: \"Status\", key: \"status\" }\n  ]\n  const isAdmin = async () => {\n    setLoading(true);\n    const { data: response } = await axios.get('/api/auth')\n    if (!response.third) {\n      alert('회원만 접근 가능합니다.')\n      history.push('/login')\n    }\n    else {\n\n      if (!response.first) {\n        alert('개발자만 접근 가능합니다.')\n        history.push('/product-list')\n      } else {\n        setLoading(false)\n      }\n\n    }\n  }\n  useEffect(() => {\n    isAdmin()\n  }, [])\n\n  useEffect(() => {\n    async function fetchPosts() {\n      setLoading(true);\n      const page = currentPage\n      const { data: response } = await axios.get(`/api/kiosk/${page}?firstdate=${firstDate}&lastdate=${secondDate}`);\n      setPosts(response.data.result);\n      setMaxPage(response.data.maxPage);\n      setLoading(false);\n    }\n    fetchPosts()\n  }, []);\n  useEffect(() => {\n    async function fetchPosts() {\n      setLoading(true);\n      const { data: res } = await axios.get(`/api/kiosk/${0}?firstdate=${firstDate}&lastdate=${secondDate}`);\n      setExelPost(res.data.result);\n      setLoading(false);\n    }\n    fetchPosts()\n  }, []);\n \n  const onDelete = async (e) => {\n    e.preventDefault()\n    const { data: res } = await axios.get('/api/auth')\n    if (!res.first) {\n      alert('권한이 없습니다.')\n      setwith_delete(false)\n    }\n    else {\n      const { data: response } = await axios.post('/api/deletekiosk', {\n        pk: deleteNum\n      })\n      alert('삭제되었습니다.')\n      setwith_delete(false)\n      window.location.replace(\"/kiosk-list\")\n    }\n  };\n\n  function onChangePage(num) {\n    async function fetchPosts() {\n      setLoading(true);\n      const page = num\n      setCurrentPage(num)\n      if(paid==0&&unPaid==0){\n        const { data: res } = await axios.get(`/api/kiosk/${0}?firstdate=${firstDate}&lastdate=${secondDate}`);\n        setExelPost(res.data.result);\n        const { data: response } = await axios.get(`/api/kiosk/${page}?firstdate=${firstDate}&lastdate=${secondDate}`);\n        setPosts(response.data.result);\n        setMaxPage(response.data.maxPage);\n      }\n      else{\n        const { data: res } = await axios.get(`/api/kiosk/${0}?status=${paid}&firstdate=${firstDate}&lastdate=${secondDate}`);\n        setExelPost(res.data.result);\n        const { data: response } = await axios.get(`/api/kiosk/${page}?status=${paid}&firstdate=${firstDate}&lastdate=${secondDate}`);\n        setPosts(response.data.result);\n        setMaxPage(response.data.maxPage);\n      }\n      setLoading(false);\n    }\n    fetchPosts()\n  };\n \n  function onChangePageColor(num) {\n    if (currentPage == num) {\n      return { background: '#5B73E8', color: '#ffffff' }\n    }\n    else {\n      return { background: '#ffffff', color: '#74788D' }\n    }\n  }\n  function onStatus(num) {\n    if (num == 1) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n  async function handleGiveKiosk(num) {\n    const { data: res } = await axios.get('/api/auth')\n    if (!res.first) {\n      alert('권한이 없습니다.')\n    }\n    else {\n      axios.post('/api/kioskstatus', {\n        pk: num,\n        status: 0\n      }).then(() => {\n        alert('지급을 완료 하였습니다.')\n        window.location.replace(\"/kiosk-list\")\n      })\n    }\n\n  }\n  async function handleCancelKiosk(num) {\n    const { data: res } = await axios.get('/api/auth')\n    if (!res.first) {\n      alert('권한이 없습니다.')\n    }\n    else {\n      axios.post('/api/kioskstatus', {\n        pk: num,\n        status: 1\n      }).then(() => {\n        alert('지급을 취소 하였습니다.')\n        window.location.replace(\"/kiosk-list\")\n      })\n    }\n  }\n  function getExcel() {\n    const dataWS = XLSX.utils.json_to_sheet(exelPost);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, dataWS, \"nameData\");\n    XLSX.writeFile(wb, \"emart_kiosk.xlsx\");\n  }\n  function onCreateTime(num) {\n    num = num.split('.')[0]\n    num = num.replace('T', ' ')\n    return num\n  }\n  const pageNumbers = [];\n  for (let i = 1; i <= maxPage; i++) {\n    pageNumbers.push(i);\n  }\n  const onChangePaid = (e) => {\n    setPaid(1)\n    setUnPaid(0)\n  }\n  const onChangeUnpaid = (e) => {\n    setUnPaid(1)\n    setPaid(0)\n  }\n\n  const onChangeFirst = (e) => {\n    setFirstDate(e.target.value)\n  }\n  const onChangeSecond = (e) => {\n    setSecondDate(e.target.value)\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"page-content\" style={{color:'#596275'}}>\n        <Container fluid style={{fontFamily:'NanumGothic'}}>\n          <Breadcrumbs breadcrumbItem=\"키오스크관리\" />\n          <Row>\n            <Col lg=\"12\">\n\n              <React.Fragment>\n                <div>\n                  <Card>\n                    <Row>\n                     <DateContainer>\n                      <MenuTitle>\n                      <br />\n                      <h5 className=\"font-size-14 mb-4\"><strong>조회결과 순서</strong></h5>\n                      </MenuTitle>\n                     <UnPaidContent>\n                     <input\n                          className=\"form-check-input\"\n                          type=\"radio\"\n                          name=\"exampleRadios\"\n                          id=\"exampleRadios1\"\n                          value=\"option1\"\n                          \n                          onChange={onChangeUnpaid}\n                        />\n                        {\" \"}\n                        <label\n                          className=\"form-check-label\"\n                          htmlFor=\"exampleRadios1\"\n                        >\n                          미지급\n                        </label>\n                     </UnPaidContent>\n                     <PaidContent>\n                     <input\n                          className=\"form-check-input\"\n                          type=\"radio\"\n                          name=\"exampleRadios\"\n                          id=\"exampleRadios2\"\n                          value=\"option1\"\n                          onChange={onChangePaid}\n                        />\n                        {\" \"}\n                        <label\n                          className=\"form-check-label\"\n                          htmlFor=\"exampleRadios2\"\n                        >\n                          지급\n                        </label>\n                     </PaidContent>\n                     </DateContainer>\n                    </Row>\n                    <Row>\n                    <DateContainer>\n                        <MenuTitle className=\"mb-3\">\n                          <br />\n                          \n                          <h5 className=\"font-size-14 mb-4\"><strong>조회 기간</strong></h5>\n                        </MenuTitle>\n                     \n                       <DateContent>\n                         <div style={{width:'95%'}}>\n                       <input\n                            className=\"form-control\"\n                            type=\"date\"\n                            defaultValue={date1}\n                            id=\"example-date-input\"\n                            onChange={onChangeFirst}\n                          />\n                         </div>\n                       </DateContent>\n                       <div>\n                         {\"-\"}\n                       </div>\n                       <DateContent>\n                       <div style={{width:'97%' ,paddingLeft:'8px'}}>\n                       <input\n                            className=\"form-control\"\n                            type=\"date\"\n                            defaultValue={date2}\n                            id=\"example-date-input\"\n                            onChange={onChangeSecond}\n                          />\n                          </div>\n                      </DateContent>\n                        <ButtonContent>\n                        <Link to=\"#\" className=\"btn btn-primary\" onClick={() => {\n                          onChangePage(1)\n                        }}>조회하기</Link>\n                        </ButtonContent>\n                        <ExtractContent>\n                        <Link to=\"#\" className=\"btn btn-primary\" style={{ marginLeft: '10px' }} onClick={\n                          getExcel\n                        }>\n                          추출하기\n                        </Link>\n                        </ExtractContent>\n                        </DateContainer>\n                        </Row>\n                  </Card>\n\n                  <div className=\"table-responsive mb-4\">\n\n                    <Table style={{ background: '#EEF1FD' }}>\n                      <CheckBox type=\"checkbox\" id=\"cb1\" />\n                      <KioskNumber>키오스크 NO.</KioskNumber>\n                      <UniqueNumber>고유번호</UniqueNumber>\n                      <Store>지점</Store>\n                      <Date>생성시간</Date>\n                      <Status>상태</Status>\n                      <Status></Status>\n                      <Modify>수정</Modify>\n                      <Delete>삭제</Delete>\n                    </Table>\n                    <>\n                      {\n                        loading &&\n                        <LoadingBox><Spinner className=\"m-1\" color=\"primary\" /></LoadingBox>\n                      }\n                      {posts && posts.map(post => (\n                        <Table key={post.pk}>\n                          <CheckBox type=\"checkbox\" id=\"cb1\" />\n                          <KioskNumber><ListText>{post.kiosk_num}</ListText></KioskNumber>\n                          <UniqueNumber><ListText>{post.unique_code}</ListText></UniqueNumber>\n                          <Store><ListText>{post.store_name}</ListText></Store>\n                          <Date><ListText>{onCreateTime(post.create_time)}</ListText></Date>\n                          <Status>\n                            {\n                              onStatus(post.status) ?\n                                <ListText>완료</ListText>\n                                :\n                                <>\n                                  <ListText>미지급</ListText>\n                                </>\n                            }\n                          </Status>\n                          <Status style={{ padding: 'none important!', width: '20% important!' }}>\n                            {\n                              onStatus(post.status) ?\n                              \n                                    <Link to=\"#\" className=\"btn btn-primary\" onClick={() => {\n                                      handleCancelKiosk(post.pk)\n                                    }} style={{padding:'7.5px 21px 7.5px'}}><strong>취소</strong></Link>\n                           \n                                :\n                                <>\n                                  <Link to=\"#\" className=\"btn btn-primary\" onClick={() => {\n                                    handleGiveKiosk(post.pk)\n                                  }}><strong>지급하기</strong></Link>\n                                </>\n                            }\n                          </Status>\n\n                          <Modify><Link to={{\n                            pathname: '/kiosk-revise',\n                            state: {\n                              pk: post.pk, num: post.kiosk_num, unique: post.unique_code\n                              , store: post.store_name\n                            }\n                          }} className=\"px-3 text-primary\"><i className=\"uil uil-pen font-size-18\"></i></Link></Modify>\n                          <Delete><Link to=\"#\" className=\"px-3 text-danger\" onClick={() => {\n                            setDeleteNum(post.pk)\n                            setwith_delete(true)\n                          }}><i className=\"uil uil-trash-alt font-size-18\"></i></Link></Delete>\n                        </Table>\n                      ))}\n\n                    </>\n\n                    {with_delete ? (\n                      <SweetAlert\n                        \n                        showConfirm={false}\n                        style={{\n                          paddingBottom: '42px'\n                        }}\n                      >\n                        <div style={{ paddingBottom: '52px', paddingTop: '30px' }}>\n                            <img src={deletepic} />\n                          </div>\n\n                          <h3><strong>정말 삭제 하시겠습니까?</strong></h3>\n                          <br />\n                        <Link to=\"#\" className=\"btn btn-danger\" onClick={() => {\n                          setwith_delete(false)\n                        }}> <i className=\"uil uil-times me-1\" ></i> 취소 </Link>{\" \"}\n                        <Link to=\"#\" className=\"btn btn-success\" onClick={onDelete}> <i className=\"uil uil-file-alt me-1\"></i> 확인 </Link>\n                      </SweetAlert>\n                    ) : null}\n                    \n                    <Row className=\"row mb-4\">\n                      <div className=\"col text-end\">\n                        <Link to=\"/add-kiosk\" className=\"btn btn-primary\">+ 추가하기</Link>\n                      </div>\n                    </Row>\n\n                    <Row className=\"row mb-4\">\n\n                      <PageBox>\n                        <Pagination aria-label=\"Page navigation example\">\n                          <PaginationItem>\n                            <PaginationLink onClick={() => { onChangePage(1) }}>처음</PaginationLink>\n                          </PaginationItem>\n                          {pageNumbers.map(number => (\n                            <PaginationItem key={number} >\n                              <PaginationLink onClick={() => { onChangePage(number) }} style={onChangePageColor(number)}>\n                                {number}\n                              </PaginationLink>\n                            </PaginationItem>\n                          ))}\n                          <PaginationItem>\n                            <PaginationLink onClick={() => { onChangePage(maxPage) }}>마지막</PaginationLink>\n                          </PaginationItem>\n                        </Pagination>\n                      </PageBox>\n                    </Row>\n                  </div>\n                </div>\n              </React.Fragment>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </React.Fragment>\n  )\n}\n\n\n\nexport default KioskList\n","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\pages\\KioskManagerPage\\KioskAd\\AdList.js",["451","452","453","454","455","456"],"import React, { useEffect, useState } from \"react\";\nimport { Col, Container, Row, Card, Spinner } from \"reactstrap\"\nimport { Link, useHistory } from \"react-router-dom\"\n//Import Breadcrumb\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\"\nimport axios from 'axios'\nimport styled from \"styled-components\"\nimport SweetAlert from \"react-bootstrap-sweetalert\"\nimport { AvForm } from \"availity-reactstrap-validation\";\nimport deletepic from \"../delete.png\"\nimport { Pagination, PaginationItem, PaginationLink } from \"reactstrap\"\n\nconst CheckBox = styled.input`\nmargin: 14px 14px 14px;\n`\nconst LoadingBox = styled.div`\nwidth: 100%;\nalign-items: center;\ndisplay: flex;\nflex-direction: column;\n`\nconst Table = styled.table`\n  width: 100%;\n  background:#ffffff;\n  margin-bottom: 14px;\n  align-items: center;\n  display:flex;\n  justify-content: space-between;\n  box-shadow: 1px 1px 1px #00000029;\n  word-break:break-all;\n  th{\n    color: #596275;\n  }\n`\nconst AdName = styled.th`\n  width: 15%;\n  color: black;\n  padding: 14px 14px 14px;\n  text-align: center;\n`\nconst AdImg = styled.th`\nwidth: 20%;\n  color: black;\n  padding: 14px 14px 14px;\n  text-align: center;\n`\nconst Date = styled.th`\n  width: 20%;\n  color: black;\n  padding: 14px 14px 14px;\n  text-align: center;\n`\nconst Modify = styled.th`\nwidth: 10%;\n  color: black;\n  padding: 14px 14px 14px;\n`\nconst Delete = styled.th`\nwidth: 10%;\n  color: black;\n  padding: 14px 14px 14px;\n`\nconst ListText = styled.p`\nfont-weight: 400;\nmargin:0;\n`\nconst PageBox = styled.div`\nwidth: 100%;\nalign-items: center;\ndisplay: flex;\nflex-direction: column;\n`\nconst PageUl = styled.ul`\n  float:left;\n  list-style: none;\n  text-align:center;\n  border-radius:3px;\n  color:black;\n  padding:1px;\n  \n  background-color: white;\n`;\n\n\nconst ListImg = styled.img`\nheight: auto;\nwidth: 50%;\n`\n\nconst AdList = () => {\n  const history = useHistory()\n  const [deleteNum, setDeleteNum] = useState(0)\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const [search, setSearch] = useState('')\n  const [maxPage, setMaxPage] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n\n\n  const [with_delete, setwith_delete] = useState(false);\n\n  const isAdmin = async () => {\n\n    const { data: response } = await axios.get('/api/auth')\n    if (!response.third) {\n      alert('회원만 접근 가능합니다.')\n      history.push('/login')\n    }\n    else {\n      if (!response.second) {\n        alert('관리자만 접근 가능합니다.')\n        history.push('/product-list')\n      } else {\n\n      }\n    }\n  }\n  useEffect(() => {\n    isAdmin()\n  }, [])\n\n  useEffect(() => {\n    async function fetchPosts() {\n      setLoading(true);\n      const page = currentPage\n      const { data: response } = await axios.get(`/api/ad/${page}?keyword=${search}`);\n\n      setPosts(response.data.result);\n      setMaxPage(response.data.maxPage);\n      setLoading(false);\n    }\n    fetchPosts()\n  }, []);\n\n  const onSearch = (e) => {\n    setSearch(e.target.value)\n  }\n  const onDelete = async (e) => {\n    e.preventDefault()\n    const { data: response } = await axios.post('/api/deletead', {\n      pk: deleteNum\n    })\n    alert('삭제되었습니다.')\n    setwith_delete(false)\n    window.location.replace(\"/ad-list\")\n  };\n\n\n\n  function onChangePage(num) {\n    async function fetchPosts() {\n      setLoading(true);\n      const page = num\n      setCurrentPage(num)\n      const { data: response } = await axios.get(`/api/ad/${page}?keyword=${search}`);\n      setPosts(response.data.result);\n      setLoading(false);\n    }\n    fetchPosts()\n  };\n  function onChangePageColor(num) {\n    if (currentPage == num) {\n      return { background: '#5B73E8', color: '#ffffff' }\n    }\n    else {\n      return { background: '#ffffff', color: '#74788D' }\n    }\n  }\n  function onCreateTime(num) {\n    num = num.split('.')[0]\n    num = num.replace('T', ' ')\n    return num\n  }\n  const pageNumbers = [];\n  for (let i = 1; i <= maxPage; i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <React.Fragment>\n\n      <div className=\"page-content\" style={{color:'#596275'}}>\n        <Container fluid style={{fontFamily:'NanumGothic'}}>\n\n          <Breadcrumbs breadcrumbItem=\"광고관리\" />\n          <Row>\n            <Col lg=\"12\">\n              <React.Fragment>\n                <div>\n                  <Card>\n                    <AvForm className=\"app-search d-none d-lg-block\" onSubmit={() => { onChangePage(1) }}>\n                      <div className=\"position-relative\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Search...\"\n                          value={search}\n                          onChange={onSearch}\n                        />\n                        <span className=\"uil-search\"></span>\n                      </div>\n                    </AvForm>\n                  </Card>\n                  <div className=\"table-responsive mb-4\">\n                    <Table style={{ background: '#EEF1FD' }}>\n                      <CheckBox type=\"checkbox\" id=\"cb1\" />\n                      <AdName>광고명</AdName>\n                      <AdImg>광고사진</AdImg>\n                      <Date>생성시간</Date>\n                      <Modify>수정</Modify>\n                      <Delete>삭제</Delete>\n                    </Table>\n                    <>\n                      {\n                        loading &&\n                        <LoadingBox><Spinner className=\"m-1\" color=\"primary\" /></LoadingBox>\n                      }\n                      {posts && posts.map(post => (\n                        <Table key={post.pk}>\n                          <CheckBox type=\"checkbox\" id=\"cb1\" />\n                          <AdName><ListText>{post.ad_name}</ListText></AdName>\n                          <AdImg><ListImg src={\"http://emart.cafe24app.com\" + post.ad_image} /></AdImg>\n                          <Date><ListText>{onCreateTime(post.create_time)}</ListText></Date>\n                          <Modify><Link to={{\n                            pathname: '/ad-revise',\n                            state: { pk: post.pk, name: post.ad_name, img: post.ad_image }\n                          }} className=\"px-3 text-primary\" ><i className=\"uil uil-pen font-size-18\"></i></Link></Modify>\n                          <Delete><Link to=\"#\" className=\"px-3 text-danger\" onClick={() => {\n                            setDeleteNum(post.pk)\n                            setwith_delete(true)\n                          }}><i className=\"uil uil-trash-alt font-size-18\"></i></Link></Delete>\n                        </Table>\n                      ))}\n                    </>\n                    {with_delete ? (\n                      <SweetAlert\n                        \n                        showConfirm={false}\n                        style={{\n                          paddingBottom: '42px'\n                        }}\n                      >\n                        <div style={{ paddingBottom: '52px', paddingTop: '30px' }}>\n                            <img src={deletepic} />\n                          </div>\n\n                          <h3><strong>정말 삭제 하시겠습니까?</strong></h3>\n                          <br />\n                        <Link to=\"#\" className=\"btn btn-danger\" onClick={() => {\n                          setwith_delete(false)\n                        }}> <i className=\"uil uil-times me-1\" ></i> 취소 </Link>{\" \"}\n                        <Link to=\"#\" className=\"btn btn-success\" onClick={onDelete}> <i className=\"uil uil-file-alt me-1\"></i> 확인 </Link>\n                      </SweetAlert>\n                    ) : null}\n                   \n                    <Row className=\"row mb-4\">\n                      <div className=\"col text-end\">\n                        <Link to=\"/add-ad\" className=\"btn btn-primary\">+ 추가하기</Link>\n                      </div>\n                    </Row>\n\n                    <Row className=\"row mb-4\">\n                      <PageBox>\n                        <Pagination aria-label=\"Page navigation example\">\n                          <PaginationItem>\n                            <PaginationLink onClick={() => { onChangePage(1) }}>처음</PaginationLink>\n                          </PaginationItem>\n                          {pageNumbers.map(number => (\n                            <PaginationItem key={number} >\n                              <PaginationLink onClick={() => { onChangePage(number) }} style={onChangePageColor(number)}>\n                                {number}\n                              </PaginationLink>\n                            </PaginationItem>\n                          ))}\n                          <PaginationItem>\n                            <PaginationLink onClick={() => { onChangePage(maxPage) }}>마지막</PaginationLink>\n                          </PaginationItem>\n                        </Pagination>\n                      </PageBox>\n                    </Row>\n                  </div>\n                </div>\n              </React.Fragment>\n            </Col>\n          </Row>\n\n        </Container>\n      </div>\n\n    </React.Fragment>\n  )\n}\n\n//페이지 선택시 텍스트 색깔 #ffffff 배경 #5B73E8\n//선택 안할시 텍스트 색깔 #74788D 배경 #ffffff\n\nexport default AdList\n","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\pages\\KioskManagerPage\\KioskBrand\\BrandRevise.js",["457","458","459","460","461","462","463","464","465"],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\pages\\KioskManagerPage\\KioskProduct\\ProductList.js",["466","467","468","469","470","471","472","473","474","475"],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\pages\\KioskManagerPage\\KioskProduct\\ProductRevise.js",["476","477","478","479","480","481","482","483","484","485","486","487","488","489","490"],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\pages\\KioskManagerPage\\AddProduct.js",["491","492","493","494","495","496","497","498","499","500","501","502","503","504"],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\pages\\Authentication\\Login.js",["505"],"import PropTypes from 'prop-types'\nimport React, { useEffect, useContext } from \"react\"\n\nimport { Row, Col, Alert, Container ,CardBody,Card} from \"reactstrap\"\n\n// Redux\nimport { connect } from \"react-redux\"\nimport { withRouter, Link ,useHistory} from \"react-router-dom\"\n\n// availity-reactstrap-validation\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"\n\n// actions\nimport { loginUser, apiError, socialLogin } from \"../../store/actions\"\n\n// import images\nimport EmartLogo from \"../../assets/images/emart_logo.png\"\nimport axios from 'axios'\nimport { LoginContext } from '../../App'\n\nconst Login = (props) => {\n  const history = useHistory()\n  const { ID, setID, PW, setPW} = useContext(LoginContext)\n   // handleValidSubmit\n   \n\nconst onLogin = async (e) => {\n    e.preventDefault()\n    const { data: response } = await axios.post('/api/login', {\n         id: ID, \n         pw: PW\n        })\n        if(response.result==200){\n          alert(response.message)\n          const { data: res } = await axios.get('/api/auth')\n          if (res.first) {\n            history.push('/kiosk-list')\n          }\n          else if(res.second){\n            history.push('/brand-list')\n          }\n          else {\n            history.push('product-list')\n          }\n        }else{\n          alert(response.message)\n        }\n        \n        \n  };\n  const handleIDChange = e => {\n    setID(e.target.value)\n  }\n\n  const handlePWChange = e => {\n    setPW(e.target.value)\n  }\n  useEffect(() => {\n    document.body.className = \"authentication-bg\";\n    // remove classname when component will unmount\n    return function cleanup() {\n      document.body.className = \"\";\n    };\n  });\n \n  return (\n    <React.Fragment >\n      <div className=\"home-btn d-none d-sm-block\">\n        <Link to=\"/login\" className=\"text-dark\">\n          <i className=\"mdi mdi-home-variant h2\"></i>\n        </Link>\n      </div>\n      <div className=\"account-pages my-5 pt-sm-5\">\n        <Container>\n          \n          <Row className=\"align-items-center justify-content-center\" >\n            <Col md={8} lg={6} xl={5}>\n              <Card>\n\n                <CardBody className=\"p-4\">\n                 \n                  <div className=\"p-2 mt-4\">\n                    <AvForm\n                      className=\"form-horizontal\"\n                      onSubmit={onLogin}\n                    >\n                      {props.error && typeof props.error === \"string\" ? (\n                        <Alert color=\"danger\">{props.error}</Alert>\n                      ) : null}\n                      <div className=\"text-center\">\n                        <Link to=\"/login\" className=\"mb-5 d-block auth-logo\">\n                          <img src={EmartLogo} alt=\"\" height=\"33\" className=\"emart_logo\" />\n                  \n                        </Link>\n                      </div>\n                      <div className=\"mb-3\">\n                        <AvField\n                          name=\"email\"\n                          label=\"ID\"\n                          className=\"form-control\"\n                          placeholder=\"아이디를 입력하세요.\"\n                          type=\"text\"\n                          onChange={handleIDChange}\n                        />\n                      </div>\n                      <div className=\"mb-3\">\n                        <AvField\n                          name=\"password\"\n                          label=\"PW\"\n                          type=\"password\"\n                          onChange={handlePWChange}\n                          placeholder=\"비밀번호를 입력하세요.\"\n                        />\n                      </div>\n                      <div className=\"form-check\">\n                        <input\n                          type=\"checkbox\"\n                          className=\"form-check-input\"\n                          id=\"customControlInline\"\n                        />\n                        <label\n                          className=\"form-check-label\"\n                          htmlFor=\"customControlInline\"\n                        >\n                          자동 로그인\n                        </label>\n                      </div>\n\n                      <div className=\"mt-3 text-end\">\n                        <button\n                          className=\"btn btn-primary w-sm waves-effect waves-light\"\n                          type=\"submit\"\n                        >\n                          로그인\n                        </button>\n                      </div>\n\n                     \n\n                    </AvForm>\n\n                  </div>\n                </CardBody>\n              </Card>\n              {/* <div className=\"mt-5 text-center\">\n                <p>© {new Date().getFullYear()} Minible. Crafted with <i\n                  className=\"mdi mdi-heart text-danger\"></i> by Themesbrand\n                        </p>\n              </div> */}\n            </Col>\n          </Row>\n\n        </Container>\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = state => {\n  const { error } = state.Login\n  return { error }\n}\n\nexport default withRouter(\n  connect(mapStateToProps, { loginUser, apiError, socialLogin })(Login)\n)\n\nLogin.propTypes = {\n  error: PropTypes.any,\n  history: PropTypes.object,\n  loginUser: PropTypes.func,\n  socialLogin: PropTypes.func\n}","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\pages\\KioskManagerPage\\KioskBrand\\BrandList.js",["506","507","508","509","510","511","512","513","514"],"import React, { useEffect, useState } from \"react\";\nimport { Col, Container, Row, Card, Spinner } from \"reactstrap\"\nimport { Link } from \"react-router-dom\"\n//Import Breadcrumb\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\"\nimport axios from 'axios'\nimport styled from \"styled-components\"\nimport SweetAlert from \"react-bootstrap-sweetalert\"\nimport { useHistory } from 'react-router';\nimport { AvForm } from \"availity-reactstrap-validation\"\nconst CheckBox = styled.input`\nmargin: 14px 14px 14px;\n`\nconst LoadingBox = styled.div`\nwidth: 100%;\nalign-items: center;\ndisplay: flex;\nflex-direction: column;\n`\nconst Table = styled.table`\n  width: 100%;\n  background:#ffffff;\n  margin-bottom: 14px;\n  align-items: center;\n  display:flex;\n  justify-content: space-between;\n  box-shadow: 1px 1px 1px #00000029;\n  word-break:break-all;\n  th{\n    color: #596275;\n  }\n`\nconst BrandName = styled.th`\n  width: 15%;\n  color: black;\n  padding: 14px 14px 14px;\n  text-align:center;\n`\nconst Class1 = styled.th`\n  width: 11%;\n  color: black;\n  padding: 14px 14px 14px;\n  text-align:center;\n`\nconst Class2 = styled.th`\n  width: 11%;\n  color: black;\n  padding: 14px 14px 14px;\n  text-align:center;\n`\nconst Class3 = styled.th`\n  width: 11%;\n  color: black;\n  padding: 14px 14px 14px;\n  text-align:center;\n`\nconst Class4 = styled.th`\n  width: 11%;\n  color: black;\n  padding: 14px 14px 14px;\n  text-align:center;\n`\nconst Status = styled.th`\n  width: 11%;\n  color: black;\n  padding: 14px 14px 14px;\n  text-align:center;\n`\nconst Date = styled.th`\n  width: 15%;\n  color: black;\n  padding: 14px 14px 14px;\n  text-align:center;\n`\nconst Modify = styled.th`\nwidth: 7.5%;\n  color: black;\n  padding: 14px 14px 14px;\n`\nconst Delete = styled.th`\nwidth: 7.5%;\n  color: black;\n  padding: 14px 14px 14px;\n`\nconst ListText = styled.p`\nfont-weight: 400;\nmargin:0;\n`\nconst PageBox = styled.div`\nwidth: 100%;\nalign-items: center;\ndisplay: flex;\nflex-direction: column;\n`\nconst PageUl = styled.ul`\n  float:left;\n  list-style: none;\n  text-align:center;\n  border-radius:3px;\n  color:black;\n  padding:1px;\n  \n  background-color: white;\n`;\n\nconst PageLi = styled.li`\n  display:inline-block;\n  font-size:17px;\n  font-weight:600;\n  padding:5px;\n  \n  \n  &:hover{\n    cursor:pointer;\n    color:white;\n    background-color:blue;\n  }\n  &:focus::after{\n    color:#ffffff;\n    background-color:#000000;\n  }\n`;\n\nconst PageSpan = styled.span`\n  &:hover::after,\n  &:focus::after{\n    border-radius:100%;\n    color:black;\n    background-color:black;\n  }\n`;\n\nconst BrandList = () => {\n\n  const history = useHistory()\n  const [deleteNum, setDeleteNum] = useState(0)\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [maxPage, setMaxPage] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [with_delete, setwith_delete] = useState(false);\n  const [search, setSearch] = useState('')\n  const isAdmin = async () => {\n    setLoading(true);\n    const { data: response } = await axios.get('/api/auth')\n\n    if (!response.third) {\n      alert('회원만 접근 가능합니다.')\n      history.push('/login')\n    }\n    else {\n      if (!response.second) {\n        alert('관리자만 접근 가능합니다.')\n        history.push('/product-list')\n      } else {\n        setLoading(false)\n      }\n    }\n  }\n  useEffect(() => {\n    isAdmin()\n  }, [])\n\n  useEffect(() => {\n    async function fetchPosts() {\n      setLoading(true);\n      const page = currentPage\n      const { data: response } = await axios.get(`/api/brand/${page}?keyword=${search}`);\n\n      setPosts(response.data.result);\n      setMaxPage(response.data.maxPage);\n      setLoading(false);\n    }\n    fetchPosts()\n  }, []);\n\n  function setStatus(stt) {\n    if (stt === 1) {\n      return \"사용중\"\n    }\n    else {\n      return \"사용안함\"\n    }\n  }\n  const onSearch = (e) => {\n    setSearch(e.target.value)\n  }\n  function onChangePage(num) {\n    async function fetchPosts() {\n      setLoading(true);\n      const page = num\n      const { data: response } = await axios.get(`/api/brand/${page}?keyword=${search}`);\n      setPosts(response.data.result);\n      setLoading(false);\n    }\n    fetchPosts()\n  };\n  function onCreateTime(num) {\n    num = num.split('.')[0]\n    num = num.replace('T', ' ')\n    return num\n  }\n  const pageNumbers = [];\n  for (let i = 1; i <= maxPage; i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"page-content\" style={{color:'#596275'}}>\n        <Container fluid style={{fontFamily:'NanumGothic'}}>\n          <Breadcrumbs breadcrumbItem=\"브랜드관리\" />\n          <Row>\n            <Col lg=\"12\">\n\n              <React.Fragment>\n                <div>\n                  <Card>\n                    <AvForm className=\"app-search d-none d-lg-block\" onSubmit={() => { onChangePage(1) }}>\n                      <div className=\"position-relative\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Search...\"\n                          value={search}\n                          onChange={onSearch}\n                        />\n                        <span className=\"uil-search\"></span>\n                      </div>\n                    </AvForm>\n                  </Card>\n                  <div className=\"table-responsive mb-4\">\n\n                    <Table style={{ background: '#EEF1FD' }}>\n                      <CheckBox type=\"checkbox\" id=\"cb1\" />\n                      <BrandName>브랜드</BrandName>\n                      <Class1>중분류1</Class1>\n                      <Class2>중분류2</Class2>\n                      <Class3>중분류3</Class3>\n                      <Class4>중분류4</Class4>\n                      <Status>상태</Status>\n                      <Date>생성시간</Date>\n                      <Modify>수정</Modify>\n                      <Delete>삭제</Delete>\n                    </Table>\n                    <>\n                      {\n                        loading &&\n                        <LoadingBox><Spinner className=\"m-1\" color=\"primary\" /></LoadingBox>\n                      }\n                      {posts && posts.map(post => (\n                        <Table key={post.pk}>\n                          <CheckBox type=\"checkbox\" id=\"cb1\" />\n                          <BrandName><ListText>{post.brand_name}</ListText></BrandName>\n                          <Class1><ListText>{post.middle_class_1}</ListText></Class1>\n                          <Class2><ListText>{post.middle_class_2}</ListText></Class2>\n                          <Class3><ListText>{post.middle_class_3}</ListText></Class3>\n                          <Class4><ListText>{post.middle_class_4}</ListText></Class4>\n                          <Status><ListText>{setStatus(post.status)}</ListText></Status>\n                          <Date><ListText>{onCreateTime(post.create_time)}</ListText></Date>\n                          <Modify><Link to={{\n                            pathname: '/brand-revise',\n                            state: {\n                              pk: post.pk, name: post.brand_name, class1: post.middle_class_1\n                              , class2: post.middle_class_2, class3: post.middle_class_3, class4: post.middle_class_4,\n                              status: setStatus(post.status)\n                            }\n                          }} className=\"px-3 text-primary\"><i className=\"uil uil-pen font-size-18\"></i></Link></Modify>\n                          <Delete><Link to=\"#\" className=\"px-3 text-danger\"\n                          // onClick={() => {\n                          //   setDeleteNum(post.pk)\n                          //   setwith_delete(true)}}\n                          ><i className=\"uil uil-trash-alt font-size-18\"></i></Link></Delete>\n                        </Table>\n                      ))}\n\n                    </>\n                    {with_delete ? (\n                      <SweetAlert\n                        title=\"정말 삭제하시겠습니까?\"\n                        warning\n                        showConfirm={false}\n                        style={{\n                          paddingBottom: '42px'\n                        }}\n                      >\n                        <br />\n                        <Link to=\"#\" className=\"btn btn-danger\" onClick={() => {\n                          setwith_delete(false)\n                        }}> <i className=\"uil uil-times me-1\" ></i> 취소 </Link>{\" \"}\n                        <Link to=\"#\" className=\"btn btn-success\" onClick={() => {\n                          setwith_delete(false)\n                        }}> <i className=\"uil uil-file-alt me-1\"></i> 확인 </Link>\n                      </SweetAlert>\n\n                    ) : null}\n\n                    {/* <Row className=\"row mb-4\">\n                      <div className=\"col text-end\">\n                        <Link to=\"/add-brand\" className=\"btn btn-primary\">+ 추가하기</Link>\n                      </div>\n                    </Row>\n\n                    <Row className=\"row mb-4\">\n\n                      <PageBox>\n                        <PageUl className=\"pagination\">\n                        <PageLi onClick={()=>{onChangePage(1)}}>처음</PageLi>\n                          {pageNumbers.map(number => (\n                            <PageLi key={number} className=\"page-item\">\n                              <PageSpan onClick={() => {onChangePage(number)}}>\n                                {number}\n                              </PageSpan>\n                            </PageLi>\n                          ))}\n                          <PageLi onClick={()=>{onChangePage(maxPage)}}>마지막</PageLi>\n                        </PageUl>\n                      </PageBox>\n                    </Row> */}\n                  </div>\n                </div>\n              </React.Fragment>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </React.Fragment>\n  )\n}\n\n\n\nexport default BrandList\n","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\components\\CommonForBoth\\Rightbar.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\layout\\reducer.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\calendar\\saga.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\calendar\\reducer.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\e-commerce\\saga.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\layout\\saga.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\chat\\saga.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\chat\\reducer.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\invoices\\reducer.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\e-commerce\\reducer.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\invoices\\saga.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\contacts\\reducer.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\contacts\\saga.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\auth\\login\\reducer.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\auth\\register\\saga.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\auth\\register\\reducer.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\auth\\forgetpwd\\saga.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\auth\\login\\saga.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\auth\\profile\\reducer.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\auth\\profile\\saga.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\auth\\forgetpwd\\reducer.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\components\\VerticalLayout\\SidebarContent.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\auth\\register\\actions.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\auth\\login\\actions.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\layout\\actions.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\calendar\\actions.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\auth\\forgetpwd\\actions.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\auth\\profile\\actions.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\chat\\actions.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\e-commerce\\actions.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\invoices\\actions.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\contacts\\actions.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\components\\CommonForBoth\\TopbarDropdown\\ProfileMenu.js",["515","516"],"import React, { useState, useEffect } from \"react\"\nimport PropTypes from 'prop-types'\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\"\n\n//i18n\nimport { withTranslation } from \"react-i18next\"\n// Redux\nimport { connect } from \"react-redux\"\nimport { withRouter, Link, useHistory } from \"react-router-dom\"\nimport axios from \"axios\"\n// users\nimport user4 from \"../../../assets/images/users/avatar-4.jpg\"\n\nconst ProfileMenu = props => {\n  // Declare a new state variable, which we'll call \"menu\"\n  const [menu, setMenu] = useState(false)\n  const history = useHistory()\n  const [username, setUsername] = useState(\"Admin\")\n  const [userLevel, setUserLevel] = useState(\"\")\n  const isAdmin = async () => {\n  \n    const { data: response } = await axios.get('/api/auth')\n    setUsername(response.id)\n    if(response.first){\n      setUserLevel(\"개발자\")\n    }\n    else{\n      if(response.second){\n        setUserLevel(\"관리자\")\n      }\n      else{\n        if(response.third){\n          setUserLevel(\"일반회원\")\n        }\n        \n      }\n    }\n  }\n  useEffect(() => {\n    isAdmin()\n  }, [])\n  const onLogout = async () => {\n    axios.post('/api/logout')\n    alert(\"로그아웃 되었습니다.\")\n  }\n  return (\n    <React.Fragment>\n      <Dropdown\n        isOpen={menu}\n        toggle={() => setMenu(!menu)}\n        className=\"d-inline-block\"\n      >\n        <DropdownToggle\n          className=\"btn header-item waves-effect\"\n          id=\"page-header-user-dropdown\"\n          tag=\"button\"\n        >\n          \n          <span>{username}</span>{\" \"}\n          \n        </DropdownToggle>\n        <DropdownMenu className=\"dropdown-menu-end\">\n          <DropdownItem tag=\"a\" href=\"/product-list\">\n            {\" \"}\n            <i className=\"uil uil-user-circle font-size-18 align-middle text-muted me-1\"></i>\n            {props.t(username)}{\" \"}\n          </DropdownItem>\n          \n          <DropdownItem>\n            <i className=\"uil uil-lock-alt font-size-18 align-middle me-1 text-muted\"></i>\n            {props.t(userLevel)}\n          </DropdownItem>\n          <div className=\"dropdown-divider\" />\n          <Link to=\"/login\" className=\"dropdown-item\"\n          onClick={onLogout}>\n            <i className=\"uil uil-sign-out-alt font-size-18 align-middle me-1 text-muted\"></i>\n            <span>{props.t(\"Logout\")}</span>\n          </Link>\n        </DropdownMenu>\n      </Dropdown>\n    </React.Fragment>\n  )\n}\n\nProfileMenu.propTypes = {\n  success: PropTypes.any,\n  t: PropTypes.any\n}\n\nconst mapStatetoProps = state => {\n  const { error, success } = state.Profile\n  return { error, success }\n}\n\nexport default withRouter(\n  connect(mapStatetoProps, {})(withTranslation()(ProfileMenu))\n)\n","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\components\\Common\\Breadcrumb.js",["517"],"import React from \"react\"\nimport PropTypes from 'prop-types'\nimport { Link } from \"react-router-dom\"\nimport { Row, Col, BreadcrumbItem } from \"reactstrap\"\nimport bread from \"./Breadcrumb.png\"\nconst Breadcrumb = props => {\n  return (\n    <Row>\n      <Col className=\"col-12\">\n        <div className=\"page-title-box d-flex align-items-center justify-content-between\">\n          \n          <h4 className=\"mb-0\">\n          &nbsp;\n              <img src={bread}/>\n              &nbsp;\n              {\"  \"+props.breadcrumbItem}\n            </h4>\n\n          <div className=\"page-title-right\">\n            <ol className=\"breadcrumb m-0\">\n              <BreadcrumbItem >\n              \n                <Link to=\"#\">{props.title}</Link>\n              </BreadcrumbItem>\n             \n            </ol>\n          </div>\n        </div>\n      </Col>\n    </Row>\n  )\n}\n\nBreadcrumb.propTypes = {\n  breadcrumbItem: PropTypes.string,\n  title: PropTypes.string\n}\n\nexport default Breadcrumb\n","C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\invoices\\actionTypes.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\e-commerce\\actionTypes.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\contacts\\actionTypes.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\chat\\actionTypes.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\calendar\\actionTypes.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\layout\\actionTypes.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\helpers\\fakebackend_helper.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\auth\\forgetpwd\\actionTypes.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\auth\\profile\\actionTypes.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\helpers\\firebase_helper.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\auth\\login\\actionTypes.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\store\\auth\\register\\actionTypes.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\helpers\\url_helper.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\helpers\\api_helper.js",[],"C:\\Users\\SEC\\Desktop\\김주안의 외주 프로젝트 모음\\emart_manage_juan\\src\\helpers\\jwt-token-access\\accessToken.js",[],{"ruleId":"518","severity":1,"message":"519","line":4,"column":13,"nodeType":"520","messageId":"521","endLine":4,"endColumn":26},{"ruleId":"518","severity":1,"message":"522","line":5,"column":10,"nodeType":"520","messageId":"521","endLine":5,"endColumn":23},{"ruleId":"523","replacedBy":"524"},{"ruleId":"525","replacedBy":"526"},{"ruleId":"518","severity":1,"message":"527","line":32,"column":8,"nodeType":"520","messageId":"521","endLine":32,"endColumn":16},{"ruleId":"518","severity":1,"message":"528","line":21,"column":8,"nodeType":"520","messageId":"521","endLine":21,"endColumn":10},{"ruleId":"518","severity":1,"message":"529","line":22,"column":8,"nodeType":"520","messageId":"521","endLine":22,"endColumn":12},{"ruleId":"530","severity":1,"message":"531","line":57,"column":6,"nodeType":"532","endLine":57,"endColumn":8,"suggestions":"533"},{"ruleId":"518","severity":1,"message":"534","line":62,"column":13,"nodeType":"520","messageId":"521","endLine":62,"endColumn":16},{"ruleId":"530","severity":1,"message":"535","line":74,"column":3,"nodeType":"520","endLine":74,"endColumn":12,"suggestions":"536"},{"ruleId":"537","severity":1,"message":"538","line":261,"column":27,"nodeType":"539","endLine":261,"endColumn":45},{"ruleId":"537","severity":1,"message":"538","line":282,"column":27,"nodeType":"539","endLine":282,"endColumn":47},{"ruleId":"540","severity":1,"message":"541","line":31,"column":18,"nodeType":"542","messageId":"543","endLine":31,"endColumn":20},{"ruleId":"518","severity":1,"message":"544","line":48,"column":10,"nodeType":"520","messageId":"521","endLine":48,"endColumn":17},{"ruleId":"530","severity":1,"message":"531","line":67,"column":6,"nodeType":"532","endLine":67,"endColumn":8,"suggestions":"545"},{"ruleId":"530","severity":1,"message":"546","line":119,"column":3,"nodeType":"520","endLine":119,"endColumn":12,"suggestions":"547"},{"ruleId":"537","severity":1,"message":"538","line":157,"column":27,"nodeType":"539","endLine":157,"endColumn":50},{"ruleId":"537","severity":1,"message":"538","line":280,"column":27,"nodeType":"539","endLine":280,"endColumn":45},{"ruleId":"537","severity":1,"message":"538","line":301,"column":27,"nodeType":"539","endLine":301,"endColumn":47},{"ruleId":"518","severity":1,"message":"548","line":27,"column":10,"nodeType":"520","messageId":"521","endLine":27,"endColumn":17},{"ruleId":"518","severity":1,"message":"549","line":29,"column":10,"nodeType":"520","messageId":"521","endLine":29,"endColumn":17},{"ruleId":"518","severity":1,"message":"550","line":31,"column":10,"nodeType":"520","messageId":"521","endLine":31,"endColumn":20},{"ruleId":"518","severity":1,"message":"544","line":33,"column":10,"nodeType":"520","messageId":"521","endLine":33,"endColumn":17},{"ruleId":"540","severity":1,"message":"541","line":38,"column":18,"nodeType":"542","messageId":"543","endLine":38,"endColumn":20},{"ruleId":"530","severity":1,"message":"531","line":68,"column":6,"nodeType":"532","endLine":68,"endColumn":8,"suggestions":"551"},{"ruleId":"537","severity":1,"message":"538","line":135,"column":25,"nodeType":"539","endLine":135,"endColumn":48},{"ruleId":"537","severity":1,"message":"538","line":216,"column":21,"nodeType":"539","endLine":216,"endColumn":39},{"ruleId":"537","severity":1,"message":"538","line":238,"column":21,"nodeType":"539","endLine":238,"endColumn":41},{"ruleId":"518","severity":1,"message":"544","line":25,"column":10,"nodeType":"520","messageId":"521","endLine":25,"endColumn":17},{"ruleId":"518","severity":1,"message":"549","line":28,"column":10,"nodeType":"520","messageId":"521","endLine":28,"endColumn":17},{"ruleId":"518","severity":1,"message":"550","line":30,"column":10,"nodeType":"520","messageId":"521","endLine":30,"endColumn":20},{"ruleId":"540","severity":1,"message":"541","line":39,"column":18,"nodeType":"542","messageId":"543","endLine":39,"endColumn":20},{"ruleId":"530","severity":1,"message":"552","line":77,"column":6,"nodeType":"532","endLine":77,"endColumn":8,"suggestions":"553"},{"ruleId":"530","severity":1,"message":"531","line":80,"column":6,"nodeType":"532","endLine":80,"endColumn":8,"suggestions":"554"},{"ruleId":"537","severity":1,"message":"538","line":147,"column":25,"nodeType":"539","endLine":147,"endColumn":48},{"ruleId":"537","severity":1,"message":"538","line":227,"column":21,"nodeType":"539","endLine":227,"endColumn":39},{"ruleId":"537","severity":1,"message":"538","line":249,"column":21,"nodeType":"539","endLine":249,"endColumn":41},{"ruleId":"518","severity":1,"message":"555","line":80,"column":7,"nodeType":"520","messageId":"521","endLine":80,"endColumn":13},{"ruleId":"518","severity":1,"message":"556","line":91,"column":7,"nodeType":"520","messageId":"521","endLine":91,"endColumn":13},{"ruleId":"518","severity":1,"message":"557","line":109,"column":7,"nodeType":"520","messageId":"521","endLine":109,"endColumn":15},{"ruleId":"530","severity":1,"message":"531","line":150,"column":6,"nodeType":"532","endLine":150,"endColumn":8,"suggestions":"558"},{"ruleId":"530","severity":1,"message":"559","line":163,"column":6,"nodeType":"532","endLine":163,"endColumn":8,"suggestions":"560"},{"ruleId":"518","severity":1,"message":"561","line":167,"column":19,"nodeType":"520","messageId":"521","endLine":167,"endColumn":27},{"ruleId":"540","severity":1,"message":"541","line":187,"column":21,"nodeType":"542","messageId":"543","endLine":187,"endColumn":23},{"ruleId":"540","severity":1,"message":"541","line":200,"column":11,"nodeType":"542","messageId":"543","endLine":200,"endColumn":13},{"ruleId":"540","severity":1,"message":"541","line":203,"column":16,"nodeType":"542","messageId":"543","endLine":203,"endColumn":18},{"ruleId":"540","severity":1,"message":"541","line":263,"column":47,"nodeType":"542","messageId":"543","endLine":263,"endColumn":49},{"ruleId":"540","severity":1,"message":"541","line":280,"column":47,"nodeType":"542","messageId":"543","endLine":280,"endColumn":49},{"ruleId":"540","severity":1,"message":"541","line":294,"column":46,"nodeType":"542","messageId":"543","endLine":294,"endColumn":48},{"ruleId":"537","severity":1,"message":"538","line":321,"column":29,"nodeType":"539","endLine":321,"endColumn":52},{"ruleId":"540","severity":1,"message":"541","line":41,"column":18,"nodeType":"542","messageId":"543","endLine":41,"endColumn":20},{"ruleId":"518","severity":1,"message":"544","line":51,"column":10,"nodeType":"520","messageId":"521","endLine":51,"endColumn":17},{"ruleId":"518","severity":1,"message":"562","line":55,"column":10,"nodeType":"520","messageId":"521","endLine":55,"endColumn":17},{"ruleId":"518","severity":1,"message":"563","line":56,"column":10,"nodeType":"520","messageId":"521","endLine":56,"endColumn":22},{"ruleId":"518","severity":1,"message":"564","line":58,"column":22,"nodeType":"520","messageId":"521","endLine":58,"endColumn":35},{"ruleId":"518","severity":1,"message":"565","line":63,"column":25,"nodeType":"520","messageId":"521","endLine":63,"endColumn":41},{"ruleId":"518","severity":1,"message":"566","line":66,"column":10,"nodeType":"520","messageId":"521","endLine":66,"endColumn":25},{"ruleId":"518","severity":1,"message":"567","line":67,"column":23,"nodeType":"520","messageId":"521","endLine":67,"endColumn":37},{"ruleId":"530","severity":1,"message":"531","line":100,"column":6,"nodeType":"532","endLine":100,"endColumn":8,"suggestions":"568"},{"ruleId":"540","severity":1,"message":"541","line":108,"column":26,"nodeType":"542","messageId":"543","endLine":108,"endColumn":28},{"ruleId":"540","severity":1,"message":"541","line":122,"column":27,"nodeType":"542","messageId":"543","endLine":122,"endColumn":29},{"ruleId":"540","severity":1,"message":"541","line":126,"column":32,"nodeType":"542","messageId":"543","endLine":126,"endColumn":34},{"ruleId":"540","severity":1,"message":"541","line":150,"column":38,"nodeType":"542","messageId":"543","endLine":150,"endColumn":40},{"ruleId":"540","severity":1,"message":"541","line":153,"column":32,"nodeType":"542","messageId":"543","endLine":153,"endColumn":34},{"ruleId":"540","severity":1,"message":"541","line":157,"column":15,"nodeType":"542","messageId":"543","endLine":157,"endColumn":17},{"ruleId":"530","severity":1,"message":"569","line":166,"column":3,"nodeType":"520","endLine":166,"endColumn":12,"suggestions":"570"},{"ruleId":"530","severity":1,"message":"571","line":179,"column":3,"nodeType":"520","endLine":179,"endColumn":12,"suggestions":"572"},{"ruleId":"537","severity":1,"message":"538","line":224,"column":27,"nodeType":"539","endLine":224,"endColumn":50},{"ruleId":"537","severity":1,"message":"538","line":338,"column":27,"nodeType":"539","endLine":338,"endColumn":45},{"ruleId":"537","severity":1,"message":"538","line":361,"column":27,"nodeType":"539","endLine":361,"endColumn":47},{"ruleId":"540","severity":1,"message":"541","line":43,"column":18,"nodeType":"542","messageId":"543","endLine":43,"endColumn":20},{"ruleId":"518","severity":1,"message":"544","line":53,"column":10,"nodeType":"520","messageId":"521","endLine":53,"endColumn":17},{"ruleId":"518","severity":1,"message":"562","line":57,"column":10,"nodeType":"520","messageId":"521","endLine":57,"endColumn":17},{"ruleId":"518","severity":1,"message":"563","line":58,"column":10,"nodeType":"520","messageId":"521","endLine":58,"endColumn":22},{"ruleId":"518","severity":1,"message":"573","line":59,"column":10,"nodeType":"520","messageId":"521","endLine":59,"endColumn":19},{"ruleId":"518","severity":1,"message":"574","line":60,"column":20,"nodeType":"520","messageId":"521","endLine":60,"endColumn":31},{"ruleId":"518","severity":1,"message":"565","line":64,"column":25,"nodeType":"520","messageId":"521","endLine":64,"endColumn":41},{"ruleId":"518","severity":1,"message":"566","line":66,"column":10,"nodeType":"520","messageId":"521","endLine":66,"endColumn":25},{"ruleId":"518","severity":1,"message":"567","line":67,"column":23,"nodeType":"520","messageId":"521","endLine":67,"endColumn":37},{"ruleId":"530","severity":1,"message":"531","line":89,"column":6,"nodeType":"532","endLine":89,"endColumn":8,"suggestions":"575"},{"ruleId":"530","severity":1,"message":"552","line":100,"column":6,"nodeType":"532","endLine":100,"endColumn":8,"suggestions":"576"},{"ruleId":"530","severity":1,"message":"569","line":124,"column":3,"nodeType":"520","endLine":124,"endColumn":12,"suggestions":"577"},{"ruleId":"530","severity":1,"message":"571","line":137,"column":3,"nodeType":"520","endLine":137,"endColumn":12,"suggestions":"578"},{"ruleId":"540","severity":1,"message":"541","line":157,"column":38,"nodeType":"542","messageId":"543","endLine":157,"endColumn":40},{"ruleId":"540","severity":1,"message":"541","line":160,"column":32,"nodeType":"542","messageId":"543","endLine":160,"endColumn":34},{"ruleId":"540","severity":1,"message":"541","line":164,"column":15,"nodeType":"542","messageId":"543","endLine":164,"endColumn":17},{"ruleId":"537","severity":1,"message":"538","line":212,"column":27,"nodeType":"539","endLine":212,"endColumn":50},{"ruleId":"537","severity":1,"message":"538","line":311,"column":27,"nodeType":"539","endLine":311,"endColumn":45},{"ruleId":"537","severity":1,"message":"538","line":334,"column":27,"nodeType":"539","endLine":334,"endColumn":47},{"ruleId":"518","severity":1,"message":"579","line":35,"column":10,"nodeType":"520","messageId":"521","endLine":35,"endColumn":19},{"ruleId":"540","severity":1,"message":"541","line":42,"column":18,"nodeType":"542","messageId":"543","endLine":42,"endColumn":20},{"ruleId":"530","severity":1,"message":"531","line":77,"column":6,"nodeType":"532","endLine":77,"endColumn":8,"suggestions":"580"},{"ruleId":"530","severity":1,"message":"552","line":98,"column":6,"nodeType":"532","endLine":98,"endColumn":8,"suggestions":"581"},{"ruleId":"530","severity":1,"message":"546","line":126,"column":3,"nodeType":"520","endLine":126,"endColumn":12,"suggestions":"582"},{"ruleId":"537","severity":1,"message":"538","line":169,"column":29,"nodeType":"539","endLine":169,"endColumn":52},{"ruleId":"537","severity":1,"message":"538","line":293,"column":29,"nodeType":"539","endLine":293,"endColumn":47},{"ruleId":"537","severity":1,"message":"538","line":314,"column":29,"nodeType":"539","endLine":314,"endColumn":49},{"ruleId":"518","severity":1,"message":"583","line":87,"column":7,"nodeType":"520","messageId":"521","endLine":87,"endColumn":13},{"ruleId":"518","severity":1,"message":"584","line":137,"column":10,"nodeType":"520","messageId":"521","endLine":137,"endColumn":22},{"ruleId":"518","severity":1,"message":"585","line":137,"column":24,"nodeType":"520","messageId":"521","endLine":137,"endColumn":39},{"ruleId":"518","severity":1,"message":"586","line":139,"column":10,"nodeType":"520","messageId":"521","endLine":139,"endColumn":18},{"ruleId":"518","severity":1,"message":"587","line":139,"column":20,"nodeType":"520","messageId":"521","endLine":139,"endColumn":31},{"ruleId":"518","severity":1,"message":"588","line":140,"column":10,"nodeType":"520","messageId":"521","endLine":140,"endColumn":19},{"ruleId":"518","severity":1,"message":"589","line":140,"column":21,"nodeType":"520","messageId":"521","endLine":140,"endColumn":33},{"ruleId":"518","severity":1,"message":"590","line":142,"column":10,"nodeType":"520","messageId":"521","endLine":142,"endColumn":18},{"ruleId":"518","severity":1,"message":"591","line":142,"column":20,"nodeType":"520","messageId":"521","endLine":142,"endColumn":31},{"ruleId":"518","severity":1,"message":"592","line":148,"column":9,"nodeType":"520","messageId":"521","endLine":148,"endColumn":16},{"ruleId":"530","severity":1,"message":"531","line":174,"column":6,"nodeType":"532","endLine":174,"endColumn":8,"suggestions":"593"},{"ruleId":"530","severity":1,"message":"594","line":186,"column":6,"nodeType":"532","endLine":186,"endColumn":8,"suggestions":"595"},{"ruleId":"530","severity":1,"message":"596","line":195,"column":6,"nodeType":"532","endLine":195,"endColumn":8,"suggestions":"597"},{"ruleId":"518","severity":1,"message":"561","line":205,"column":21,"nodeType":"520","messageId":"521","endLine":205,"endColumn":29},{"ruleId":"540","severity":1,"message":"541","line":219,"column":14,"nodeType":"542","messageId":"543","endLine":219,"endColumn":16},{"ruleId":"540","severity":1,"message":"541","line":219,"column":25,"nodeType":"542","messageId":"543","endLine":219,"endColumn":27},{"ruleId":"540","severity":1,"message":"541","line":239,"column":21,"nodeType":"542","messageId":"543","endLine":239,"endColumn":23},{"ruleId":"540","severity":1,"message":"541","line":247,"column":13,"nodeType":"542","messageId":"543","endLine":247,"endColumn":15},{"ruleId":"537","severity":1,"message":"538","line":496,"column":29,"nodeType":"539","endLine":496,"endColumn":52},{"ruleId":"518","severity":1,"message":"555","line":73,"column":7,"nodeType":"520","messageId":"521","endLine":73,"endColumn":13},{"ruleId":"530","severity":1,"message":"531","line":121,"column":6,"nodeType":"532","endLine":121,"endColumn":8,"suggestions":"598"},{"ruleId":"530","severity":1,"message":"559","line":134,"column":6,"nodeType":"532","endLine":134,"endColumn":8,"suggestions":"599"},{"ruleId":"518","severity":1,"message":"561","line":141,"column":19,"nodeType":"520","messageId":"521","endLine":141,"endColumn":27},{"ruleId":"540","severity":1,"message":"541","line":163,"column":21,"nodeType":"542","messageId":"543","endLine":163,"endColumn":23},{"ruleId":"537","severity":1,"message":"538","line":245,"column":29,"nodeType":"539","endLine":245,"endColumn":52},{"ruleId":"518","severity":1,"message":"544","line":24,"column":10,"nodeType":"520","messageId":"521","endLine":24,"endColumn":17},{"ruleId":"530","severity":1,"message":"531","line":44,"column":6,"nodeType":"532","endLine":44,"endColumn":8,"suggestions":"600"},{"ruleId":"540","severity":1,"message":"541","line":51,"column":18,"nodeType":"542","messageId":"543","endLine":51,"endColumn":20},{"ruleId":"530","severity":1,"message":"552","line":82,"column":6,"nodeType":"532","endLine":82,"endColumn":8,"suggestions":"601"},{"ruleId":"530","severity":1,"message":"602","line":111,"column":3,"nodeType":"520","endLine":111,"endColumn":12,"suggestions":"603"},{"ruleId":"540","severity":1,"message":"541","line":112,"column":16,"nodeType":"542","messageId":"543","endLine":112,"endColumn":18},{"ruleId":"537","severity":1,"message":"538","line":161,"column":27,"nodeType":"539","endLine":161,"endColumn":50},{"ruleId":"537","severity":1,"message":"538","line":327,"column":27,"nodeType":"539","endLine":327,"endColumn":45},{"ruleId":"537","severity":1,"message":"538","line":349,"column":27,"nodeType":"539","endLine":349,"endColumn":47},{"ruleId":"530","severity":1,"message":"531","line":139,"column":6,"nodeType":"532","endLine":139,"endColumn":8,"suggestions":"604"},{"ruleId":"530","severity":1,"message":"559","line":151,"column":6,"nodeType":"532","endLine":151,"endColumn":8,"suggestions":"605"},{"ruleId":"518","severity":1,"message":"561","line":155,"column":19,"nodeType":"520","messageId":"521","endLine":155,"endColumn":27},{"ruleId":"540","severity":1,"message":"541","line":175,"column":21,"nodeType":"542","messageId":"543","endLine":175,"endColumn":23},{"ruleId":"540","severity":1,"message":"541","line":192,"column":13,"nodeType":"542","messageId":"543","endLine":192,"endColumn":15},{"ruleId":"540","severity":1,"message":"541","line":200,"column":13,"nodeType":"542","messageId":"543","endLine":200,"endColumn":15},{"ruleId":"540","severity":1,"message":"541","line":203,"column":18,"nodeType":"542","messageId":"543","endLine":203,"endColumn":20},{"ruleId":"540","severity":1,"message":"541","line":206,"column":18,"nodeType":"542","messageId":"543","endLine":206,"endColumn":20},{"ruleId":"540","severity":1,"message":"541","line":209,"column":18,"nodeType":"542","messageId":"543","endLine":209,"endColumn":20},{"ruleId":"537","severity":1,"message":"538","line":311,"column":29,"nodeType":"539","endLine":311,"endColumn":52},{"ruleId":"540","severity":1,"message":"541","line":60,"column":18,"nodeType":"542","messageId":"543","endLine":60,"endColumn":20},{"ruleId":"540","severity":1,"message":"541","line":72,"column":25,"nodeType":"542","messageId":"543","endLine":72,"endColumn":27},{"ruleId":"540","severity":1,"message":"541","line":85,"column":31,"nodeType":"542","messageId":"543","endLine":85,"endColumn":33},{"ruleId":"540","severity":1,"message":"541","line":98,"column":27,"nodeType":"542","messageId":"543","endLine":98,"endColumn":29},{"ruleId":"530","severity":1,"message":"531","line":141,"column":6,"nodeType":"532","endLine":141,"endColumn":8,"suggestions":"606"},{"ruleId":"530","severity":1,"message":"607","line":153,"column":3,"nodeType":"520","endLine":153,"endColumn":12,"suggestions":"608"},{"ruleId":"530","severity":1,"message":"552","line":189,"column":6,"nodeType":"532","endLine":189,"endColumn":8,"suggestions":"609"},{"ruleId":"530","severity":1,"message":"610","line":268,"column":3,"nodeType":"520","endLine":268,"endColumn":12,"suggestions":"611"},{"ruleId":"530","severity":1,"message":"612","line":292,"column":3,"nodeType":"520","endLine":292,"endColumn":12,"suggestions":"613"},{"ruleId":"537","severity":1,"message":"538","line":323,"column":25,"nodeType":"539","endLine":323,"endColumn":48},{"ruleId":"537","severity":1,"message":"538","line":464,"column":25,"nodeType":"539","endLine":464,"endColumn":55},{"ruleId":"537","severity":1,"message":"538","line":551,"column":25,"nodeType":"539","endLine":551,"endColumn":61},{"ruleId":"537","severity":1,"message":"538","line":637,"column":25,"nodeType":"539","endLine":637,"endColumn":57},{"ruleId":"537","severity":1,"message":"538","line":737,"column":21,"nodeType":"539","endLine":737,"endColumn":39},{"ruleId":"537","severity":1,"message":"538","line":758,"column":21,"nodeType":"539","endLine":758,"endColumn":41},{"ruleId":"540","severity":1,"message":"541","line":64,"column":18,"nodeType":"542","messageId":"543","endLine":64,"endColumn":20},{"ruleId":"540","severity":1,"message":"541","line":76,"column":25,"nodeType":"542","messageId":"543","endLine":76,"endColumn":27},{"ruleId":"540","severity":1,"message":"541","line":89,"column":31,"nodeType":"542","messageId":"543","endLine":89,"endColumn":33},{"ruleId":"540","severity":1,"message":"541","line":102,"column":27,"nodeType":"542","messageId":"543","endLine":102,"endColumn":29},{"ruleId":"530","severity":1,"message":"531","line":145,"column":6,"nodeType":"532","endLine":145,"endColumn":8,"suggestions":"614"},{"ruleId":"530","severity":1,"message":"615","line":187,"column":3,"nodeType":"520","endLine":187,"endColumn":12,"suggestions":"616"},{"ruleId":"530","severity":1,"message":"610","line":260,"column":3,"nodeType":"520","endLine":260,"endColumn":12,"suggestions":"617"},{"ruleId":"530","severity":1,"message":"612","line":284,"column":3,"nodeType":"520","endLine":284,"endColumn":12,"suggestions":"618"},{"ruleId":"537","severity":1,"message":"538","line":315,"column":25,"nodeType":"539","endLine":315,"endColumn":48},{"ruleId":"537","severity":1,"message":"538","line":454,"column":25,"nodeType":"539","endLine":454,"endColumn":55},{"ruleId":"537","severity":1,"message":"538","line":541,"column":25,"nodeType":"539","endLine":541,"endColumn":61},{"ruleId":"537","severity":1,"message":"538","line":627,"column":25,"nodeType":"539","endLine":627,"endColumn":57},{"ruleId":"537","severity":1,"message":"538","line":723,"column":21,"nodeType":"539","endLine":723,"endColumn":39},{"ruleId":"537","severity":1,"message":"538","line":744,"column":21,"nodeType":"539","endLine":744,"endColumn":41},{"ruleId":"540","severity":1,"message":"541","line":33,"column":27,"nodeType":"542","messageId":"543","endLine":33,"endColumn":29},{"ruleId":"518","severity":1,"message":"619","line":89,"column":7,"nodeType":"520","messageId":"521","endLine":89,"endColumn":14},{"ruleId":"518","severity":1,"message":"555","line":95,"column":7,"nodeType":"520","messageId":"521","endLine":95,"endColumn":13},{"ruleId":"518","severity":1,"message":"556","line":106,"column":7,"nodeType":"520","messageId":"521","endLine":106,"endColumn":13},{"ruleId":"518","severity":1,"message":"557","line":124,"column":7,"nodeType":"520","messageId":"521","endLine":124,"endColumn":15},{"ruleId":"518","severity":1,"message":"620","line":136,"column":10,"nodeType":"520","messageId":"521","endLine":136,"endColumn":19},{"ruleId":"518","severity":1,"message":"621","line":136,"column":21,"nodeType":"520","messageId":"521","endLine":136,"endColumn":33},{"ruleId":"518","severity":1,"message":"622","line":140,"column":23,"nodeType":"520","messageId":"521","endLine":140,"endColumn":37},{"ruleId":"530","severity":1,"message":"531","line":162,"column":6,"nodeType":"532","endLine":162,"endColumn":8,"suggestions":"623"},{"ruleId":"530","severity":1,"message":"559","line":175,"column":6,"nodeType":"532","endLine":175,"endColumn":8,"suggestions":"624"},{"ruleId":"518","severity":1,"message":"625","line":17,"column":8,"nodeType":"520","messageId":"521","endLine":17,"endColumn":13},{"ruleId":"518","severity":1,"message":"626","line":22,"column":9,"nodeType":"520","messageId":"521","endLine":22,"endColumn":16},{"ruleId":"537","severity":1,"message":"538","line":14,"column":15,"nodeType":"539","endLine":14,"endColumn":33},"no-unused-vars","'serviceWorker' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","no-native-reassign",["627"],"no-negated-in-lhs",["628"],"'AddBrand' is defined but never used.","'up' is defined but never used.","'down' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isAdmin'. Either include it or remove the dependency array.","ArrayExpression",["629"],"'res' is assigned a value but never used.","React Hook useEffect contains a call to 'setCheckAddBrand'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [brandName.length, class1.length, class2.length, class3.length, class4.length] as a second argument to the useEffect Hook.",["630"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'loading' is assigned a value but never used.",["631"],"React Hook useEffect contains a call to 'setAdFile'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [selectedFiles] as a second argument to the useEffect Hook.",["632"],"'checkKn' is assigned a value but never used.","'checkUn' is assigned a value but never used.","'checkStore' is assigned a value but never used.",["633"],"React Hook useEffect has a missing dependency: 'location.state'. Either include it or remove the dependency array.",["634"],["635"],"'PageUl' is assigned a value but never used.","'PageLi' is assigned a value but never used.","'PageSpan' is assigned a value but never used.",["636"],"React Hook useEffect has missing dependencies: 'currentPage' and 'search'. Either include them or remove the dependency array.",["637"],"'response' is assigned a value but never used.","'checkPw' is assigned a value but never used.","'checkAddUser' is assigned a value but never used.","'setSelectList' is assigned a value but never used.","'setBrandNameList' is assigned a value but never used.","'selectBrandName' is assigned a value but never used.","'setBrandPkList' is assigned a value but never used.",["638"],"React Hook useEffect contains a call to 'setCheckAddUser'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [id.length, pw.length, checkId] as a second argument to the useEffect Hook.",["639"],"React Hook useEffect contains a call to 'setUserLevel'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [selected] as a second argument to the useEffect Hook.",["640"],"'userLevel' is assigned a value but never used.","'setSelected' is assigned a value but never used.",["641"],["642"],["643"],["644"],"'reviseImg' is assigned a value but never used.",["645"],["646"],["647"],"'Strong' is assigned a value but never used.","'postsPerPage' is assigned a value but never used.","'setPostsPerPage' is assigned a value but never used.","'kioskNum' is assigned a value but never used.","'setkioskNum' is assigned a value but never used.","'with_good' is assigned a value but never used.","'setwith_good' is assigned a value but never used.","'revisePk' is assigned a value but never used.","'setRevisePk' is assigned a value but never used.","'headers' is assigned a value but never used.",["648"],"React Hook useEffect has missing dependencies: 'currentPage', 'firstDate', and 'secondDate'. Either include them or remove the dependency array.",["649"],"React Hook useEffect has missing dependencies: 'firstDate' and 'secondDate'. Either include them or remove the dependency array.",["650"],["651"],["652"],["653"],["654"],"React Hook useEffect contains a call to 'setStatusNum'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [status] as a second argument to the useEffect Hook.",["655"],["656"],["657"],["658"],"React Hook useEffect contains a call to 'setBrandPk'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [selectedBrand, selectedStatus, selectedclass] as a second argument to the useEffect Hook.",["659"],["660"],"React Hook useEffect contains a call to 'setClassification'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [selectedclass] as a second argument to the useEffect Hook.",["661"],"React Hook useEffect contains a call to 'setMainFile'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [selectedMainFiles, selectedDetailFiles, selectedQrFiles] as a second argument to the useEffect Hook.",["662"],["663"],"React Hook useEffect contains a call to 'setStatusNum'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [selectedStatus] as a second argument to the useEffect Hook.",["664"],["665"],["666"],"'PageBox' is assigned a value but never used.","'deleteNum' is assigned a value but never used.","'setDeleteNum' is assigned a value but never used.","'setCurrentPage' is assigned a value but never used.",["667"],["668"],"'user4' is defined but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"669","fix":"670"},{"desc":"671","fix":"672"},{"desc":"669","fix":"673"},{"desc":"674","fix":"675"},{"desc":"669","fix":"676"},{"desc":"677","fix":"678"},{"desc":"669","fix":"679"},{"desc":"669","fix":"680"},{"desc":"681","fix":"682"},{"desc":"669","fix":"683"},{"desc":"684","fix":"685"},{"desc":"686","fix":"687"},{"desc":"669","fix":"688"},{"desc":"677","fix":"689"},{"desc":"684","fix":"690"},{"desc":"686","fix":"691"},{"desc":"669","fix":"692"},{"desc":"677","fix":"693"},{"desc":"674","fix":"694"},{"desc":"669","fix":"695"},{"desc":"696","fix":"697"},{"desc":"698","fix":"699"},{"desc":"669","fix":"700"},{"desc":"681","fix":"701"},{"desc":"669","fix":"702"},{"desc":"677","fix":"703"},{"desc":"704","fix":"705"},{"desc":"669","fix":"706"},{"desc":"681","fix":"707"},{"desc":"669","fix":"708"},{"desc":"709","fix":"710"},{"desc":"677","fix":"711"},{"desc":"712","fix":"713"},{"desc":"714","fix":"715"},{"desc":"669","fix":"716"},{"desc":"717","fix":"718"},{"desc":"712","fix":"719"},{"desc":"714","fix":"720"},{"desc":"669","fix":"721"},{"desc":"681","fix":"722"},"Update the dependencies array to be: [isAdmin]",{"range":"723","text":"724"},"Add dependencies array: [brandName.length, class1.length, class2.length, class3.length, class4.length]",{"range":"725","text":"726"},{"range":"727","text":"724"},"Add dependencies array: [selectedFiles]",{"range":"728","text":"729"},{"range":"730","text":"724"},"Update the dependencies array to be: [location.state]",{"range":"731","text":"732"},{"range":"733","text":"724"},{"range":"734","text":"724"},"Update the dependencies array to be: [currentPage, search]",{"range":"735","text":"736"},{"range":"737","text":"724"},"Add dependencies array: [id.length, pw.length, checkId]",{"range":"738","text":"739"},"Add dependencies array: [selected]",{"range":"740","text":"741"},{"range":"742","text":"724"},{"range":"743","text":"732"},{"range":"744","text":"739"},{"range":"745","text":"741"},{"range":"746","text":"724"},{"range":"747","text":"732"},{"range":"748","text":"729"},{"range":"749","text":"724"},"Update the dependencies array to be: [currentPage, firstDate, secondDate]",{"range":"750","text":"751"},"Update the dependencies array to be: [firstDate, secondDate]",{"range":"752","text":"753"},{"range":"754","text":"724"},{"range":"755","text":"736"},{"range":"756","text":"724"},{"range":"757","text":"732"},"Add dependencies array: [status]",{"range":"758","text":"759"},{"range":"760","text":"724"},{"range":"761","text":"736"},{"range":"762","text":"724"},"Add dependencies array: [selectedBrand, selectedStatus, selectedclass]",{"range":"763","text":"764"},{"range":"765","text":"732"},"Add dependencies array: [selectedclass]",{"range":"766","text":"767"},"Add dependencies array: [selectedMainFiles, selectedDetailFiles, selectedQrFiles]",{"range":"768","text":"769"},{"range":"770","text":"724"},"Add dependencies array: [selectedStatus]",{"range":"771","text":"772"},{"range":"773","text":"767"},{"range":"774","text":"769"},{"range":"775","text":"724"},{"range":"776","text":"736"},[1488,1490],"[isAdmin]",[2111,2111],", [brandName.length, class1.length, class2.length, class3.length, class4.length]",[1671,1673],[2837,2837],", [selectedFiles]",[1754,1756],[2005,2007],"[location.state]",[2048,2050],[3119,3121],[3455,3457],"[currentPage, search]",[2560,2562],[4230,4230],", [id.length, pw.length, checkId]",[4414,4414],", [selected]",[2393,2395],[2589,2591],[3218,3218],[3379,3379],[1970,1972],[2435,2437],[3018,3018],[3958,3960],[4322,4324],"[currentPage, firstDate, secondDate]",[4604,4606],"[firstDate, secondDate]",[2583,2585],[2917,2919],[1017,1019],[2263,2265],[2959,2959],", [status]",[3009,3011],[3347,3349],[3893,3895],[4682,4682],", [selectedBrand, selectedStatus, selectedclass]",[5310,5312],[7749,7749],", [selectedclass]",[8414,8414],", [selectedMainFiles, selectedDetailFiles, selectedQrFiles]",[3878,3880],[5332,5332],", [selectedStatus]",[7263,7263],[7928,7928],[3325,3327],[3662,3664]]