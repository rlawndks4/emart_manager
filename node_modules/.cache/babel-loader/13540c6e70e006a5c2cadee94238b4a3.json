{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SEC\\\\Desktop\\\\emart_manage_juan\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { createContext, useMemo, useState, useEffect } from \"react\";\nimport { Switch, BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\"; // Import Routes all\n\nimport { userRoutes, authRoutes } from \"./routes/allRoutes\"; // Import all middleware\n\nimport Authmiddleware from \"./routes/middleware/Authmiddleware\"; // layouts Format\n\nimport VerticalLayout from \"./components/VerticalLayout/\";\nimport HorizontalLayout from \"./components/HorizontalLayout/\";\nimport NonAuthLayout from \"./components/NonAuthLayout\"; // Import scss\n\nimport \"./assets/scss/theme.scss\";\nimport axios from 'axios'; // Activating fake backend\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LoginContext = /*#__PURE__*/createContext({\n  ID: '',\n  setID: () => {},\n  PW: '',\n  setPW: () => {},\n  success: false,\n  setSuccess: () => {},\n  signUpFlag: false,\n  setSignUpFlag: () => {}\n});\n\nconst App = props => {\n  _s();\n\n  const [ID, setID] = useState('');\n  const [PW, setPW] = useState('');\n  const [success, setSuccess] = useState(false);\n  const [signUpFlag, setSignUpFlag] = useState(false);\n  const loginContextValue = useMemo(() => ({\n    ID,\n    setID,\n    PW,\n    setPW,\n    success,\n    setSuccess,\n    signUpFlag,\n    setSignUpFlag\n  }), [ID, setID, PW, setPW, success, setSuccess, signUpFlag, setSignUpFlag]);\n\n  function getLayout() {\n    let layoutCls = VerticalLayout;\n\n    switch (props.layout.layoutType) {\n      case \"horizontal\":\n        layoutCls = VerticalLayout;\n        break;\n\n      default:\n        layoutCls = VerticalLayout;\n        break;\n    }\n\n    return layoutCls;\n  }\n\n  const Layout = getLayout();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(LoginContext.Provider, {\n      value: loginContextValue,\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [authRoutes.map((route, idx) => /*#__PURE__*/_jsxDEV(Authmiddleware, {\n            path: route.path,\n            layout: NonAuthLayout,\n            component: route.component,\n            isAuthProtected: false\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)), userRoutes.map((route, idx) => /*#__PURE__*/_jsxDEV(Authmiddleware, {\n            path: route.path,\n            layout: Layout,\n            component: route.component,\n            isAuthProtected: true,\n            exact: true\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"wV3hvgmcgSDoXT9+o0B+sRTvuyM=\");\n\n_c = App;\nApp.propTypes = {\n  layout: PropTypes.any\n};\n\nconst mapStateToProps = state => {\n  return {\n    layout: state.Layout\n  };\n};\n\nexport default connect(mapStateToProps, null)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/SEC/Desktop/emart_manage_juan/src/App.js"],"names":["PropTypes","React","createContext","useMemo","useState","useEffect","Switch","BrowserRouter","Router","Route","connect","userRoutes","authRoutes","Authmiddleware","VerticalLayout","HorizontalLayout","NonAuthLayout","axios","LoginContext","ID","setID","PW","setPW","success","setSuccess","signUpFlag","setSignUpFlag","App","props","loginContextValue","getLayout","layoutCls","layout","layoutType","Layout","map","route","idx","path","component","propTypes","any","mapStateToProps","state"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { createContext, useMemo, useState, useEffect } from \"react\"\n\nimport { Switch, BrowserRouter as Router, Route } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\n\n// Import Routes all\nimport { userRoutes, authRoutes } from \"./routes/allRoutes\"\n\n// Import all middleware\nimport Authmiddleware from \"./routes/middleware/Authmiddleware\"\n\n// layouts Format\nimport VerticalLayout from \"./components/VerticalLayout/\"\nimport HorizontalLayout from \"./components/HorizontalLayout/\"\nimport NonAuthLayout from \"./components/NonAuthLayout\"\n// Import scss\nimport \"./assets/scss/theme.scss\"\n\n\nimport axios from 'axios'\n\n// Activating fake backend\nexport const LoginContext = createContext({\n  ID: '',\n  setID: () => {},\n  PW: '',\n  setPW: () => {},\n  success: false,\n  setSuccess: () => {},\n  signUpFlag: false,\n  setSignUpFlag: () => {}\n})\n\nconst App = (props) => {\n\n  const [ID, setID] = useState('')\n    const [PW, setPW] = useState('')\n    const [success, setSuccess] = useState(false)\n    const [signUpFlag, setSignUpFlag] = useState(false)\n  const loginContextValue = useMemo(() => ({ \n    ID, setID, PW, setPW, success, setSuccess, signUpFlag, setSignUpFlag\n}), [ID, setID, PW, setPW, success, setSuccess, signUpFlag, setSignUpFlag])\n\n  \n\n  function getLayout() {\n    let layoutCls = VerticalLayout\n\n    switch (props.layout.layoutType) {\n      case \"horizontal\":\n        layoutCls = VerticalLayout\n        break\n      default:\n        layoutCls = VerticalLayout\n        break\n    }\n    return layoutCls\n  }\n\n  const Layout = getLayout()\n\n \n  \n  return (\n    <React.Fragment>\n      <LoginContext.Provider value={loginContextValue}>\n      <Router>\n        \n        <Switch>\n        {authRoutes.map((route, idx) => (\n            <Authmiddleware\n              path={route.path}\n              layout={NonAuthLayout}\n              component={route.component}\n              key={idx}\n              isAuthProtected={false}\n            />\n          ))}\n          \n          {userRoutes.map((route, idx) => (\n            <Authmiddleware\n              path={route.path}\n              layout={Layout}\n              component={route.component}\n              key={idx}\n              isAuthProtected={true}\n              exact\n            />\n          ))}\n        </Switch>\n\n      </Router>\n      </LoginContext.Provider>\n    </React.Fragment>\n  )\n}\n\nApp.propTypes = {\n  layout: PropTypes.any\n}\n\nconst mapStateToProps = state => {\n  return {\n    layout: state.Layout,\n  }\n}\n\nexport default connect(mapStateToProps, null)(App)"]},"metadata":{},"sourceType":"module"}