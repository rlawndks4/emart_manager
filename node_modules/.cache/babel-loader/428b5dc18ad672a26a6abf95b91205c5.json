{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SEC\\\\Desktop\\\\emart_manage_juan\\\\src\\\\pages\\\\Invoices\\\\invoices-list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Col, Container, Row, Button } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { isEmpty } from \"lodash\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory, { PaginationProvider } from \"react-bootstrap-table2-paginator\"; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\"; //Import Card invoice\n\nimport { getInvoices } from \"../../store/actions\";\nimport InvoiceColumns from \"./InvoiceColumns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InvoicesList = props => {\n  _s();\n\n  const [modal, setModal] = useState(false);\n  const {\n    invoices,\n    onGetInvoices\n  } = props;\n  const [invoiceList, setInvoiceList] = useState([]);\n  const pageOptions = {\n    sizePerPage: 10,\n    totalSize: 50,\n    // replace later with size(Invoice),\n    custom: true\n  };\n  useEffect(() => {\n    onGetInvoices();\n    setInvoiceList(invoices);\n  }, [onGetInvoices, invoices]);\n  useEffect(() => {\n    if (!isEmpty(invoices)) setInvoiceList(invoices);\n  }, [invoices]); // eslint-disable-next-line no-unused-vars\n\n  const handleTableChange = (type, {\n    page,\n    searchText\n  }) => {\n    setInvoiceList(invoices.filter(invoice => Object.keys(invoice).some(key => typeof invoice[key] === \"string\" && invoice[key].toLowerCase().includes(searchText.toLowerCase()))));\n  };\n\n  const toggleModal = () => {\n    setModal(!modal);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n          title: \"Invoices\",\n          breadcrumbItem: \"Invoice List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), !isEmpty(invoiceList) && /*#__PURE__*/_jsxDEV(PaginationProvider, {\n          pagination: paginationFactory(pageOptions),\n          children: ({\n            paginationProps,\n            paginationTableProps\n          }) => /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n            keyField: \"id\",\n            data: invoiceList || [],\n            columns: InvoiceColumns(toggleModal),\n            bootstrap4: true,\n            search: true,\n            children: toolkitProps => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  md: \"4\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"button\",\n                      color: \"success\",\n                      className: \"btn btn-success waves-effect waves-light mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"mdi mdi-plus me-1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 86,\n                        columnNumber: 31\n                      }, this), \"Add Invoice\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  md: 8,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"float-end\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \" mb-3\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"input-daterange input-group\",\n                        id: \"datepicker6\",\n                        \"data-date-format\": \"dd M, yyyy\",\n                        \"data-date-autoclose\": \"true\",\n                        \"data-provide\": \"datepicker\",\n                        \"data-date-container\": \"#datepicker6\",\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          className: \"form-control text-start\",\n                          placeholder: \"From\",\n                          name: \"From\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 95,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          className: \"form-control text-start\",\n                          placeholder: \"To\",\n                          name: \"To\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 96,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          type: \"button\",\n                          className: \"btn btn-primary\",\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"mdi mdi-filter-variant\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 98,\n                            columnNumber: 83\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 98,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 94,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"table-responsive\",\n                    children: /*#__PURE__*/_jsxDEV(BootstrapTable, {\n                      responsive: true,\n                      remote: true,\n                      bordered: false,\n                      striped: false,\n                      classes: \"table table-centered datatable dt-responsive nowrap table-card-list\",\n                      headerWrapperClasses: \"bg-transparent\",\n                      ...toolkitProps.baseProps,\n                      onTableChange: handleTableChange,\n                      ...paginationTableProps\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InvoicesList, \"h/xYQq8w5LptpYqvS2VIOmQHT1I=\");\n\n_c = InvoicesList;\nInvoicesList.propTypes = {\n  invoices: PropTypes.array,\n  onGetInvoices: PropTypes.func\n};\n\nconst mapStateToProps = ({\n  invoices\n}) => ({\n  invoices: invoices.invoices\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onGetInvoices: () => dispatch(getInvoices())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(InvoicesList));\n\nvar _c;\n\n$RefreshReg$(_c, \"InvoicesList\");","map":{"version":3,"sources":["C:/Users/SEC/Desktop/emart_manage_juan/src/pages/Invoices/invoices-list.js"],"names":["React","useEffect","useState","Col","Container","Row","Button","PropTypes","connect","withRouter","isEmpty","ToolkitProvider","BootstrapTable","paginationFactory","PaginationProvider","Breadcrumbs","getInvoices","InvoiceColumns","InvoicesList","props","modal","setModal","invoices","onGetInvoices","invoiceList","setInvoiceList","pageOptions","sizePerPage","totalSize","custom","handleTableChange","type","page","searchText","filter","invoice","Object","keys","some","key","toLowerCase","includes","toggleModal","paginationProps","paginationTableProps","toolkitProps","baseProps","propTypes","array","func","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { Col, Container, Row , Button} from \"reactstrap\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { withRouter } from \"react-router-dom\"\nimport { isEmpty } from \"lodash\"\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\"\nimport BootstrapTable from \"react-bootstrap-table-next\"\nimport paginationFactory, {\n  PaginationProvider,\n} from \"react-bootstrap-table2-paginator\"\n\n//Import Breadcrumb\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\"\n\n//Import Card invoice\nimport { getInvoices } from \"../../store/actions\"\nimport InvoiceColumns from \"./InvoiceColumns\"\n\nconst InvoicesList = props => {\n  const [modal, setModal] = useState(false)\n  const { invoices, onGetInvoices } = props\n  const [invoiceList, setInvoiceList] = useState([])\n  const pageOptions = {\n    sizePerPage: 10,\n    totalSize: 50, // replace later with size(Invoice),\n    custom: true,\n  }\n\n  useEffect(() => {\n    onGetInvoices()\n    setInvoiceList(invoices)\n  }, [onGetInvoices, invoices])\n\n  useEffect(() => {\n    if (!isEmpty(invoices)) setInvoiceList(invoices)\n  }, [invoices])\n\n  // eslint-disable-next-line no-unused-vars\n  const handleTableChange = (type, { page, searchText }) => {\n    setInvoiceList(\n      invoices.filter(invoice =>\n        Object.keys(invoice).some(\n          key =>\n            typeof invoice[key] === \"string\" &&\n            invoice[key].toLowerCase().includes(searchText.toLowerCase())\n        )\n      )\n    )\n  }\n\n  const toggleModal = () => {\n    setModal(!modal)\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"page-content\">\n        <Container fluid>\n          {/* Render Breadcrumbs */}\n          <Breadcrumbs title=\"Invoices\" breadcrumbItem=\"Invoice List\" />\n\n          {!isEmpty(invoiceList) && (\n\n            <PaginationProvider\n              pagination={paginationFactory(pageOptions)}\n            >\n              {({ paginationProps, paginationTableProps }) => (\n                <ToolkitProvider\n                  keyField=\"id\"\n                  data={invoiceList || []}\n                  columns={InvoiceColumns(toggleModal)}\n                  bootstrap4\n                  search\n                >\n                  {toolkitProps => (\n                    <React.Fragment>\n                      <Row>\n                        <Col md=\"4\">\n                          <div>\n                            <Button\n                              type=\"button\"\n                              color=\"success\"\n                              className=\"btn btn-success waves-effect waves-light mb-3\"\n                            >\n                              <i className=\"mdi mdi-plus me-1\"></i>\n                                      Add Invoice\n                                    </Button>\n                          </div>\n                        </Col>\n                        <Col md={8}>\n                          <div className=\"float-end\">\n                            <div className=\" mb-3\">\n                              <div className=\"input-daterange input-group\" id=\"datepicker6\" data-date-format=\"dd M, yyyy\" data-date-autoclose=\"true\" data-provide=\"datepicker\" data-date-container='#datepicker6'>\n                                <input type=\"text\" className=\"form-control text-start\" placeholder=\"From\" name=\"From\" />\n                                <input type=\"text\" className=\"form-control text-start\" placeholder=\"To\" name=\"To\" />\n\n                                <button type=\"button\" className=\"btn btn-primary\"><i className=\"mdi mdi-filter-variant\"></i></button>\n                              </div>\n                            </div>\n\n                          </div>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col sm={12}>\n                          <div className=\"table-responsive\">\n                            <BootstrapTable\n                              responsive\n                              remote\n                              bordered={false}\n                              striped={false}\n                              classes={\n                                \"table table-centered datatable dt-responsive nowrap table-card-list\"\n                              }\n                              headerWrapperClasses={\"bg-transparent\"}\n                              {...toolkitProps.baseProps}\n                              onTableChange={handleTableChange}\n                              {...paginationTableProps}\n                            />\n                          </div>\n                        </Col>\n                      </Row>\n                    </React.Fragment>\n                  )}\n                </ToolkitProvider>\n              )}\n            </PaginationProvider>\n\n          )}\n\n        </Container>\n      </div>\n    </React.Fragment>\n  )\n}\n\nInvoicesList.propTypes = {\n  invoices: PropTypes.array,\n  onGetInvoices: PropTypes.func,\n}\n\nconst mapStateToProps = ({ invoices }) => ({\n  invoices: invoices.invoices,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onGetInvoices: () => dispatch(getInvoices()),\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(InvoicesList))\n"]},"metadata":{},"sourceType":"module"}