{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SEC\\\\Desktop\\\\emart_manage_juan\\\\src\\\\pages\\\\Forms\\\\FormValidations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Row, Col, Card, CardBody, FormGroup, Button, CardTitle, Label, Input, Container } from \"reactstrap\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormValidations = () => {\n  _s();\n\n  const [fnm, setfnm] = useState(false);\n  const [lnm, setlnm] = useState(false);\n  const [unm, setunm] = useState(false);\n  const [city, setcity] = useState(false);\n  const [stateV, setstateV] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    var fnm = document.getElementById(\"validationTooltip01\").value;\n    var lnm = document.getElementById(\"validationTooltip02\").value;\n    var unm = document.getElementById(\"validationTooltipUsername\").value;\n    var city = document.getElementById(\"validationTooltip03\").value;\n    var stateV = document.getElementById(\"validationTooltip04\").value;\n\n    if (fnm === \"\") {\n      setfnm(false);\n    } else {\n      setfnm(true);\n    }\n\n    if (lnm === \"\") {\n      setlnm(false);\n    } else {\n      setlnm(true);\n    }\n\n    if (unm === \"\") {\n      setunm(false);\n    } else {\n      setunm(true);\n    }\n\n    if (city === \"\") {\n      setcity(false);\n    } else {\n      setcity(true);\n    }\n\n    if (stateV === \"\") {\n      setstateV(false);\n    } else {\n      setstateV(true);\n    }\n\n    var d1 = document.getElementsByName(\"validate\");\n    document.getElementById(\"tooltipForm\").classList.add(\"was-validated\");\n\n    for (var i = 0; i < d1.length; i++) {\n      d1[i].style.display = \"block\";\n    }\n  } //for change tooltip display propery\n\n\n  function changeHandeler(event, eleId) {\n    if (event.target.value !== \"\") document.getElementById(eleId).style.display = \"none\";else document.getElementById(eleId).style.display = \"block\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n          title: \"Forms\",\n          breadcrumbItem: \"Form Validation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xl: \"6\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"card-title\",\n                  children: \"React Validation - Normal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-title-desc\",\n                  children: \"Provide valuable, actionable feedback to your users with HTML5 form validation\\u2013available in all our supported browsers.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n                  className: \"needs-validation\",\n                  children: [/*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      md: \"6\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-3\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"validationCustom01\",\n                          children: \"First name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 101,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                          name: \"firstname\",\n                          placeholder: \"First name\",\n                          type: \"text\",\n                          errorMessage: \"Enter First Name\",\n                          className: \"form-control\",\n                          validate: {\n                            required: {\n                              value: true\n                            }\n                          },\n                          id: \"validationCustom01\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 102,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 100,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: \"6\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-3\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"validationCustom02\",\n                          children: \"Last name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 115,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                          name: \"lastname\",\n                          placeholder: \"Last name\",\n                          type: \"text\",\n                          errorMessage: \"Enter Last name\",\n                          className: \"form-control\",\n                          validate: {\n                            required: {\n                              value: true\n                            }\n                          },\n                          id: \"validationCustom02\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 116,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 114,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      md: \"4\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-3\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"validationCustom03\",\n                          children: \"City\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 131,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                          name: \"city\",\n                          placeholder: \"City\",\n                          type: \"text\",\n                          errorMessage: \" Please provide a valid city.\",\n                          className: \"form-control\",\n                          validate: {\n                            required: {\n                              value: true\n                            }\n                          },\n                          id: \"validationCustom03\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 132,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 130,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: \"4\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-3\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"validationCustom04\",\n                          children: \"State\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 145,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                          name: \"state\",\n                          placeholder: \"State\",\n                          type: \"text\",\n                          errorMessage: \"Please provide a valid state.\",\n                          className: \"form-control\",\n                          validate: {\n                            required: {\n                              value: true\n                            }\n                          },\n                          id: \"validationCustom04\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 146,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 144,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: \"4\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-3\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"validationCustom05\",\n                          children: \"Zip\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 159,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                          name: \"zip\",\n                          placeholder: \"Zip Code\",\n                          type: \"text\",\n                          errorMessage: \" Please provide a valid zip.\",\n                          className: \"form-control\",\n                          validate: {\n                            required: {\n                              value: true\n                            }\n                          },\n                          id: \"validationCustom05\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 160,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 158,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-check mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"form-check-input\",\n                      type: \"checkbox\",\n                      value: \"\",\n                      id: \"invalidCheck\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-check-label\",\n                      htmlFor: \"invalidCheck\",\n                      children: \"Agree to terms and conditions\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"invalid-feedback\",\n                      children: \"You must agree before submitting.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"primary\",\n                    type: \"submit\",\n                    children: \"Submit form\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xl: \"6\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"card-title\",\n                  children: \"Bootstrap Validation (Tooltips)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-title-desc\",\n                  children: [\"If your form layout allows it, you can swap the\", /*#__PURE__*/_jsxDEV(\"code\", {\n                    children: [\".\", \"{valid | invalid-}\", \"feedback\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 21\n                  }, this), \" classes for\", /*#__PURE__*/_jsxDEV(\"code\", {\n                    children: [\".\", \"{valid | invalid-}\", \"-tooltip\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 21\n                  }, this), \" classes to display validation feedback in a styled tooltip.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                  className: \"needs-validation\",\n                  method: \"post\",\n                  id: \"tooltipForm\",\n                  onSubmit: e => {\n                    handleSubmit(e);\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      md: \"4\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-3 position-relative\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"validationTooltip01\",\n                          children: \"First name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 213,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          type: \"text\",\n                          className: \"form-control\",\n                          id: \"validationTooltip01\",\n                          placeholder: \"First name\",\n                          onChange: event => changeHandeler(event, \"validate1\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 216,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: fnm === true ? \"valid-tooltip\" : \"invalid-tooltip\",\n                          name: \"validate\",\n                          id: \"validate1\",\n                          children: fnm === true ? \"Looks good!\" : \"Please Enter Valid First Name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 226,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 212,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 211,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: \"4\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-3 position-relative\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"validationTooltip02\",\n                          children: \"Last name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 241,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          type: \"text\",\n                          className: \"form-control\",\n                          id: \"validationTooltip02\",\n                          placeholder: \"Last name\",\n                          onChange: event => changeHandeler(event, \"validate2\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 242,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: lnm === true ? \"valid-tooltip\" : \"invalid-tooltip\",\n                          name: \"validate\",\n                          id: \"validate2\",\n                          children: lnm === true ? \"Looks good!\" : \"Please Enter Valid Last Name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 251,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 240,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 239,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: \"4\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-3 position-relative\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"validationTooltipUsername\",\n                          children: \"Username\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 266,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"input-group\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"input-group-prepend\",\n                            children: /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"input-group-text\",\n                              id: \"validationTooltipUsernamePrepend\",\n                              children: \"@\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 271,\n                              columnNumber: 31\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 270,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(Input, {\n                            type: \"text\",\n                            className: \"form-control\",\n                            id: \"validationTooltipUsername\",\n                            placeholder: \"Username\",\n                            onChange: event => changeHandeler(event, \"validate3\")\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 278,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: unm === true ? \"valid-tooltip\" : \"invalid-tooltip\",\n                            name: \"validate\",\n                            id: \"validate3\",\n                            children: unm === true ? \"Looks good!\" : \"Please choose a unique and valid username.\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 287,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 269,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 265,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      md: \"6\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-3 position-relative\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"validationTooltip03\",\n                          children: \"City\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 307,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          type: \"text\",\n                          className: \"form-control\",\n                          id: \"validationTooltip03\",\n                          placeholder: \"City\",\n                          onChange: event => changeHandeler(event, \"validate4\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 308,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: city === true ? \"valid-tooltip\" : \"invalid-tooltip\",\n                          name: \"validate\",\n                          id: \"validate4\",\n                          children: city === true ? \"Looks good!\" : \"Please choose a unique and valid username.Please provide a valid city.\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 317,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 306,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 305,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: \"6\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-3 position-relative\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"validationTooltip04\",\n                          children: \"State\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 334,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          type: \"text\",\n                          className: \"form-control\",\n                          id: \"validationTooltip04\",\n                          placeholder: \"State\",\n                          onChange: event => changeHandeler(event, \"validate5\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 335,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: stateV === true ? \"valid-tooltip\" : \"invalid-tooltip\",\n                          name: \"validate\",\n                          id: \"validate5\",\n                          children: stateV === true ? \"Looks good!\" : \"Please provide a valid state.\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 344,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 333,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 332,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"primary\",\n                    type: \"submit\",\n                    children: \"Submit form\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            lg: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                  className: \"h4\",\n                  children: \"Validation type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-title-desc\",\n                  children: \"Parsley is a availity reactstrap validation. It helps you provide your users with feedback on their form submission before sending it to your server.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n                  children: [/*#__PURE__*/_jsxDEV(AvField, {\n                    className: \"mb-3\",\n                    name: \"username\",\n                    label: \"Required  \",\n                    placeholder: \"Type Something\",\n                    type: \"text\",\n                    errorMessage: \"Enter Name\",\n                    validate: {\n                      required: {\n                        value: true\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      children: \"Equal To\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 390,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                      name: \"password\",\n                      type: \"password\",\n                      placeholder: \"Password\",\n                      errorMessage: \"Enter password\",\n                      validate: {\n                        required: {\n                          value: true\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 391,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                      className: \"mt-2\",\n                      name: \"password1\",\n                      type: \"password\",\n                      placeholder: \"Re-type Password\",\n                      errorMessage: \"Enter Re-password\",\n                      validate: {\n                        required: {\n                          value: true\n                        },\n                        match: {\n                          value: \"password\"\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 398,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                    className: \"mb-3\",\n                    name: \"email\",\n                    label: \"E-Mail  \",\n                    placeholder: \"Enter Valid Email\",\n                    type: \"email\",\n                    errorMessage: \"Invalid Email\",\n                    validate: {\n                      required: {\n                        value: true\n                      },\n                      email: {\n                        value: true\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 410,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                    className: \"mb-3\",\n                    name: \"email\",\n                    label: \"URL  \",\n                    placeholder: \"Enter Valid url\",\n                    type: \"url\",\n                    errorMessage: \"Invalid url\",\n                    validate: {\n                      required: {\n                        value: true\n                      },\n                      url: {\n                        value: true\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                    className: \"mb-3\",\n                    name: \"digits\",\n                    label: \"Digits  \",\n                    placeholder: \"Enter Only Digits\",\n                    type: \"number\",\n                    errorMessage: \"Enter Only Digits\",\n                    validate: {\n                      required: {\n                        value: true\n                      },\n                      pattern: {\n                        value: \"^[0-9]+$\",\n                        errorMessage: \"Only Digits\"\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 434,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                    className: \"mb-3\",\n                    name: \"number\",\n                    label: \"Number  \",\n                    placeholder: \"Enter Only number\",\n                    type: \"number\",\n                    errorMessage: \"Enter Only Number\",\n                    validate: {\n                      required: {\n                        value: true\n                      },\n                      pattern: {\n                        value: \"^[0-9]+$\",\n                        errorMessage: \"Only Numbers\"\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 449,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                    className: \"mb-3\",\n                    name: \"alphanumeric\",\n                    label: \"Alphanumeric  \",\n                    placeholder: \"Enter alphanumeric value\",\n                    type: \"text\",\n                    errorMessage: \"Enter Alphanumeric\",\n                    validate: {\n                      required: {\n                        value: true\n                      },\n                      pattern: {\n                        value: \"^[0-9a-zA-Z]+$\",\n                        errorMessage: \"Only Alphanumeric\"\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 464,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                    className: \"mb-3\",\n                    type: \"textarea\",\n                    rows: \"5\",\n                    label: \"Textarea \",\n                    name: \"address\",\n                    id: \"address\",\n                    placeholder: \"Address\",\n                    errorMessage: \"This value is required.\",\n                    validate: {\n                      required: {\n                        value: true\n                      },\n                      pattern: {\n                        value: \"^[0-9a-zA-Z]+$\",\n                        errorMessage: \"Only Alphanumeric\"\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 479,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                    className: \"mb-0\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(Button, {\n                        type: \"submit\",\n                        color: \"primary\",\n                        className: \"waves-effect waves-light me-1\",\n                        children: \"Submit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 498,\n                        columnNumber: 25\n                      }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n                        type: \"reset\",\n                        color: \"secondary\",\n                        className: \"waves-effect\",\n                        children: \"Cancel\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 501,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 497,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            lg: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                  className: \"h4\",\n                  children: \"Range validation\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-title-desc\",\n                  children: \"Parsley is a availity reactstrap validation. It helps you provide your users with feedback on their form submission before sending it to your server.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n                  children: [/*#__PURE__*/_jsxDEV(AvField, {\n                    className: \"mb-3\",\n                    name: \"Min_Length\",\n                    label: \"Min Length  \",\n                    placeholder: \"Min 6 chars\",\n                    type: \"number\",\n                    errorMessage: \"Min 6 chars.\",\n                    validate: {\n                      required: {\n                        value: true\n                      },\n                      minLength: {\n                        value: 6,\n                        errorMessage: \"Min 6 chars.\"\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 522,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                    className: \"mb-3\",\n                    name: \"Max_Length\",\n                    label: \"Max Length  \",\n                    placeholder: \"Max 6 chars\",\n                    type: \"number\",\n                    errorMessage: \"Max 6 chars.\",\n                    validate: {\n                      required: {\n                        value: true\n                      },\n                      maxLength: {\n                        value: 6,\n                        errorMessage: \"Max 6 chars.\"\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 534,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                    className: \"mb-3\",\n                    name: \"Range_Value\",\n                    label: \"Range Length  \",\n                    placeholder: \"Text between 5 - 10 chars length\",\n                    type: \"number\",\n                    errorMessage: \"range between 5 to 10\",\n                    validate: {\n                      required: {\n                        value: true\n                      },\n                      minLength: {\n                        value: 5\n                      },\n                      maxLength: {\n                        value: 10\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 546,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                    className: \"mb-3\",\n                    name: \"Min_Value\",\n                    label: \"Min Value  \",\n                    placeholder: \"Min 6 Chars\",\n                    min: 6,\n                    type: \"number\",\n                    errorMessage: \"Min Value 6\",\n                    validate: {\n                      required: {\n                        value: true\n                      },\n                      min: {\n                        value: 6\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 559,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                    className: \"mb-3\",\n                    name: \"Min_Value\",\n                    label: \"Min Value  \",\n                    placeholder: \"Min 6 Chars\",\n                    min: 6,\n                    max: 100,\n                    type: \"number\",\n                    errorMessage: \"Min Value 6\",\n                    validate: {\n                      required: {\n                        value: true\n                      },\n                      min: {\n                        value: 6\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 572,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                    className: \"mb-3\",\n                    name: \"Range_Value\",\n                    label: \"Range Value  \",\n                    placeholder: \"Number between 6 - 100\",\n                    max: 6,\n                    type: \"number\",\n                    errorMessage: \"Number between 6 - 100\",\n                    validate: {\n                      required: {\n                        value: true\n                      },\n                      max: {\n                        value: 6\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 586,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                    className: \"mb-3\",\n                    name: \"Regular_Exp\",\n                    label: \"Regular Exp  \",\n                    placeholder: \"Hex. Color\",\n                    type: \"number\",\n                    errorMessage: \"Hex Value\",\n                    validate: {\n                      required: {\n                        value: true\n                      },\n                      pattern: {\n                        value: \"^[#0-9]+$\",\n                        errorMessage: \"Only Hex Value\"\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 599,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                    className: \"mb-0\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(Button, {\n                        type: \"submit\",\n                        color: \"primary\",\n                        className: \"waves-effect waves-light me-1\",\n                        children: \"Submit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 616,\n                        columnNumber: 25\n                      }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n                        type: \"reset\",\n                        color: \"secondary\",\n                        className: \"waves-effect\",\n                        children: \"Cancel\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 619,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 615,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 614,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormValidations, \"fpY+BgW3dPzGUWxPymsWLv1PfMA=\");\n\n_c = FormValidations;\nexport default FormValidations;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormValidations\");","map":{"version":3,"sources":["C:/Users/SEC/Desktop/emart_manage_juan/src/pages/Forms/FormValidations.js"],"names":["React","useState","Row","Col","Card","CardBody","FormGroup","Button","CardTitle","Label","Input","Container","AvForm","AvField","Breadcrumbs","FormValidations","fnm","setfnm","lnm","setlnm","unm","setunm","city","setcity","stateV","setstateV","handleSubmit","e","preventDefault","document","getElementById","value","d1","getElementsByName","classList","add","i","length","style","display","changeHandeler","event","eleId","target","required","match","email","url","pattern","errorMessage","minLength","maxLength","min","max"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\n\nimport {\n  Row,\n  Col,\n  Card,\n  CardBody,\n  FormGroup,\n  Button,\n  CardTitle,\n  Label,\n  Input,\n  Container,\n} from \"reactstrap\"\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"\n\n//Import Breadcrumb\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\"\n\nconst FormValidations = () => {\n  const [fnm, setfnm] = useState(false)\n  const [lnm, setlnm] = useState(false)\n  const [unm, setunm] = useState(false)\n  const [city, setcity] = useState(false)\n  const [stateV, setstateV] = useState(false)\n\n  function handleSubmit(e) {\n    e.preventDefault()\n\n    var fnm = document.getElementById(\"validationTooltip01\").value\n    var lnm = document.getElementById(\"validationTooltip02\").value\n    var unm = document.getElementById(\"validationTooltipUsername\").value\n    var city = document.getElementById(\"validationTooltip03\").value\n    var stateV = document.getElementById(\"validationTooltip04\").value\n\n    if (fnm === \"\") {\n      setfnm(false)\n    } else {\n      setfnm(true)\n    }\n\n    if (lnm === \"\") {\n      setlnm(false)\n    } else {\n      setlnm(true)\n    }\n\n    if (unm === \"\") {\n      setunm(false)\n    } else {\n      setunm(true)\n    }\n\n    if (city === \"\") {\n      setcity(false)\n    } else {\n      setcity(true)\n    }\n\n    if (stateV === \"\") {\n      setstateV(false)\n    } else {\n      setstateV(true)\n    }\n\n    var d1 = document.getElementsByName(\"validate\")\n\n    document.getElementById(\"tooltipForm\").classList.add(\"was-validated\")\n\n    for (var i = 0; i < d1.length; i++) {\n      d1[i].style.display = \"block\"\n    }\n  }\n\n  //for change tooltip display propery\n  function changeHandeler(event, eleId) {\n    if (event.target.value !== \"\")\n      document.getElementById(eleId).style.display = \"none\"\n    else document.getElementById(eleId).style.display = \"block\"\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"page-content\">\n        <Container fluid={true}>\n          <Breadcrumbs title=\"Forms\" breadcrumbItem=\"Form Validation\" />\n          <Row>\n            <Col xl=\"6\">\n              <Card>\n                <CardBody>\n                  <h4 className=\"card-title\">React Validation - Normal</h4>\n                  <p className=\"card-title-desc\">\n                    Provide valuable, actionable feedback to your users with\n                    HTML5 form validation–available in all our supported\n                    browsers.\n                  </p>\n                  <AvForm className=\"needs-validation\">\n                    <Row>\n                      <Col md=\"6\">\n                        <div className=\"mb-3\">\n                          <Label htmlFor=\"validationCustom01\">First name</Label>\n                          <AvField\n                            name=\"firstname\"\n                            placeholder=\"First name\"\n                            type=\"text\"\n                            errorMessage=\"Enter First Name\"\n                            className=\"form-control\"\n                            validate={{ required: { value: true } }}\n                            id=\"validationCustom01\"\n                          />\n                        </div>\n                      </Col>\n                      <Col md=\"6\">\n                        <div className=\"mb-3\">\n                          <Label htmlFor=\"validationCustom02\">Last name</Label>\n                          <AvField\n                            name=\"lastname\"\n                            placeholder=\"Last name\"\n                            type=\"text\"\n                            errorMessage=\"Enter Last name\"\n                            className=\"form-control\"\n                            validate={{ required: { value: true } }}\n                            id=\"validationCustom02\"\n                          />\n                        </div>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col md=\"4\">\n                        <div className=\"mb-3\">\n                          <Label htmlFor=\"validationCustom03\">City</Label>\n                          <AvField\n                            name=\"city\"\n                            placeholder=\"City\"\n                            type=\"text\"\n                            errorMessage=\" Please provide a valid city.\"\n                            className=\"form-control\"\n                            validate={{ required: { value: true } }}\n                            id=\"validationCustom03\"\n                          />\n                        </div>\n                      </Col>\n                      <Col md=\"4\">\n                        <div className=\"mb-3\">\n                          <Label htmlFor=\"validationCustom04\">State</Label>\n                          <AvField\n                            name=\"state\"\n                            placeholder=\"State\"\n                            type=\"text\"\n                            errorMessage=\"Please provide a valid state.\"\n                            className=\"form-control\"\n                            validate={{ required: { value: true } }}\n                            id=\"validationCustom04\"\n                          />\n                        </div>\n                      </Col>\n                      <Col md=\"4\">\n                        <div className=\"mb-3\">\n                          <Label htmlFor=\"validationCustom05\">Zip</Label>\n                          <AvField\n                            name=\"zip\"\n                            placeholder=\"Zip Code\"\n                            type=\"text\"\n                            errorMessage=\" Please provide a valid zip.\"\n                            className=\"form-control\"\n                            validate={{ required: { value: true } }}\n                            id=\"validationCustom05\"\n                          />\n                        </div>\n                      </Col>\n                    </Row>\n                    <div className=\"form-check mb-3\">\n                      <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"invalidCheck\"\n                        required />\n                      <label className=\"form-check-label\" htmlFor=\"invalidCheck\">\n                        Agree to terms and conditions\n                                        </label>\n                      <div className=\"invalid-feedback\">\n                        You must agree before submitting.\n                                        </div>\n                    </div>\n                    <Button color=\"primary\" type=\"submit\">\n                      Submit form\n                    </Button>\n                  </AvForm>\n                </CardBody>\n              </Card>\n            </Col>\n\n            <Col xl=\"6\">\n              <Card>\n                <CardBody>\n                  <h4 className=\"card-title\">\n                    Bootstrap Validation (Tooltips)\n                  </h4>\n                  <p className=\"card-title-desc\">\n                    If your form layout allows it, you can swap the\n                    <code>.{\"{valid | invalid-}\"}feedback</code> classes for\n                    <code>.{\"{valid | invalid-}\"}-tooltip</code> classes to display validation feedback in a\n                    styled tooltip.\n                  </p>\n                  <form\n                    className=\"needs-validation\"\n                    method=\"post\"\n                    id=\"tooltipForm\"\n                    onSubmit={e => {\n                      handleSubmit(e)\n                    }}\n                  >\n                    <Row>\n                      <Col md=\"4\">\n                        <div className=\"mb-3 position-relative\">\n                          <Label htmlFor=\"validationTooltip01\">\n                            First name\n                          </Label>\n                          <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"validationTooltip01\"\n                            placeholder=\"First name\"\n                            onChange={event =>\n                              changeHandeler(event, \"validate1\")\n                            }\n                          />\n\n                          <div\n                            className={\n                              fnm === true ? \"valid-tooltip\" : \"invalid-tooltip\"\n                            }\n                            name=\"validate\"\n                            id=\"validate1\"\n                          >\n                            {fnm === true\n                              ? \"Looks good!\"\n                              : \"Please Enter Valid First Name\"}\n                          </div>\n                        </div>\n                      </Col>\n                      <Col md=\"4\">\n                        <div className=\"mb-3 position-relative\">\n                          <Label htmlFor=\"validationTooltip02\">Last name</Label>\n                          <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"validationTooltip02\"\n                            placeholder=\"Last name\"\n                            onChange={event =>\n                              changeHandeler(event, \"validate2\")\n                            }\n                          />\n                          <div\n                            className={\n                              lnm === true ? \"valid-tooltip\" : \"invalid-tooltip\"\n                            }\n                            name=\"validate\"\n                            id=\"validate2\"\n                          >\n                            {lnm === true\n                              ? \"Looks good!\"\n                              : \"Please Enter Valid Last Name\"}\n                          </div>\n                        </div>\n                      </Col>\n                      <Col md=\"4\">\n                        <div className=\"mb-3 position-relative\">\n                          <Label htmlFor=\"validationTooltipUsername\">\n                            Username\n                          </Label>\n                          <div className=\"input-group\">\n                            <div className=\"input-group-prepend\">\n                              <span\n                                className=\"input-group-text\"\n                                id=\"validationTooltipUsernamePrepend\"\n                              >\n                                @\n                              </span>\n                            </div>\n                            <Input\n                              type=\"text\"\n                              className=\"form-control\"\n                              id=\"validationTooltipUsername\"\n                              placeholder=\"Username\"\n                              onChange={event =>\n                                changeHandeler(event, \"validate3\")\n                              }\n                            />\n                            <div\n                              className={\n                                unm === true\n                                  ? \"valid-tooltip\"\n                                  : \"invalid-tooltip\"\n                              }\n                              name=\"validate\"\n                              id=\"validate3\"\n                            >\n                              {unm === true\n                                ? \"Looks good!\"\n                                : \"Please choose a unique and valid username.\"}\n                            </div>\n                          </div>\n                        </div>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col md=\"6\">\n                        <div className=\"mb-3 position-relative\">\n                          <Label htmlFor=\"validationTooltip03\">City</Label>\n                          <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"validationTooltip03\"\n                            placeholder=\"City\"\n                            onChange={event =>\n                              changeHandeler(event, \"validate4\")\n                            }\n                          />\n                          <div\n                            className={\n                              city === true\n                                ? \"valid-tooltip\"\n                                : \"invalid-tooltip\"\n                            }\n                            name=\"validate\"\n                            id=\"validate4\"\n                          >\n                            {city === true\n                              ? \"Looks good!\"\n                              : \"Please choose a unique and valid username.Please provide a valid city.\"}\n                          </div>\n                        </div>\n                      </Col>\n                      <Col md=\"6\">\n                        <div className=\"mb-3 position-relative\">\n                          <Label htmlFor=\"validationTooltip04\">State</Label>\n                          <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"validationTooltip04\"\n                            placeholder=\"State\"\n                            onChange={event =>\n                              changeHandeler(event, \"validate5\")\n                            }\n                          />\n                          <div\n                            className={\n                              stateV === true\n                                ? \"valid-tooltip\"\n                                : \"invalid-tooltip\"\n                            }\n                            name=\"validate\"\n                            id=\"validate5\"\n                          >\n                            {stateV === true\n                              ? \"Looks good!\"\n                              : \"Please provide a valid state.\"}\n                          </div>\n                        </div>\n                      </Col>\n                    </Row>\n                    <Button color=\"primary\" type=\"submit\">\n                      Submit form\n                    </Button>\n                  </form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col lg={6}>\n              <Card>\n                <CardBody>\n                  <CardTitle className=\"h4\">Validation type</CardTitle>\n                  <p className=\"card-title-desc\">\n                    Parsley is a availity reactstrap validation. It helps you\n                    provide your users with feedback on their form submission\n                    before sending it to your server.\n                  </p>\n\n                  <AvForm>\n                    <AvField\n                      className=\"mb-3\"\n                      name=\"username\"\n                      label=\"Required  \"\n                      placeholder=\"Type Something\"\n                      type=\"text\"\n                      errorMessage=\"Enter Name\"\n                      validate={{ required: { value: true } }}\n                    />\n                    <div className=\"mb-3\">\n                      <Label>Equal To</Label>\n                      <AvField\n                        name=\"password\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        errorMessage=\"Enter password\"\n                        validate={{ required: { value: true } }}\n                      />\n                      <AvField\n                        className=\"mt-2\"\n                        name=\"password1\"\n                        type=\"password\"\n                        placeholder=\"Re-type Password\"\n                        errorMessage=\"Enter Re-password\"\n                        validate={{\n                          required: { value: true },\n                          match: { value: \"password\" },\n                        }}\n                      />\n                    </div>\n                    <AvField\n                      className=\"mb-3\"\n                      name=\"email\"\n                      label=\"E-Mail  \"\n                      placeholder=\"Enter Valid Email\"\n                      type=\"email\"\n                      errorMessage=\"Invalid Email\"\n                      validate={{\n                        required: { value: true },\n                        email: { value: true },\n                      }}\n                    />\n                    <AvField\n                      className=\"mb-3\"\n                      name=\"email\"\n                      label=\"URL  \"\n                      placeholder=\"Enter Valid url\"\n                      type=\"url\"\n                      errorMessage=\"Invalid url\"\n                      validate={{\n                        required: { value: true },\n                        url: { value: true },\n                      }}\n                    />\n                    <AvField\n                      className=\"mb-3\"\n                      name=\"digits\"\n                      label=\"Digits  \"\n                      placeholder=\"Enter Only Digits\"\n                      type=\"number\"\n                      errorMessage=\"Enter Only Digits\"\n                      validate={{\n                        required: { value: true },\n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage: \"Only Digits\",\n                        },\n                      }}\n                    />\n                    <AvField\n                      className=\"mb-3\"\n                      name=\"number\"\n                      label=\"Number  \"\n                      placeholder=\"Enter Only number\"\n                      type=\"number\"\n                      errorMessage=\"Enter Only Number\"\n                      validate={{\n                        required: { value: true },\n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage: \"Only Numbers\",\n                        },\n                      }}\n                    />\n                    <AvField\n                      className=\"mb-3\"\n                      name=\"alphanumeric\"\n                      label=\"Alphanumeric  \"\n                      placeholder=\"Enter alphanumeric value\"\n                      type=\"text\"\n                      errorMessage=\"Enter Alphanumeric\"\n                      validate={{\n                        required: { value: true },\n                        pattern: {\n                          value: \"^[0-9a-zA-Z]+$\",\n                          errorMessage: \"Only Alphanumeric\",\n                        },\n                      }}\n                    />\n                    <AvField\n                      className=\"mb-3\"\n                      type=\"textarea\"\n                      rows=\"5\"\n                      label=\"Textarea \"\n                      name=\"address\"\n                      id=\"address\"\n                      placeholder=\"Address\"\n                      errorMessage=\"This value is required.\"\n                      validate={{\n                        required: { value: true },\n                        pattern: {\n                          value: \"^[0-9a-zA-Z]+$\",\n                          errorMessage: \"Only Alphanumeric\",\n                        },\n                      }}\n                    />\n                    <FormGroup className=\"mb-0\">\n                      <div>\n                        <Button type=\"submit\" color=\"primary\" className=\"waves-effect waves-light me-1\">\n                          Submit\n                        </Button>{\" \"}\n                        <Button type=\"reset\" color=\"secondary\" className=\"waves-effect\">\n                          Cancel\n                        </Button>\n                      </div>\n                    </FormGroup>\n                  </AvForm>\n                </CardBody>\n              </Card>\n            </Col>\n\n            <Col lg={6}>\n              <Card>\n                <CardBody>\n                  <CardTitle className=\"h4\">Range validation</CardTitle>\n                  <p className=\"card-title-desc\">\n                    Parsley is a availity reactstrap validation. It helps you\n                    provide your users with feedback on their form submission\n                    before sending it to your server.\n                  </p>\n\n                  <AvForm>\n                    <AvField\n                      className=\"mb-3\"\n                      name=\"Min_Length\"\n                      label=\"Min Length  \"\n                      placeholder=\"Min 6 chars\"\n                      type=\"number\"\n                      errorMessage=\"Min 6 chars.\"\n                      validate={{\n                        required: { value: true },\n                        minLength: { value: 6, errorMessage: \"Min 6 chars.\" },\n                      }}\n                    />\n                    <AvField\n                      className=\"mb-3\"\n                      name=\"Max_Length\"\n                      label=\"Max Length  \"\n                      placeholder=\"Max 6 chars\"\n                      type=\"number\"\n                      errorMessage=\"Max 6 chars.\"\n                      validate={{\n                        required: { value: true },\n                        maxLength: { value: 6, errorMessage: \"Max 6 chars.\" },\n                      }}\n                    />\n                    <AvField\n                      className=\"mb-3\"\n                      name=\"Range_Value\"\n                      label=\"Range Length  \"\n                      placeholder=\"Text between 5 - 10 chars length\"\n                      type=\"number\"\n                      errorMessage=\"range between 5 to 10\"\n                      validate={{\n                        required: { value: true },\n                        minLength: { value: 5 },\n                        maxLength: { value: 10 },\n                      }}\n                    />\n                    <AvField\n                      className=\"mb-3\"\n                      name=\"Min_Value\"\n                      label=\"Min Value  \"\n                      placeholder=\"Min 6 Chars\"\n                      min={6}\n                      type=\"number\"\n                      errorMessage=\"Min Value 6\"\n                      validate={{\n                        required: { value: true },\n                        min: { value: 6 },\n                      }}\n                    />\n                    <AvField\n                      className=\"mb-3\"\n                      name=\"Min_Value\"\n                      label=\"Min Value  \"\n                      placeholder=\"Min 6 Chars\"\n                      min={6}\n                      max={100}\n                      type=\"number\"\n                      errorMessage=\"Min Value 6\"\n                      validate={{\n                        required: { value: true },\n                        min: { value: 6 },\n                      }}\n                    />\n                    <AvField\n                      className=\"mb-3\"\n                      name=\"Range_Value\"\n                      label=\"Range Value  \"\n                      placeholder=\"Number between 6 - 100\"\n                      max={6}\n                      type=\"number\"\n                      errorMessage=\"Number between 6 - 100\"\n                      validate={{\n                        required: { value: true },\n                        max: { value: 6 },\n                      }}\n                    />\n                    <AvField\n                      className=\"mb-3\"\n                      name=\"Regular_Exp\"\n                      label=\"Regular Exp  \"\n                      placeholder=\"Hex. Color\"\n                      type=\"number\"\n                      errorMessage=\"Hex Value\"\n                      validate={{\n                        required: { value: true },\n                        pattern: {\n                          value: \"^[#0-9]+$\",\n                          errorMessage: \"Only Hex Value\",\n                        },\n                      }}\n                    />\n                    <FormGroup className=\"mb-0\">\n                      <div>\n                        <Button type=\"submit\" color=\"primary\" className=\"waves-effect waves-light me-1\">\n                          Submit\n                        </Button>{\" \"}\n                        <Button type=\"reset\" color=\"secondary\" className=\"waves-effect\">\n                          Cancel\n                        </Button>\n                      </div>\n                    </FormGroup>\n                  </AvForm>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default FormValidations\n"]},"metadata":{},"sourceType":"module"}