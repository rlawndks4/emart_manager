{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\"; // Crypto Redux States\n\nimport { GET_INVOICES, GET_INVOICE_DETAIL } from \"./actionTypes\";\nimport { getInvoicesSuccess, getInvoicesFail, getInvoiceDetailSuccess, getInvoiceDetailFail } from \"./actions\"; //Include Both Helper File with needed methods\n\nimport { getInvoices, getInvoiceDetail } from \"../../helpers/fakebackend_helper\";\n\nfunction* fetchInvoices() {\n  try {\n    const response = yield call(getInvoices);\n    yield put(getInvoicesSuccess(response));\n  } catch (error) {\n    yield put(getInvoicesFail(error));\n  }\n}\n\nfunction* fetchInvoiceDetail({\n  invoiceId\n}) {\n  try {\n    const response = yield call(getInvoiceDetail, invoiceId);\n    yield put(getInvoiceDetailSuccess(response));\n  } catch (error) {\n    yield put(getInvoiceDetailFail(error));\n  }\n}\n\nfunction* invoiceSaga() {\n  yield takeEvery(GET_INVOICES, fetchInvoices);\n  yield takeEvery(GET_INVOICE_DETAIL, fetchInvoiceDetail);\n}\n\nexport default invoiceSaga;","map":{"version":3,"sources":["C:/Users/SEC/Desktop/myProject/emart_manage_juan/src/store/invoices/saga.js"],"names":["call","put","takeEvery","GET_INVOICES","GET_INVOICE_DETAIL","getInvoicesSuccess","getInvoicesFail","getInvoiceDetailSuccess","getInvoiceDetailFail","getInvoices","getInvoiceDetail","fetchInvoices","response","error","fetchInvoiceDetail","invoiceId","invoiceSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC,C,CAEA;;AACA,SAASC,YAAT,EAAuBC,kBAAvB,QAAiD,eAAjD;AACA,SACEC,kBADF,EAEEC,eAFF,EAGEC,uBAHF,EAIEC,oBAJF,QAKO,WALP,C,CAOA;;AACA,SAASC,WAAT,EAAsBC,gBAAtB,QAA8C,kCAA9C;;AAEA,UAAUC,aAAV,GAA0B;AACxB,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMZ,IAAI,CAACS,WAAD,CAA3B;AACA,UAAMR,GAAG,CAACI,kBAAkB,CAACO,QAAD,CAAnB,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMZ,GAAG,CAACK,eAAe,CAACO,KAAD,CAAhB,CAAT;AACD;AACF;;AAED,UAAUC,kBAAV,CAA6B;AAAEC,EAAAA;AAAF,CAA7B,EAA4C;AAC1C,MAAI;AACF,UAAMH,QAAQ,GAAG,MAAMZ,IAAI,CAACU,gBAAD,EAAmBK,SAAnB,CAA3B;AACA,UAAMd,GAAG,CAACM,uBAAuB,CAACK,QAAD,CAAxB,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMZ,GAAG,CAACO,oBAAoB,CAACK,KAAD,CAArB,CAAT;AACD;AACF;;AAED,UAAUG,WAAV,GAAwB;AACtB,QAAMd,SAAS,CAACC,YAAD,EAAeQ,aAAf,CAAf;AACA,QAAMT,SAAS,CAACE,kBAAD,EAAqBU,kBAArB,CAAf;AACD;;AAED,eAAeE,WAAf","sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\"\n\n// Crypto Redux States\nimport { GET_INVOICES, GET_INVOICE_DETAIL } from \"./actionTypes\"\nimport {\n  getInvoicesSuccess,\n  getInvoicesFail,\n  getInvoiceDetailSuccess,\n  getInvoiceDetailFail,\n} from \"./actions\"\n\n//Include Both Helper File with needed methods\nimport { getInvoices, getInvoiceDetail } from \"../../helpers/fakebackend_helper\"\n\nfunction* fetchInvoices() {\n  try {\n    const response = yield call(getInvoices)\n    yield put(getInvoicesSuccess(response))\n  } catch (error) {\n    yield put(getInvoicesFail(error))\n  }\n}\n\nfunction* fetchInvoiceDetail({ invoiceId }) {\n  try {\n    const response = yield call(getInvoiceDetail, invoiceId)\n    yield put(getInvoiceDetailSuccess(response))\n  } catch (error) {\n    yield put(getInvoiceDetailFail(error))\n  }\n}\n\nfunction* invoiceSaga() {\n  yield takeEvery(GET_INVOICES, fetchInvoices)\n  yield takeEvery(GET_INVOICE_DETAIL, fetchInvoiceDetail)\n}\n\nexport default invoiceSaga\n"]},"metadata":{},"sourceType":"module"}